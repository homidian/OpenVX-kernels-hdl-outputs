-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Sobel_vxConvertColor_tile_Loop_l1_pr_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_in_V_pixel_0_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_0_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_0_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_1_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_1_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_1_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_2_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_2_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_2_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_3_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_3_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_3_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_4_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_4_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_4_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_5_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_5_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_5_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_6_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_6_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_6_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_7_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_7_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_7_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_8_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_8_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_8_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_9_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_9_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_9_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_10_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_10_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_10_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_11_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_11_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_11_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_12_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_12_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_12_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_13_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_13_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_13_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_14_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_14_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_14_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_15_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_15_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_15_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_16_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_16_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_16_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_17_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_17_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_17_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_18_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_18_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_18_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_19_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_19_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_19_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_20_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_20_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_20_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_21_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_21_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_21_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_22_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_22_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_22_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_23_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_23_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_23_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_24_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_24_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_24_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_25_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_25_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_25_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_26_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_26_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_26_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_27_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_27_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_27_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_28_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_28_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_28_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_29_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_29_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_29_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_30_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_30_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_30_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_31_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_31_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_31_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_32_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_32_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_32_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_33_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_33_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_33_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_34_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_34_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_34_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_35_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_35_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_35_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_36_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_36_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_36_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_37_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_37_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_37_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_38_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_38_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_38_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_39_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_39_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_39_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_40_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_40_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_40_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_41_r_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_41_r_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_41_r_read : OUT STD_LOGIC;
    strm_in_V_pixel_0_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_0_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_0_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_1_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_1_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_1_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_2_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_2_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_2_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_3_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_3_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_3_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_4_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_4_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_4_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_5_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_5_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_5_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_6_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_6_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_6_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_7_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_7_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_7_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_8_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_8_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_8_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_9_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_9_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_9_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_10_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_10_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_10_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_11_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_11_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_11_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_12_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_12_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_12_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_13_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_13_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_13_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_14_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_14_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_14_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_15_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_15_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_15_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_16_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_16_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_16_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_17_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_17_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_17_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_18_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_18_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_18_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_19_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_19_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_19_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_20_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_20_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_20_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_21_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_21_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_21_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_22_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_22_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_22_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_23_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_23_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_23_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_24_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_24_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_24_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_25_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_25_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_25_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_26_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_26_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_26_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_27_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_27_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_27_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_28_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_28_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_28_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_29_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_29_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_29_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_30_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_30_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_30_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_31_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_31_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_31_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_32_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_32_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_32_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_33_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_33_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_33_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_34_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_34_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_34_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_35_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_35_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_35_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_36_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_36_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_36_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_37_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_37_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_37_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_38_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_38_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_38_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_39_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_39_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_39_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_40_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_40_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_40_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_41_g_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_41_g_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_41_g_read : OUT STD_LOGIC;
    strm_in_V_pixel_0_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_0_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_0_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_1_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_1_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_1_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_2_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_2_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_2_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_3_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_3_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_3_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_4_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_4_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_4_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_5_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_5_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_5_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_6_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_6_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_6_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_7_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_7_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_7_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_8_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_8_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_8_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_9_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_9_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_9_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_10_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_10_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_10_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_11_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_11_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_11_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_12_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_12_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_12_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_13_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_13_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_13_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_14_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_14_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_14_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_15_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_15_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_15_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_16_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_16_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_16_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_17_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_17_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_17_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_18_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_18_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_18_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_19_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_19_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_19_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_20_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_20_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_20_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_21_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_21_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_21_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_22_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_22_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_22_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_23_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_23_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_23_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_24_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_24_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_24_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_25_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_25_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_25_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_26_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_26_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_26_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_27_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_27_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_27_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_28_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_28_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_28_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_29_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_29_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_29_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_30_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_30_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_30_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_31_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_31_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_31_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_32_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_32_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_32_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_33_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_33_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_33_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_34_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_34_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_34_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_35_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_35_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_35_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_36_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_36_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_36_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_37_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_37_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_37_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_38_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_38_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_38_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_39_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_39_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_39_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_40_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_40_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_40_b_read : OUT STD_LOGIC;
    strm_in_V_pixel_41_b_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_in_V_pixel_41_b_empty_n : IN STD_LOGIC;
    strm_in_V_pixel_41_b_read : OUT STD_LOGIC;
    strm_out_V_pixel_0_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_0_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_0_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_1_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_1_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_1_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_2_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_2_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_2_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_3_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_3_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_3_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_4_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_4_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_4_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_5_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_5_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_5_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_6_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_6_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_6_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_7_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_7_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_7_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_8_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_8_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_8_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_9_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_9_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_9_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_10_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_10_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_10_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_11_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_11_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_11_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_12_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_12_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_12_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_13_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_13_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_13_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_14_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_14_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_14_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_15_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_15_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_15_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_16_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_16_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_16_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_17_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_17_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_17_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_18_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_18_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_18_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_19_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_19_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_19_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_20_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_20_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_20_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_21_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_21_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_21_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_22_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_22_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_22_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_23_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_23_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_23_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_24_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_24_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_24_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_25_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_25_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_25_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_26_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_26_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_26_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_27_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_27_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_27_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_28_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_28_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_28_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_29_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_29_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_29_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_30_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_30_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_30_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_31_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_31_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_31_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_32_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_32_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_32_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_33_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_33_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_33_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_34_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_34_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_34_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_35_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_35_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_35_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_36_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_36_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_36_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_37_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_37_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_37_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_38_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_38_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_38_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_39_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_39_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_39_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_40_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_40_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_40_luma_write : OUT STD_LOGIC;
    strm_out_V_pixel_41_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_41_luma_full_n : IN STD_LOGIC;
    strm_out_V_pixel_41_luma_write : OUT STD_LOGIC );
end;


architecture behav of Sobel_vxConvertColor_tile_Loop_l1_pr_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_pp0_stg0_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st6_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_21 : BOOLEAN;
    signal strm_in_V_pixel_0_r_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_pp0_stg0_fsm_1 : STD_LOGIC;
    signal ap_sig_706 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal exitcond1_reg_3055 : STD_LOGIC_VECTOR (0 downto 0);
    signal strm_in_V_pixel_1_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_2_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_3_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_4_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_5_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_6_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_7_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_8_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_9_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_10_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_11_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_12_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_13_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_14_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_15_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_16_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_17_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_18_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_19_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_20_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_21_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_22_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_23_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_24_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_25_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_26_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_27_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_28_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_29_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_30_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_31_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_32_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_33_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_34_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_35_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_36_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_37_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_38_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_39_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_40_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_41_r_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_0_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_1_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_2_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_3_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_4_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_5_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_6_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_7_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_8_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_9_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_10_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_11_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_12_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_13_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_14_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_15_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_16_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_17_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_18_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_19_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_20_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_21_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_22_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_23_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_24_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_25_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_26_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_27_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_28_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_29_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_30_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_31_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_32_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_33_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_34_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_35_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_36_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_37_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_38_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_39_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_40_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_41_g_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_0_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_1_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_2_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_3_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_4_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_5_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_6_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_7_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_8_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_9_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_10_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_11_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_12_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_13_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_14_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_15_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_16_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_17_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_18_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_19_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_20_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_21_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_22_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_23_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_24_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_25_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_26_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_27_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_28_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_29_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_30_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_31_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_32_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_33_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_34_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_35_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_36_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_37_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_38_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_39_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_40_b_blk_n : STD_LOGIC;
    signal strm_in_V_pixel_41_b_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_0_luma_blk_n : STD_LOGIC;
    signal ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2 : STD_LOGIC_VECTOR (0 downto 0);
    signal strm_out_V_pixel_1_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_2_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_3_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_4_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_5_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_6_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_7_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_8_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_9_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_10_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_11_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_12_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_13_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_14_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_15_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_16_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_17_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_18_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_19_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_20_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_21_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_22_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_23_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_24_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_25_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_26_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_27_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_28_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_29_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_30_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_31_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_32_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_33_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_34_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_35_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_36_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_37_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_38_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_39_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_40_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_41_luma_blk_n : STD_LOGIC;
    signal x_0_i_reg_2108 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond1_fu_2413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal strm_in_V_pixel_4_g0_status : STD_LOGIC;
    signal ap_sig_897 : BOOLEAN;
    signal strm_out_V_pixel_1_luma1_status : STD_LOGIC;
    signal ap_sig_902 : BOOLEAN;
    signal ap_reg_ppstg_exitcond1_reg_3055_pp0_iter1 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_2419_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2119_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_reg_3064 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2126_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_1_reg_3069 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2133_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_2_reg_3074 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2140_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_3_reg_3079 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2147_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_4_reg_3084 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2154_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_5_reg_3089 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2161_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_6_reg_3094 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2168_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_7_reg_3099 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2175_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_8_reg_3104 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2182_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_9_reg_3109 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2189_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_10_reg_3114 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2196_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_11_reg_3119 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2203_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_12_reg_3124 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2210_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_13_reg_3129 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2217_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_14_reg_3134 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2224_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_15_reg_3139 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2231_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_16_reg_3144 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2238_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_17_reg_3149 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2245_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_18_reg_3154 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2252_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_19_reg_3159 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2259_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_20_reg_3164 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2266_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_21_reg_3169 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2273_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_22_reg_3174 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2280_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_23_reg_3179 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2287_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_24_reg_3184 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2294_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_25_reg_3189 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2301_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_26_reg_3194 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2308_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_27_reg_3199 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2315_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_28_reg_3204 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2322_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_29_reg_3209 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2329_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_30_reg_3214 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2336_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_31_reg_3219 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2343_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_32_reg_3224 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2350_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_33_reg_3229 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2357_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_34_reg_3234 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2364_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_35_reg_3239 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2371_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_36_reg_3244 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2378_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_37_reg_3249 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2385_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_38_reg_3254 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2392_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_39_reg_3259 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2399_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_40_reg_3264 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Sobel_rgb2yuv_bt709_fu_2406_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal luma_41_reg_3269 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_1002 : BOOLEAN;
    signal grp_Sobel_rgb2yuv_bt709_fu_2119_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2126_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2133_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2140_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2147_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2154_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2161_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2168_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2175_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2182_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2189_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2196_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2203_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2210_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2217_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2224_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2231_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2238_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2245_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2252_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2259_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2266_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2273_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2280_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2287_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2294_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2301_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2308_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2315_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2322_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2329_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2336_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2343_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2350_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2357_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2364_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2371_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2378_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2385_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2392_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2399_ap_ce : STD_LOGIC;
    signal grp_Sobel_rgb2yuv_bt709_fu_2406_ap_ce : STD_LOGIC;
    signal strm_in_V_pixel_4_g0_update : STD_LOGIC;
    signal strm_out_V_pixel_1_luma1_update : STD_LOGIC;
    signal ap_sig_cseq_ST_st6_fsm_2 : STD_LOGIC;
    signal ap_sig_17501 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);

    component Sobel_rgb2yuv_bt709 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        r : IN STD_LOGIC_VECTOR (7 downto 0);
        g : IN STD_LOGIC_VECTOR (7 downto 0);
        b : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_Sobel_rgb2yuv_bt709_fu_2119 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_0_r_dout,
        g => strm_in_V_pixel_0_g_dout,
        b => strm_in_V_pixel_0_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2119_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2119_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2126 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_1_r_dout,
        g => strm_in_V_pixel_1_g_dout,
        b => strm_in_V_pixel_1_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2126_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2126_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2133 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_2_r_dout,
        g => strm_in_V_pixel_2_g_dout,
        b => strm_in_V_pixel_2_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2133_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2133_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2140 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_3_r_dout,
        g => strm_in_V_pixel_3_g_dout,
        b => strm_in_V_pixel_3_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2140_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2140_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2147 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_4_r_dout,
        g => strm_in_V_pixel_4_g_dout,
        b => strm_in_V_pixel_4_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2147_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2147_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2154 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_5_r_dout,
        g => strm_in_V_pixel_5_g_dout,
        b => strm_in_V_pixel_5_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2154_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2154_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2161 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_6_r_dout,
        g => strm_in_V_pixel_6_g_dout,
        b => strm_in_V_pixel_6_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2161_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2161_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2168 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_7_r_dout,
        g => strm_in_V_pixel_7_g_dout,
        b => strm_in_V_pixel_7_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2168_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2168_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2175 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_8_r_dout,
        g => strm_in_V_pixel_8_g_dout,
        b => strm_in_V_pixel_8_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2175_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2175_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2182 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_9_r_dout,
        g => strm_in_V_pixel_9_g_dout,
        b => strm_in_V_pixel_9_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2182_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2182_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2189 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_10_r_dout,
        g => strm_in_V_pixel_10_g_dout,
        b => strm_in_V_pixel_10_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2189_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2189_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2196 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_11_r_dout,
        g => strm_in_V_pixel_11_g_dout,
        b => strm_in_V_pixel_11_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2196_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2196_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2203 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_12_r_dout,
        g => strm_in_V_pixel_12_g_dout,
        b => strm_in_V_pixel_12_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2203_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2203_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2210 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_13_r_dout,
        g => strm_in_V_pixel_13_g_dout,
        b => strm_in_V_pixel_13_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2210_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2210_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2217 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_14_r_dout,
        g => strm_in_V_pixel_14_g_dout,
        b => strm_in_V_pixel_14_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2217_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2217_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2224 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_15_r_dout,
        g => strm_in_V_pixel_15_g_dout,
        b => strm_in_V_pixel_15_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2224_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2224_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2231 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_16_r_dout,
        g => strm_in_V_pixel_16_g_dout,
        b => strm_in_V_pixel_16_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2231_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2231_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2238 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_17_r_dout,
        g => strm_in_V_pixel_17_g_dout,
        b => strm_in_V_pixel_17_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2238_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2238_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2245 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_18_r_dout,
        g => strm_in_V_pixel_18_g_dout,
        b => strm_in_V_pixel_18_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2245_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2245_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2252 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_19_r_dout,
        g => strm_in_V_pixel_19_g_dout,
        b => strm_in_V_pixel_19_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2252_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2252_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2259 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_20_r_dout,
        g => strm_in_V_pixel_20_g_dout,
        b => strm_in_V_pixel_20_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2259_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2259_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2266 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_21_r_dout,
        g => strm_in_V_pixel_21_g_dout,
        b => strm_in_V_pixel_21_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2266_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2266_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2273 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_22_r_dout,
        g => strm_in_V_pixel_22_g_dout,
        b => strm_in_V_pixel_22_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2273_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2273_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2280 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_23_r_dout,
        g => strm_in_V_pixel_23_g_dout,
        b => strm_in_V_pixel_23_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2280_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2280_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2287 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_24_r_dout,
        g => strm_in_V_pixel_24_g_dout,
        b => strm_in_V_pixel_24_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2287_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2287_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2294 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_25_r_dout,
        g => strm_in_V_pixel_25_g_dout,
        b => strm_in_V_pixel_25_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2294_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2294_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2301 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_26_r_dout,
        g => strm_in_V_pixel_26_g_dout,
        b => strm_in_V_pixel_26_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2301_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2301_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2308 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_27_r_dout,
        g => strm_in_V_pixel_27_g_dout,
        b => strm_in_V_pixel_27_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2308_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2308_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2315 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_28_r_dout,
        g => strm_in_V_pixel_28_g_dout,
        b => strm_in_V_pixel_28_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2315_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2315_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2322 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_29_r_dout,
        g => strm_in_V_pixel_29_g_dout,
        b => strm_in_V_pixel_29_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2322_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2322_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2329 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_30_r_dout,
        g => strm_in_V_pixel_30_g_dout,
        b => strm_in_V_pixel_30_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2329_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2329_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2336 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_31_r_dout,
        g => strm_in_V_pixel_31_g_dout,
        b => strm_in_V_pixel_31_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2336_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2336_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2343 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_32_r_dout,
        g => strm_in_V_pixel_32_g_dout,
        b => strm_in_V_pixel_32_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2343_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2343_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2350 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_33_r_dout,
        g => strm_in_V_pixel_33_g_dout,
        b => strm_in_V_pixel_33_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2350_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2350_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2357 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_34_r_dout,
        g => strm_in_V_pixel_34_g_dout,
        b => strm_in_V_pixel_34_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2357_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2357_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2364 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_35_r_dout,
        g => strm_in_V_pixel_35_g_dout,
        b => strm_in_V_pixel_35_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2364_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2364_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2371 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_36_r_dout,
        g => strm_in_V_pixel_36_g_dout,
        b => strm_in_V_pixel_36_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2371_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2371_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2378 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_37_r_dout,
        g => strm_in_V_pixel_37_g_dout,
        b => strm_in_V_pixel_37_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2378_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2378_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2385 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_38_r_dout,
        g => strm_in_V_pixel_38_g_dout,
        b => strm_in_V_pixel_38_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2385_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2385_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2392 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_39_r_dout,
        g => strm_in_V_pixel_39_g_dout,
        b => strm_in_V_pixel_39_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2392_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2392_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2399 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_40_r_dout,
        g => strm_in_V_pixel_40_g_dout,
        b => strm_in_V_pixel_40_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2399_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2399_ap_ce);

    grp_Sobel_rgb2yuv_bt709_fu_2406 : component Sobel_rgb2yuv_bt709
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        r => strm_in_V_pixel_41_r_dout,
        g => strm_in_V_pixel_41_g_dout,
        b => strm_in_V_pixel_41_b_dout,
        ap_return => grp_Sobel_rgb2yuv_bt709_fu_2406_ap_return,
        ap_ce => grp_Sobel_rgb2yuv_bt709_fu_2406_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_2)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))) and not((ap_const_lv1_0 = exitcond1_fu_2413_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_1002))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))) and (ap_const_lv1_0 = exitcond1_fu_2413_p2))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_1002)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))) and not((ap_const_lv1_0 = exitcond1_fu_2413_p2))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902)))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902)))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_1002))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x_0_i_reg_2108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_1002))) then 
                x_0_i_reg_2108 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))) and (ap_const_lv1_0 = exitcond1_fu_2413_p2))) then 
                x_0_i_reg_2108 <= x_fu_2419_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then
                ap_reg_ppstg_exitcond1_reg_3055_pp0_iter1 <= exitcond1_reg_3055;
                exitcond1_reg_3055 <= exitcond1_fu_2413_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902)))) then
                ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2 <= ap_reg_ppstg_exitcond1_reg_3055_pp0_iter1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter1))) then
                luma_10_reg_3114 <= grp_Sobel_rgb2yuv_bt709_fu_2189_ap_return;
                luma_11_reg_3119 <= grp_Sobel_rgb2yuv_bt709_fu_2196_ap_return;
                luma_12_reg_3124 <= grp_Sobel_rgb2yuv_bt709_fu_2203_ap_return;
                luma_13_reg_3129 <= grp_Sobel_rgb2yuv_bt709_fu_2210_ap_return;
                luma_14_reg_3134 <= grp_Sobel_rgb2yuv_bt709_fu_2217_ap_return;
                luma_15_reg_3139 <= grp_Sobel_rgb2yuv_bt709_fu_2224_ap_return;
                luma_16_reg_3144 <= grp_Sobel_rgb2yuv_bt709_fu_2231_ap_return;
                luma_17_reg_3149 <= grp_Sobel_rgb2yuv_bt709_fu_2238_ap_return;
                luma_18_reg_3154 <= grp_Sobel_rgb2yuv_bt709_fu_2245_ap_return;
                luma_19_reg_3159 <= grp_Sobel_rgb2yuv_bt709_fu_2252_ap_return;
                luma_1_reg_3069 <= grp_Sobel_rgb2yuv_bt709_fu_2126_ap_return;
                luma_20_reg_3164 <= grp_Sobel_rgb2yuv_bt709_fu_2259_ap_return;
                luma_21_reg_3169 <= grp_Sobel_rgb2yuv_bt709_fu_2266_ap_return;
                luma_22_reg_3174 <= grp_Sobel_rgb2yuv_bt709_fu_2273_ap_return;
                luma_23_reg_3179 <= grp_Sobel_rgb2yuv_bt709_fu_2280_ap_return;
                luma_24_reg_3184 <= grp_Sobel_rgb2yuv_bt709_fu_2287_ap_return;
                luma_25_reg_3189 <= grp_Sobel_rgb2yuv_bt709_fu_2294_ap_return;
                luma_26_reg_3194 <= grp_Sobel_rgb2yuv_bt709_fu_2301_ap_return;
                luma_27_reg_3199 <= grp_Sobel_rgb2yuv_bt709_fu_2308_ap_return;
                luma_28_reg_3204 <= grp_Sobel_rgb2yuv_bt709_fu_2315_ap_return;
                luma_29_reg_3209 <= grp_Sobel_rgb2yuv_bt709_fu_2322_ap_return;
                luma_2_reg_3074 <= grp_Sobel_rgb2yuv_bt709_fu_2133_ap_return;
                luma_30_reg_3214 <= grp_Sobel_rgb2yuv_bt709_fu_2329_ap_return;
                luma_31_reg_3219 <= grp_Sobel_rgb2yuv_bt709_fu_2336_ap_return;
                luma_32_reg_3224 <= grp_Sobel_rgb2yuv_bt709_fu_2343_ap_return;
                luma_33_reg_3229 <= grp_Sobel_rgb2yuv_bt709_fu_2350_ap_return;
                luma_34_reg_3234 <= grp_Sobel_rgb2yuv_bt709_fu_2357_ap_return;
                luma_35_reg_3239 <= grp_Sobel_rgb2yuv_bt709_fu_2364_ap_return;
                luma_36_reg_3244 <= grp_Sobel_rgb2yuv_bt709_fu_2371_ap_return;
                luma_37_reg_3249 <= grp_Sobel_rgb2yuv_bt709_fu_2378_ap_return;
                luma_38_reg_3254 <= grp_Sobel_rgb2yuv_bt709_fu_2385_ap_return;
                luma_39_reg_3259 <= grp_Sobel_rgb2yuv_bt709_fu_2392_ap_return;
                luma_3_reg_3079 <= grp_Sobel_rgb2yuv_bt709_fu_2140_ap_return;
                luma_40_reg_3264 <= grp_Sobel_rgb2yuv_bt709_fu_2399_ap_return;
                luma_41_reg_3269 <= grp_Sobel_rgb2yuv_bt709_fu_2406_ap_return;
                luma_4_reg_3084 <= grp_Sobel_rgb2yuv_bt709_fu_2147_ap_return;
                luma_5_reg_3089 <= grp_Sobel_rgb2yuv_bt709_fu_2154_ap_return;
                luma_6_reg_3094 <= grp_Sobel_rgb2yuv_bt709_fu_2161_ap_return;
                luma_7_reg_3099 <= grp_Sobel_rgb2yuv_bt709_fu_2168_ap_return;
                luma_8_reg_3104 <= grp_Sobel_rgb2yuv_bt709_fu_2175_ap_return;
                luma_9_reg_3109 <= grp_Sobel_rgb2yuv_bt709_fu_2182_ap_return;
                luma_reg_3064 <= grp_Sobel_rgb2yuv_bt709_fu_2119_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, exitcond1_fu_2413_p2, ap_sig_897, ap_sig_902, ap_sig_1002)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_1002)) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_pp0_stg0_fsm_1 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))) and not((ap_const_lv1_0 = exitcond1_fu_2413_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))) and not((ap_const_lv1_0 = exitcond1_fu_2413_p2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_1;
                end if;
            when ap_ST_st6_fsm_2 => 
                ap_NS_fsm <= ap_ST_st1_fsm_0;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st6_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st6_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_1002_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_1002 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_sig_17501_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_17501 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_21_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_21 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_706_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_706 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_897_assign_proc : process(exitcond1_reg_3055, strm_in_V_pixel_4_g0_status)
    begin
                ap_sig_897 <= ((exitcond1_reg_3055 = ap_const_lv1_0) and (strm_in_V_pixel_4_g0_status = ap_const_logic_0));
    end process;


    ap_sig_902_assign_proc : process(ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2, strm_out_V_pixel_1_luma1_status)
    begin
                ap_sig_902 <= ((ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2) and (strm_out_V_pixel_1_luma1_status = ap_const_logic_0));
    end process;


    ap_sig_cseq_ST_pp0_stg0_fsm_1_assign_proc : process(ap_sig_706)
    begin
        if (ap_sig_706) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_21)
    begin
        if (ap_sig_21) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_2_assign_proc : process(ap_sig_17501)
    begin
        if (ap_sig_17501) then 
            ap_sig_cseq_ST_st6_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_2413_p2 <= "1" when (x_0_i_reg_2108 = ap_const_lv9_1E0) else "0";

    grp_Sobel_rgb2yuv_bt709_fu_2119_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2119_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2119_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2126_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2126_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2126_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2133_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2133_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2133_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2140_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2140_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2140_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2147_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2147_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2147_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2154_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2154_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2154_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2161_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2161_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2161_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2168_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2168_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2168_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2175_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2175_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2175_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2182_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2182_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2182_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2189_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2189_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2189_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2196_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2196_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2196_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2203_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2203_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2203_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2210_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2210_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2210_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2217_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2217_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2217_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2224_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2224_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2224_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2231_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2231_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2231_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2238_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2238_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2238_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2245_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2245_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2245_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2252_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2252_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2252_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2259_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2259_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2259_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2266_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2266_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2266_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2273_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2273_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2273_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2280_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2280_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2280_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2287_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2287_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2287_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2294_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2294_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2294_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2301_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2301_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2301_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2308_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2308_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2308_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2315_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2315_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2315_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2322_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2322_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2322_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2329_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2329_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2329_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2336_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2336_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2336_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2343_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2343_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2343_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2350_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2350_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2350_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2357_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2357_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2357_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2364_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2364_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2364_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2371_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2371_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2371_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2378_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2378_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2378_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2385_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2385_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2385_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2392_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2392_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2392_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2399_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2399_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2399_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_Sobel_rgb2yuv_bt709_fu_2406_ap_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            grp_Sobel_rgb2yuv_bt709_fu_2406_ap_ce <= ap_const_logic_1;
        else 
            grp_Sobel_rgb2yuv_bt709_fu_2406_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    strm_in_V_pixel_0_b_blk_n_assign_proc : process(strm_in_V_pixel_0_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_0_b_blk_n <= strm_in_V_pixel_0_b_empty_n;
        else 
            strm_in_V_pixel_0_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_0_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_0_g_blk_n_assign_proc : process(strm_in_V_pixel_0_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_0_g_blk_n <= strm_in_V_pixel_0_g_empty_n;
        else 
            strm_in_V_pixel_0_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_0_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_0_r_blk_n_assign_proc : process(strm_in_V_pixel_0_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_0_r_blk_n <= strm_in_V_pixel_0_r_empty_n;
        else 
            strm_in_V_pixel_0_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_0_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_10_b_blk_n_assign_proc : process(strm_in_V_pixel_10_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_10_b_blk_n <= strm_in_V_pixel_10_b_empty_n;
        else 
            strm_in_V_pixel_10_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_10_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_10_g_blk_n_assign_proc : process(strm_in_V_pixel_10_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_10_g_blk_n <= strm_in_V_pixel_10_g_empty_n;
        else 
            strm_in_V_pixel_10_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_10_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_10_r_blk_n_assign_proc : process(strm_in_V_pixel_10_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_10_r_blk_n <= strm_in_V_pixel_10_r_empty_n;
        else 
            strm_in_V_pixel_10_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_10_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_11_b_blk_n_assign_proc : process(strm_in_V_pixel_11_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_11_b_blk_n <= strm_in_V_pixel_11_b_empty_n;
        else 
            strm_in_V_pixel_11_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_11_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_11_g_blk_n_assign_proc : process(strm_in_V_pixel_11_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_11_g_blk_n <= strm_in_V_pixel_11_g_empty_n;
        else 
            strm_in_V_pixel_11_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_11_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_11_r_blk_n_assign_proc : process(strm_in_V_pixel_11_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_11_r_blk_n <= strm_in_V_pixel_11_r_empty_n;
        else 
            strm_in_V_pixel_11_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_11_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_12_b_blk_n_assign_proc : process(strm_in_V_pixel_12_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_12_b_blk_n <= strm_in_V_pixel_12_b_empty_n;
        else 
            strm_in_V_pixel_12_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_12_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_12_g_blk_n_assign_proc : process(strm_in_V_pixel_12_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_12_g_blk_n <= strm_in_V_pixel_12_g_empty_n;
        else 
            strm_in_V_pixel_12_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_12_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_12_r_blk_n_assign_proc : process(strm_in_V_pixel_12_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_12_r_blk_n <= strm_in_V_pixel_12_r_empty_n;
        else 
            strm_in_V_pixel_12_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_12_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_13_b_blk_n_assign_proc : process(strm_in_V_pixel_13_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_13_b_blk_n <= strm_in_V_pixel_13_b_empty_n;
        else 
            strm_in_V_pixel_13_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_13_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_13_g_blk_n_assign_proc : process(strm_in_V_pixel_13_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_13_g_blk_n <= strm_in_V_pixel_13_g_empty_n;
        else 
            strm_in_V_pixel_13_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_13_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_13_r_blk_n_assign_proc : process(strm_in_V_pixel_13_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_13_r_blk_n <= strm_in_V_pixel_13_r_empty_n;
        else 
            strm_in_V_pixel_13_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_13_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_14_b_blk_n_assign_proc : process(strm_in_V_pixel_14_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_14_b_blk_n <= strm_in_V_pixel_14_b_empty_n;
        else 
            strm_in_V_pixel_14_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_14_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_14_g_blk_n_assign_proc : process(strm_in_V_pixel_14_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_14_g_blk_n <= strm_in_V_pixel_14_g_empty_n;
        else 
            strm_in_V_pixel_14_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_14_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_14_r_blk_n_assign_proc : process(strm_in_V_pixel_14_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_14_r_blk_n <= strm_in_V_pixel_14_r_empty_n;
        else 
            strm_in_V_pixel_14_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_14_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_15_b_blk_n_assign_proc : process(strm_in_V_pixel_15_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_15_b_blk_n <= strm_in_V_pixel_15_b_empty_n;
        else 
            strm_in_V_pixel_15_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_15_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_15_g_blk_n_assign_proc : process(strm_in_V_pixel_15_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_15_g_blk_n <= strm_in_V_pixel_15_g_empty_n;
        else 
            strm_in_V_pixel_15_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_15_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_15_r_blk_n_assign_proc : process(strm_in_V_pixel_15_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_15_r_blk_n <= strm_in_V_pixel_15_r_empty_n;
        else 
            strm_in_V_pixel_15_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_15_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_16_b_blk_n_assign_proc : process(strm_in_V_pixel_16_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_16_b_blk_n <= strm_in_V_pixel_16_b_empty_n;
        else 
            strm_in_V_pixel_16_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_16_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_16_g_blk_n_assign_proc : process(strm_in_V_pixel_16_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_16_g_blk_n <= strm_in_V_pixel_16_g_empty_n;
        else 
            strm_in_V_pixel_16_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_16_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_16_r_blk_n_assign_proc : process(strm_in_V_pixel_16_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_16_r_blk_n <= strm_in_V_pixel_16_r_empty_n;
        else 
            strm_in_V_pixel_16_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_16_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_17_b_blk_n_assign_proc : process(strm_in_V_pixel_17_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_17_b_blk_n <= strm_in_V_pixel_17_b_empty_n;
        else 
            strm_in_V_pixel_17_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_17_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_17_g_blk_n_assign_proc : process(strm_in_V_pixel_17_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_17_g_blk_n <= strm_in_V_pixel_17_g_empty_n;
        else 
            strm_in_V_pixel_17_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_17_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_17_r_blk_n_assign_proc : process(strm_in_V_pixel_17_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_17_r_blk_n <= strm_in_V_pixel_17_r_empty_n;
        else 
            strm_in_V_pixel_17_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_17_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_18_b_blk_n_assign_proc : process(strm_in_V_pixel_18_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_18_b_blk_n <= strm_in_V_pixel_18_b_empty_n;
        else 
            strm_in_V_pixel_18_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_18_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_18_g_blk_n_assign_proc : process(strm_in_V_pixel_18_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_18_g_blk_n <= strm_in_V_pixel_18_g_empty_n;
        else 
            strm_in_V_pixel_18_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_18_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_18_r_blk_n_assign_proc : process(strm_in_V_pixel_18_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_18_r_blk_n <= strm_in_V_pixel_18_r_empty_n;
        else 
            strm_in_V_pixel_18_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_18_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_19_b_blk_n_assign_proc : process(strm_in_V_pixel_19_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_19_b_blk_n <= strm_in_V_pixel_19_b_empty_n;
        else 
            strm_in_V_pixel_19_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_19_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_19_g_blk_n_assign_proc : process(strm_in_V_pixel_19_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_19_g_blk_n <= strm_in_V_pixel_19_g_empty_n;
        else 
            strm_in_V_pixel_19_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_19_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_19_r_blk_n_assign_proc : process(strm_in_V_pixel_19_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_19_r_blk_n <= strm_in_V_pixel_19_r_empty_n;
        else 
            strm_in_V_pixel_19_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_19_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_1_b_blk_n_assign_proc : process(strm_in_V_pixel_1_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_1_b_blk_n <= strm_in_V_pixel_1_b_empty_n;
        else 
            strm_in_V_pixel_1_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_1_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_1_g_blk_n_assign_proc : process(strm_in_V_pixel_1_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_1_g_blk_n <= strm_in_V_pixel_1_g_empty_n;
        else 
            strm_in_V_pixel_1_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_1_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_1_r_blk_n_assign_proc : process(strm_in_V_pixel_1_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_1_r_blk_n <= strm_in_V_pixel_1_r_empty_n;
        else 
            strm_in_V_pixel_1_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_1_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_20_b_blk_n_assign_proc : process(strm_in_V_pixel_20_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_20_b_blk_n <= strm_in_V_pixel_20_b_empty_n;
        else 
            strm_in_V_pixel_20_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_20_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_20_g_blk_n_assign_proc : process(strm_in_V_pixel_20_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_20_g_blk_n <= strm_in_V_pixel_20_g_empty_n;
        else 
            strm_in_V_pixel_20_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_20_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_20_r_blk_n_assign_proc : process(strm_in_V_pixel_20_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_20_r_blk_n <= strm_in_V_pixel_20_r_empty_n;
        else 
            strm_in_V_pixel_20_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_20_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_21_b_blk_n_assign_proc : process(strm_in_V_pixel_21_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_21_b_blk_n <= strm_in_V_pixel_21_b_empty_n;
        else 
            strm_in_V_pixel_21_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_21_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_21_g_blk_n_assign_proc : process(strm_in_V_pixel_21_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_21_g_blk_n <= strm_in_V_pixel_21_g_empty_n;
        else 
            strm_in_V_pixel_21_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_21_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_21_r_blk_n_assign_proc : process(strm_in_V_pixel_21_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_21_r_blk_n <= strm_in_V_pixel_21_r_empty_n;
        else 
            strm_in_V_pixel_21_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_21_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_22_b_blk_n_assign_proc : process(strm_in_V_pixel_22_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_22_b_blk_n <= strm_in_V_pixel_22_b_empty_n;
        else 
            strm_in_V_pixel_22_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_22_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_22_g_blk_n_assign_proc : process(strm_in_V_pixel_22_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_22_g_blk_n <= strm_in_V_pixel_22_g_empty_n;
        else 
            strm_in_V_pixel_22_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_22_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_22_r_blk_n_assign_proc : process(strm_in_V_pixel_22_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_22_r_blk_n <= strm_in_V_pixel_22_r_empty_n;
        else 
            strm_in_V_pixel_22_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_22_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_23_b_blk_n_assign_proc : process(strm_in_V_pixel_23_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_23_b_blk_n <= strm_in_V_pixel_23_b_empty_n;
        else 
            strm_in_V_pixel_23_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_23_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_23_g_blk_n_assign_proc : process(strm_in_V_pixel_23_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_23_g_blk_n <= strm_in_V_pixel_23_g_empty_n;
        else 
            strm_in_V_pixel_23_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_23_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_23_r_blk_n_assign_proc : process(strm_in_V_pixel_23_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_23_r_blk_n <= strm_in_V_pixel_23_r_empty_n;
        else 
            strm_in_V_pixel_23_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_23_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_24_b_blk_n_assign_proc : process(strm_in_V_pixel_24_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_24_b_blk_n <= strm_in_V_pixel_24_b_empty_n;
        else 
            strm_in_V_pixel_24_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_24_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_24_g_blk_n_assign_proc : process(strm_in_V_pixel_24_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_24_g_blk_n <= strm_in_V_pixel_24_g_empty_n;
        else 
            strm_in_V_pixel_24_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_24_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_24_r_blk_n_assign_proc : process(strm_in_V_pixel_24_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_24_r_blk_n <= strm_in_V_pixel_24_r_empty_n;
        else 
            strm_in_V_pixel_24_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_24_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_25_b_blk_n_assign_proc : process(strm_in_V_pixel_25_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_25_b_blk_n <= strm_in_V_pixel_25_b_empty_n;
        else 
            strm_in_V_pixel_25_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_25_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_25_g_blk_n_assign_proc : process(strm_in_V_pixel_25_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_25_g_blk_n <= strm_in_V_pixel_25_g_empty_n;
        else 
            strm_in_V_pixel_25_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_25_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_25_r_blk_n_assign_proc : process(strm_in_V_pixel_25_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_25_r_blk_n <= strm_in_V_pixel_25_r_empty_n;
        else 
            strm_in_V_pixel_25_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_25_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_26_b_blk_n_assign_proc : process(strm_in_V_pixel_26_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_26_b_blk_n <= strm_in_V_pixel_26_b_empty_n;
        else 
            strm_in_V_pixel_26_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_26_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_26_g_blk_n_assign_proc : process(strm_in_V_pixel_26_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_26_g_blk_n <= strm_in_V_pixel_26_g_empty_n;
        else 
            strm_in_V_pixel_26_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_26_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_26_r_blk_n_assign_proc : process(strm_in_V_pixel_26_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_26_r_blk_n <= strm_in_V_pixel_26_r_empty_n;
        else 
            strm_in_V_pixel_26_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_26_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_27_b_blk_n_assign_proc : process(strm_in_V_pixel_27_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_27_b_blk_n <= strm_in_V_pixel_27_b_empty_n;
        else 
            strm_in_V_pixel_27_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_27_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_27_g_blk_n_assign_proc : process(strm_in_V_pixel_27_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_27_g_blk_n <= strm_in_V_pixel_27_g_empty_n;
        else 
            strm_in_V_pixel_27_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_27_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_27_r_blk_n_assign_proc : process(strm_in_V_pixel_27_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_27_r_blk_n <= strm_in_V_pixel_27_r_empty_n;
        else 
            strm_in_V_pixel_27_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_27_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_28_b_blk_n_assign_proc : process(strm_in_V_pixel_28_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_28_b_blk_n <= strm_in_V_pixel_28_b_empty_n;
        else 
            strm_in_V_pixel_28_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_28_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_28_g_blk_n_assign_proc : process(strm_in_V_pixel_28_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_28_g_blk_n <= strm_in_V_pixel_28_g_empty_n;
        else 
            strm_in_V_pixel_28_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_28_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_28_r_blk_n_assign_proc : process(strm_in_V_pixel_28_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_28_r_blk_n <= strm_in_V_pixel_28_r_empty_n;
        else 
            strm_in_V_pixel_28_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_28_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_29_b_blk_n_assign_proc : process(strm_in_V_pixel_29_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_29_b_blk_n <= strm_in_V_pixel_29_b_empty_n;
        else 
            strm_in_V_pixel_29_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_29_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_29_g_blk_n_assign_proc : process(strm_in_V_pixel_29_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_29_g_blk_n <= strm_in_V_pixel_29_g_empty_n;
        else 
            strm_in_V_pixel_29_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_29_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_29_r_blk_n_assign_proc : process(strm_in_V_pixel_29_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_29_r_blk_n <= strm_in_V_pixel_29_r_empty_n;
        else 
            strm_in_V_pixel_29_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_29_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_2_b_blk_n_assign_proc : process(strm_in_V_pixel_2_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_2_b_blk_n <= strm_in_V_pixel_2_b_empty_n;
        else 
            strm_in_V_pixel_2_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_2_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_2_g_blk_n_assign_proc : process(strm_in_V_pixel_2_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_2_g_blk_n <= strm_in_V_pixel_2_g_empty_n;
        else 
            strm_in_V_pixel_2_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_2_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_2_r_blk_n_assign_proc : process(strm_in_V_pixel_2_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_2_r_blk_n <= strm_in_V_pixel_2_r_empty_n;
        else 
            strm_in_V_pixel_2_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_2_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_30_b_blk_n_assign_proc : process(strm_in_V_pixel_30_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_30_b_blk_n <= strm_in_V_pixel_30_b_empty_n;
        else 
            strm_in_V_pixel_30_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_30_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_30_g_blk_n_assign_proc : process(strm_in_V_pixel_30_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_30_g_blk_n <= strm_in_V_pixel_30_g_empty_n;
        else 
            strm_in_V_pixel_30_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_30_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_30_r_blk_n_assign_proc : process(strm_in_V_pixel_30_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_30_r_blk_n <= strm_in_V_pixel_30_r_empty_n;
        else 
            strm_in_V_pixel_30_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_30_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_31_b_blk_n_assign_proc : process(strm_in_V_pixel_31_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_31_b_blk_n <= strm_in_V_pixel_31_b_empty_n;
        else 
            strm_in_V_pixel_31_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_31_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_31_g_blk_n_assign_proc : process(strm_in_V_pixel_31_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_31_g_blk_n <= strm_in_V_pixel_31_g_empty_n;
        else 
            strm_in_V_pixel_31_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_31_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_31_r_blk_n_assign_proc : process(strm_in_V_pixel_31_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_31_r_blk_n <= strm_in_V_pixel_31_r_empty_n;
        else 
            strm_in_V_pixel_31_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_31_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_32_b_blk_n_assign_proc : process(strm_in_V_pixel_32_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_32_b_blk_n <= strm_in_V_pixel_32_b_empty_n;
        else 
            strm_in_V_pixel_32_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_32_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_32_g_blk_n_assign_proc : process(strm_in_V_pixel_32_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_32_g_blk_n <= strm_in_V_pixel_32_g_empty_n;
        else 
            strm_in_V_pixel_32_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_32_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_32_r_blk_n_assign_proc : process(strm_in_V_pixel_32_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_32_r_blk_n <= strm_in_V_pixel_32_r_empty_n;
        else 
            strm_in_V_pixel_32_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_32_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_33_b_blk_n_assign_proc : process(strm_in_V_pixel_33_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_33_b_blk_n <= strm_in_V_pixel_33_b_empty_n;
        else 
            strm_in_V_pixel_33_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_33_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_33_g_blk_n_assign_proc : process(strm_in_V_pixel_33_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_33_g_blk_n <= strm_in_V_pixel_33_g_empty_n;
        else 
            strm_in_V_pixel_33_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_33_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_33_r_blk_n_assign_proc : process(strm_in_V_pixel_33_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_33_r_blk_n <= strm_in_V_pixel_33_r_empty_n;
        else 
            strm_in_V_pixel_33_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_33_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_34_b_blk_n_assign_proc : process(strm_in_V_pixel_34_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_34_b_blk_n <= strm_in_V_pixel_34_b_empty_n;
        else 
            strm_in_V_pixel_34_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_34_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_34_g_blk_n_assign_proc : process(strm_in_V_pixel_34_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_34_g_blk_n <= strm_in_V_pixel_34_g_empty_n;
        else 
            strm_in_V_pixel_34_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_34_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_34_r_blk_n_assign_proc : process(strm_in_V_pixel_34_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_34_r_blk_n <= strm_in_V_pixel_34_r_empty_n;
        else 
            strm_in_V_pixel_34_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_34_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_35_b_blk_n_assign_proc : process(strm_in_V_pixel_35_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_35_b_blk_n <= strm_in_V_pixel_35_b_empty_n;
        else 
            strm_in_V_pixel_35_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_35_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_35_g_blk_n_assign_proc : process(strm_in_V_pixel_35_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_35_g_blk_n <= strm_in_V_pixel_35_g_empty_n;
        else 
            strm_in_V_pixel_35_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_35_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_35_r_blk_n_assign_proc : process(strm_in_V_pixel_35_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_35_r_blk_n <= strm_in_V_pixel_35_r_empty_n;
        else 
            strm_in_V_pixel_35_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_35_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_36_b_blk_n_assign_proc : process(strm_in_V_pixel_36_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_36_b_blk_n <= strm_in_V_pixel_36_b_empty_n;
        else 
            strm_in_V_pixel_36_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_36_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_36_g_blk_n_assign_proc : process(strm_in_V_pixel_36_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_36_g_blk_n <= strm_in_V_pixel_36_g_empty_n;
        else 
            strm_in_V_pixel_36_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_36_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_36_r_blk_n_assign_proc : process(strm_in_V_pixel_36_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_36_r_blk_n <= strm_in_V_pixel_36_r_empty_n;
        else 
            strm_in_V_pixel_36_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_36_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_37_b_blk_n_assign_proc : process(strm_in_V_pixel_37_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_37_b_blk_n <= strm_in_V_pixel_37_b_empty_n;
        else 
            strm_in_V_pixel_37_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_37_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_37_g_blk_n_assign_proc : process(strm_in_V_pixel_37_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_37_g_blk_n <= strm_in_V_pixel_37_g_empty_n;
        else 
            strm_in_V_pixel_37_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_37_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_37_r_blk_n_assign_proc : process(strm_in_V_pixel_37_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_37_r_blk_n <= strm_in_V_pixel_37_r_empty_n;
        else 
            strm_in_V_pixel_37_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_37_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_38_b_blk_n_assign_proc : process(strm_in_V_pixel_38_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_38_b_blk_n <= strm_in_V_pixel_38_b_empty_n;
        else 
            strm_in_V_pixel_38_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_38_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_38_g_blk_n_assign_proc : process(strm_in_V_pixel_38_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_38_g_blk_n <= strm_in_V_pixel_38_g_empty_n;
        else 
            strm_in_V_pixel_38_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_38_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_38_r_blk_n_assign_proc : process(strm_in_V_pixel_38_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_38_r_blk_n <= strm_in_V_pixel_38_r_empty_n;
        else 
            strm_in_V_pixel_38_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_38_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_39_b_blk_n_assign_proc : process(strm_in_V_pixel_39_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_39_b_blk_n <= strm_in_V_pixel_39_b_empty_n;
        else 
            strm_in_V_pixel_39_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_39_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_39_g_blk_n_assign_proc : process(strm_in_V_pixel_39_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_39_g_blk_n <= strm_in_V_pixel_39_g_empty_n;
        else 
            strm_in_V_pixel_39_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_39_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_39_r_blk_n_assign_proc : process(strm_in_V_pixel_39_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_39_r_blk_n <= strm_in_V_pixel_39_r_empty_n;
        else 
            strm_in_V_pixel_39_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_39_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_3_b_blk_n_assign_proc : process(strm_in_V_pixel_3_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_3_b_blk_n <= strm_in_V_pixel_3_b_empty_n;
        else 
            strm_in_V_pixel_3_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_3_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_3_g_blk_n_assign_proc : process(strm_in_V_pixel_3_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_3_g_blk_n <= strm_in_V_pixel_3_g_empty_n;
        else 
            strm_in_V_pixel_3_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_3_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_3_r_blk_n_assign_proc : process(strm_in_V_pixel_3_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_3_r_blk_n <= strm_in_V_pixel_3_r_empty_n;
        else 
            strm_in_V_pixel_3_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_3_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_40_b_blk_n_assign_proc : process(strm_in_V_pixel_40_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_40_b_blk_n <= strm_in_V_pixel_40_b_empty_n;
        else 
            strm_in_V_pixel_40_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_40_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_40_g_blk_n_assign_proc : process(strm_in_V_pixel_40_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_40_g_blk_n <= strm_in_V_pixel_40_g_empty_n;
        else 
            strm_in_V_pixel_40_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_40_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_40_r_blk_n_assign_proc : process(strm_in_V_pixel_40_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_40_r_blk_n <= strm_in_V_pixel_40_r_empty_n;
        else 
            strm_in_V_pixel_40_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_40_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_41_b_blk_n_assign_proc : process(strm_in_V_pixel_41_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_41_b_blk_n <= strm_in_V_pixel_41_b_empty_n;
        else 
            strm_in_V_pixel_41_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_41_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_41_g_blk_n_assign_proc : process(strm_in_V_pixel_41_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_41_g_blk_n <= strm_in_V_pixel_41_g_empty_n;
        else 
            strm_in_V_pixel_41_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_41_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_41_r_blk_n_assign_proc : process(strm_in_V_pixel_41_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_41_r_blk_n <= strm_in_V_pixel_41_r_empty_n;
        else 
            strm_in_V_pixel_41_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_41_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_4_b_blk_n_assign_proc : process(strm_in_V_pixel_4_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_4_b_blk_n <= strm_in_V_pixel_4_b_empty_n;
        else 
            strm_in_V_pixel_4_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_4_b_read <= strm_in_V_pixel_4_g0_update;
    strm_in_V_pixel_4_g0_status <= (strm_in_V_pixel_0_r_empty_n and strm_in_V_pixel_1_r_empty_n and strm_in_V_pixel_2_r_empty_n and strm_in_V_pixel_3_r_empty_n and strm_in_V_pixel_4_r_empty_n and strm_in_V_pixel_5_r_empty_n and strm_in_V_pixel_6_r_empty_n and strm_in_V_pixel_7_r_empty_n and strm_in_V_pixel_8_r_empty_n and strm_in_V_pixel_9_r_empty_n and strm_in_V_pixel_10_r_empty_n and strm_in_V_pixel_11_r_empty_n and strm_in_V_pixel_12_r_empty_n and strm_in_V_pixel_13_r_empty_n and strm_in_V_pixel_14_r_empty_n and strm_in_V_pixel_15_r_empty_n and strm_in_V_pixel_16_r_empty_n and strm_in_V_pixel_17_r_empty_n and strm_in_V_pixel_18_r_empty_n and strm_in_V_pixel_19_r_empty_n and strm_in_V_pixel_20_r_empty_n and strm_in_V_pixel_21_r_empty_n and strm_in_V_pixel_22_r_empty_n and strm_in_V_pixel_23_r_empty_n and strm_in_V_pixel_24_r_empty_n and strm_in_V_pixel_25_r_empty_n and strm_in_V_pixel_26_r_empty_n and strm_in_V_pixel_27_r_empty_n and strm_in_V_pixel_28_r_empty_n and strm_in_V_pixel_29_r_empty_n and strm_in_V_pixel_30_r_empty_n and strm_in_V_pixel_31_r_empty_n and strm_in_V_pixel_32_r_empty_n and strm_in_V_pixel_33_r_empty_n and strm_in_V_pixel_34_r_empty_n and strm_in_V_pixel_35_r_empty_n and strm_in_V_pixel_36_r_empty_n and strm_in_V_pixel_37_r_empty_n and strm_in_V_pixel_38_r_empty_n and strm_in_V_pixel_39_r_empty_n and strm_in_V_pixel_40_r_empty_n and strm_in_V_pixel_41_r_empty_n and strm_in_V_pixel_0_g_empty_n and strm_in_V_pixel_1_g_empty_n and strm_in_V_pixel_2_g_empty_n and strm_in_V_pixel_3_g_empty_n and strm_in_V_pixel_4_g_empty_n and strm_in_V_pixel_5_g_empty_n and strm_in_V_pixel_6_g_empty_n and strm_in_V_pixel_7_g_empty_n and strm_in_V_pixel_8_g_empty_n and strm_in_V_pixel_9_g_empty_n and strm_in_V_pixel_10_g_empty_n and strm_in_V_pixel_11_g_empty_n and strm_in_V_pixel_12_g_empty_n and strm_in_V_pixel_13_g_empty_n and strm_in_V_pixel_14_g_empty_n and strm_in_V_pixel_15_g_empty_n and strm_in_V_pixel_16_g_empty_n and strm_in_V_pixel_17_g_empty_n and strm_in_V_pixel_18_g_empty_n and strm_in_V_pixel_19_g_empty_n and strm_in_V_pixel_20_g_empty_n and strm_in_V_pixel_21_g_empty_n and strm_in_V_pixel_22_g_empty_n and strm_in_V_pixel_23_g_empty_n and strm_in_V_pixel_24_g_empty_n and strm_in_V_pixel_25_g_empty_n and strm_in_V_pixel_26_g_empty_n and strm_in_V_pixel_27_g_empty_n and strm_in_V_pixel_28_g_empty_n and strm_in_V_pixel_29_g_empty_n and strm_in_V_pixel_30_g_empty_n and strm_in_V_pixel_31_g_empty_n and strm_in_V_pixel_32_g_empty_n and strm_in_V_pixel_33_g_empty_n and strm_in_V_pixel_34_g_empty_n and strm_in_V_pixel_35_g_empty_n and strm_in_V_pixel_36_g_empty_n and strm_in_V_pixel_37_g_empty_n and strm_in_V_pixel_38_g_empty_n and strm_in_V_pixel_39_g_empty_n and strm_in_V_pixel_40_g_empty_n and strm_in_V_pixel_41_g_empty_n and strm_in_V_pixel_0_b_empty_n and strm_in_V_pixel_1_b_empty_n and strm_in_V_pixel_2_b_empty_n and strm_in_V_pixel_3_b_empty_n and strm_in_V_pixel_4_b_empty_n and strm_in_V_pixel_5_b_empty_n and strm_in_V_pixel_6_b_empty_n and strm_in_V_pixel_7_b_empty_n and strm_in_V_pixel_8_b_empty_n and strm_in_V_pixel_9_b_empty_n and strm_in_V_pixel_10_b_empty_n and strm_in_V_pixel_11_b_empty_n and strm_in_V_pixel_12_b_empty_n and strm_in_V_pixel_13_b_empty_n and strm_in_V_pixel_14_b_empty_n and strm_in_V_pixel_15_b_empty_n and strm_in_V_pixel_16_b_empty_n and strm_in_V_pixel_17_b_empty_n and strm_in_V_pixel_18_b_empty_n and strm_in_V_pixel_19_b_empty_n and strm_in_V_pixel_20_b_empty_n and strm_in_V_pixel_21_b_empty_n and strm_in_V_pixel_22_b_empty_n and strm_in_V_pixel_23_b_empty_n and strm_in_V_pixel_24_b_empty_n and strm_in_V_pixel_25_b_empty_n and strm_in_V_pixel_26_b_empty_n and strm_in_V_pixel_27_b_empty_n and strm_in_V_pixel_28_b_empty_n and strm_in_V_pixel_29_b_empty_n and strm_in_V_pixel_30_b_empty_n and strm_in_V_pixel_31_b_empty_n and strm_in_V_pixel_32_b_empty_n and strm_in_V_pixel_33_b_empty_n and strm_in_V_pixel_34_b_empty_n and strm_in_V_pixel_35_b_empty_n and strm_in_V_pixel_36_b_empty_n and strm_in_V_pixel_37_b_empty_n and strm_in_V_pixel_38_b_empty_n and strm_in_V_pixel_39_b_empty_n and strm_in_V_pixel_40_b_empty_n and strm_in_V_pixel_41_b_empty_n);

    strm_in_V_pixel_4_g0_update_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, exitcond1_reg_3055, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            strm_in_V_pixel_4_g0_update <= ap_const_logic_1;
        else 
            strm_in_V_pixel_4_g0_update <= ap_const_logic_0;
        end if; 
    end process;


    strm_in_V_pixel_4_g_blk_n_assign_proc : process(strm_in_V_pixel_4_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_4_g_blk_n <= strm_in_V_pixel_4_g_empty_n;
        else 
            strm_in_V_pixel_4_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_4_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_4_r_blk_n_assign_proc : process(strm_in_V_pixel_4_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_4_r_blk_n <= strm_in_V_pixel_4_r_empty_n;
        else 
            strm_in_V_pixel_4_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_4_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_5_b_blk_n_assign_proc : process(strm_in_V_pixel_5_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_5_b_blk_n <= strm_in_V_pixel_5_b_empty_n;
        else 
            strm_in_V_pixel_5_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_5_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_5_g_blk_n_assign_proc : process(strm_in_V_pixel_5_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_5_g_blk_n <= strm_in_V_pixel_5_g_empty_n;
        else 
            strm_in_V_pixel_5_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_5_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_5_r_blk_n_assign_proc : process(strm_in_V_pixel_5_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_5_r_blk_n <= strm_in_V_pixel_5_r_empty_n;
        else 
            strm_in_V_pixel_5_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_5_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_6_b_blk_n_assign_proc : process(strm_in_V_pixel_6_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_6_b_blk_n <= strm_in_V_pixel_6_b_empty_n;
        else 
            strm_in_V_pixel_6_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_6_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_6_g_blk_n_assign_proc : process(strm_in_V_pixel_6_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_6_g_blk_n <= strm_in_V_pixel_6_g_empty_n;
        else 
            strm_in_V_pixel_6_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_6_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_6_r_blk_n_assign_proc : process(strm_in_V_pixel_6_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_6_r_blk_n <= strm_in_V_pixel_6_r_empty_n;
        else 
            strm_in_V_pixel_6_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_6_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_7_b_blk_n_assign_proc : process(strm_in_V_pixel_7_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_7_b_blk_n <= strm_in_V_pixel_7_b_empty_n;
        else 
            strm_in_V_pixel_7_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_7_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_7_g_blk_n_assign_proc : process(strm_in_V_pixel_7_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_7_g_blk_n <= strm_in_V_pixel_7_g_empty_n;
        else 
            strm_in_V_pixel_7_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_7_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_7_r_blk_n_assign_proc : process(strm_in_V_pixel_7_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_7_r_blk_n <= strm_in_V_pixel_7_r_empty_n;
        else 
            strm_in_V_pixel_7_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_7_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_8_b_blk_n_assign_proc : process(strm_in_V_pixel_8_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_8_b_blk_n <= strm_in_V_pixel_8_b_empty_n;
        else 
            strm_in_V_pixel_8_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_8_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_8_g_blk_n_assign_proc : process(strm_in_V_pixel_8_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_8_g_blk_n <= strm_in_V_pixel_8_g_empty_n;
        else 
            strm_in_V_pixel_8_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_8_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_8_r_blk_n_assign_proc : process(strm_in_V_pixel_8_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_8_r_blk_n <= strm_in_V_pixel_8_r_empty_n;
        else 
            strm_in_V_pixel_8_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_8_r_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_9_b_blk_n_assign_proc : process(strm_in_V_pixel_9_b_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_9_b_blk_n <= strm_in_V_pixel_9_b_empty_n;
        else 
            strm_in_V_pixel_9_b_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_9_b_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_9_g_blk_n_assign_proc : process(strm_in_V_pixel_9_g_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_9_g_blk_n <= strm_in_V_pixel_9_g_empty_n;
        else 
            strm_in_V_pixel_9_g_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_9_g_read <= strm_in_V_pixel_4_g0_update;

    strm_in_V_pixel_9_r_blk_n_assign_proc : process(strm_in_V_pixel_9_r_empty_n, ap_sig_cseq_ST_pp0_stg0_fsm_1, ap_reg_ppiten_pp0_it1, exitcond1_reg_3055)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_1) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and (exitcond1_reg_3055 = ap_const_lv1_0))) then 
            strm_in_V_pixel_9_r_blk_n <= strm_in_V_pixel_9_r_empty_n;
        else 
            strm_in_V_pixel_9_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_in_V_pixel_9_r_read <= strm_in_V_pixel_4_g0_update;

    strm_out_V_pixel_0_luma_blk_n_assign_proc : process(strm_out_V_pixel_0_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_0_luma_blk_n <= strm_out_V_pixel_0_luma_full_n;
        else 
            strm_out_V_pixel_0_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_0_luma_din <= luma_reg_3064;
    strm_out_V_pixel_0_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_10_luma_blk_n_assign_proc : process(strm_out_V_pixel_10_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_10_luma_blk_n <= strm_out_V_pixel_10_luma_full_n;
        else 
            strm_out_V_pixel_10_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_10_luma_din <= luma_10_reg_3114;
    strm_out_V_pixel_10_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_11_luma_blk_n_assign_proc : process(strm_out_V_pixel_11_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_11_luma_blk_n <= strm_out_V_pixel_11_luma_full_n;
        else 
            strm_out_V_pixel_11_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_11_luma_din <= luma_11_reg_3119;
    strm_out_V_pixel_11_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_12_luma_blk_n_assign_proc : process(strm_out_V_pixel_12_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_12_luma_blk_n <= strm_out_V_pixel_12_luma_full_n;
        else 
            strm_out_V_pixel_12_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_12_luma_din <= luma_12_reg_3124;
    strm_out_V_pixel_12_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_13_luma_blk_n_assign_proc : process(strm_out_V_pixel_13_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_13_luma_blk_n <= strm_out_V_pixel_13_luma_full_n;
        else 
            strm_out_V_pixel_13_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_13_luma_din <= luma_13_reg_3129;
    strm_out_V_pixel_13_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_14_luma_blk_n_assign_proc : process(strm_out_V_pixel_14_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_14_luma_blk_n <= strm_out_V_pixel_14_luma_full_n;
        else 
            strm_out_V_pixel_14_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_14_luma_din <= luma_14_reg_3134;
    strm_out_V_pixel_14_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_15_luma_blk_n_assign_proc : process(strm_out_V_pixel_15_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_15_luma_blk_n <= strm_out_V_pixel_15_luma_full_n;
        else 
            strm_out_V_pixel_15_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_15_luma_din <= luma_15_reg_3139;
    strm_out_V_pixel_15_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_16_luma_blk_n_assign_proc : process(strm_out_V_pixel_16_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_16_luma_blk_n <= strm_out_V_pixel_16_luma_full_n;
        else 
            strm_out_V_pixel_16_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_16_luma_din <= luma_16_reg_3144;
    strm_out_V_pixel_16_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_17_luma_blk_n_assign_proc : process(strm_out_V_pixel_17_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_17_luma_blk_n <= strm_out_V_pixel_17_luma_full_n;
        else 
            strm_out_V_pixel_17_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_17_luma_din <= luma_17_reg_3149;
    strm_out_V_pixel_17_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_18_luma_blk_n_assign_proc : process(strm_out_V_pixel_18_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_18_luma_blk_n <= strm_out_V_pixel_18_luma_full_n;
        else 
            strm_out_V_pixel_18_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_18_luma_din <= luma_18_reg_3154;
    strm_out_V_pixel_18_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_19_luma_blk_n_assign_proc : process(strm_out_V_pixel_19_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_19_luma_blk_n <= strm_out_V_pixel_19_luma_full_n;
        else 
            strm_out_V_pixel_19_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_19_luma_din <= luma_19_reg_3159;
    strm_out_V_pixel_19_luma_write <= strm_out_V_pixel_1_luma1_update;
    strm_out_V_pixel_1_luma1_status <= (strm_out_V_pixel_0_luma_full_n and strm_out_V_pixel_1_luma_full_n and strm_out_V_pixel_2_luma_full_n and strm_out_V_pixel_3_luma_full_n and strm_out_V_pixel_4_luma_full_n and strm_out_V_pixel_5_luma_full_n and strm_out_V_pixel_6_luma_full_n and strm_out_V_pixel_7_luma_full_n and strm_out_V_pixel_8_luma_full_n and strm_out_V_pixel_9_luma_full_n and strm_out_V_pixel_10_luma_full_n and strm_out_V_pixel_11_luma_full_n and strm_out_V_pixel_12_luma_full_n and strm_out_V_pixel_13_luma_full_n and strm_out_V_pixel_14_luma_full_n and strm_out_V_pixel_15_luma_full_n and strm_out_V_pixel_16_luma_full_n and strm_out_V_pixel_17_luma_full_n and strm_out_V_pixel_18_luma_full_n and strm_out_V_pixel_19_luma_full_n and strm_out_V_pixel_20_luma_full_n and strm_out_V_pixel_21_luma_full_n and strm_out_V_pixel_22_luma_full_n and strm_out_V_pixel_23_luma_full_n and strm_out_V_pixel_24_luma_full_n and strm_out_V_pixel_25_luma_full_n and strm_out_V_pixel_26_luma_full_n and strm_out_V_pixel_27_luma_full_n and strm_out_V_pixel_28_luma_full_n and strm_out_V_pixel_29_luma_full_n and strm_out_V_pixel_30_luma_full_n and strm_out_V_pixel_31_luma_full_n and strm_out_V_pixel_32_luma_full_n and strm_out_V_pixel_33_luma_full_n and strm_out_V_pixel_34_luma_full_n and strm_out_V_pixel_35_luma_full_n and strm_out_V_pixel_36_luma_full_n and strm_out_V_pixel_37_luma_full_n and strm_out_V_pixel_38_luma_full_n and strm_out_V_pixel_39_luma_full_n and strm_out_V_pixel_40_luma_full_n and strm_out_V_pixel_41_luma_full_n);

    strm_out_V_pixel_1_luma1_update_assign_proc : process(ap_reg_ppiten_pp0_it1, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2, ap_sig_897, ap_sig_902)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2) and not((((ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and ap_sig_897) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and ap_sig_902))))) then 
            strm_out_V_pixel_1_luma1_update <= ap_const_logic_1;
        else 
            strm_out_V_pixel_1_luma1_update <= ap_const_logic_0;
        end if; 
    end process;


    strm_out_V_pixel_1_luma_blk_n_assign_proc : process(strm_out_V_pixel_1_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_1_luma_blk_n <= strm_out_V_pixel_1_luma_full_n;
        else 
            strm_out_V_pixel_1_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_1_luma_din <= luma_1_reg_3069;
    strm_out_V_pixel_1_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_20_luma_blk_n_assign_proc : process(strm_out_V_pixel_20_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_20_luma_blk_n <= strm_out_V_pixel_20_luma_full_n;
        else 
            strm_out_V_pixel_20_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_20_luma_din <= luma_20_reg_3164;
    strm_out_V_pixel_20_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_21_luma_blk_n_assign_proc : process(strm_out_V_pixel_21_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_21_luma_blk_n <= strm_out_V_pixel_21_luma_full_n;
        else 
            strm_out_V_pixel_21_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_21_luma_din <= luma_21_reg_3169;
    strm_out_V_pixel_21_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_22_luma_blk_n_assign_proc : process(strm_out_V_pixel_22_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_22_luma_blk_n <= strm_out_V_pixel_22_luma_full_n;
        else 
            strm_out_V_pixel_22_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_22_luma_din <= luma_22_reg_3174;
    strm_out_V_pixel_22_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_23_luma_blk_n_assign_proc : process(strm_out_V_pixel_23_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_23_luma_blk_n <= strm_out_V_pixel_23_luma_full_n;
        else 
            strm_out_V_pixel_23_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_23_luma_din <= luma_23_reg_3179;
    strm_out_V_pixel_23_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_24_luma_blk_n_assign_proc : process(strm_out_V_pixel_24_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_24_luma_blk_n <= strm_out_V_pixel_24_luma_full_n;
        else 
            strm_out_V_pixel_24_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_24_luma_din <= luma_24_reg_3184;
    strm_out_V_pixel_24_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_25_luma_blk_n_assign_proc : process(strm_out_V_pixel_25_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_25_luma_blk_n <= strm_out_V_pixel_25_luma_full_n;
        else 
            strm_out_V_pixel_25_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_25_luma_din <= luma_25_reg_3189;
    strm_out_V_pixel_25_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_26_luma_blk_n_assign_proc : process(strm_out_V_pixel_26_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_26_luma_blk_n <= strm_out_V_pixel_26_luma_full_n;
        else 
            strm_out_V_pixel_26_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_26_luma_din <= luma_26_reg_3194;
    strm_out_V_pixel_26_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_27_luma_blk_n_assign_proc : process(strm_out_V_pixel_27_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_27_luma_blk_n <= strm_out_V_pixel_27_luma_full_n;
        else 
            strm_out_V_pixel_27_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_27_luma_din <= luma_27_reg_3199;
    strm_out_V_pixel_27_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_28_luma_blk_n_assign_proc : process(strm_out_V_pixel_28_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_28_luma_blk_n <= strm_out_V_pixel_28_luma_full_n;
        else 
            strm_out_V_pixel_28_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_28_luma_din <= luma_28_reg_3204;
    strm_out_V_pixel_28_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_29_luma_blk_n_assign_proc : process(strm_out_V_pixel_29_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_29_luma_blk_n <= strm_out_V_pixel_29_luma_full_n;
        else 
            strm_out_V_pixel_29_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_29_luma_din <= luma_29_reg_3209;
    strm_out_V_pixel_29_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_2_luma_blk_n_assign_proc : process(strm_out_V_pixel_2_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_2_luma_blk_n <= strm_out_V_pixel_2_luma_full_n;
        else 
            strm_out_V_pixel_2_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_2_luma_din <= luma_2_reg_3074;
    strm_out_V_pixel_2_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_30_luma_blk_n_assign_proc : process(strm_out_V_pixel_30_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_30_luma_blk_n <= strm_out_V_pixel_30_luma_full_n;
        else 
            strm_out_V_pixel_30_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_30_luma_din <= luma_30_reg_3214;
    strm_out_V_pixel_30_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_31_luma_blk_n_assign_proc : process(strm_out_V_pixel_31_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_31_luma_blk_n <= strm_out_V_pixel_31_luma_full_n;
        else 
            strm_out_V_pixel_31_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_31_luma_din <= luma_31_reg_3219;
    strm_out_V_pixel_31_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_32_luma_blk_n_assign_proc : process(strm_out_V_pixel_32_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_32_luma_blk_n <= strm_out_V_pixel_32_luma_full_n;
        else 
            strm_out_V_pixel_32_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_32_luma_din <= luma_32_reg_3224;
    strm_out_V_pixel_32_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_33_luma_blk_n_assign_proc : process(strm_out_V_pixel_33_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_33_luma_blk_n <= strm_out_V_pixel_33_luma_full_n;
        else 
            strm_out_V_pixel_33_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_33_luma_din <= luma_33_reg_3229;
    strm_out_V_pixel_33_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_34_luma_blk_n_assign_proc : process(strm_out_V_pixel_34_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_34_luma_blk_n <= strm_out_V_pixel_34_luma_full_n;
        else 
            strm_out_V_pixel_34_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_34_luma_din <= luma_34_reg_3234;
    strm_out_V_pixel_34_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_35_luma_blk_n_assign_proc : process(strm_out_V_pixel_35_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_35_luma_blk_n <= strm_out_V_pixel_35_luma_full_n;
        else 
            strm_out_V_pixel_35_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_35_luma_din <= luma_35_reg_3239;
    strm_out_V_pixel_35_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_36_luma_blk_n_assign_proc : process(strm_out_V_pixel_36_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_36_luma_blk_n <= strm_out_V_pixel_36_luma_full_n;
        else 
            strm_out_V_pixel_36_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_36_luma_din <= luma_36_reg_3244;
    strm_out_V_pixel_36_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_37_luma_blk_n_assign_proc : process(strm_out_V_pixel_37_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_37_luma_blk_n <= strm_out_V_pixel_37_luma_full_n;
        else 
            strm_out_V_pixel_37_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_37_luma_din <= luma_37_reg_3249;
    strm_out_V_pixel_37_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_38_luma_blk_n_assign_proc : process(strm_out_V_pixel_38_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_38_luma_blk_n <= strm_out_V_pixel_38_luma_full_n;
        else 
            strm_out_V_pixel_38_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_38_luma_din <= luma_38_reg_3254;
    strm_out_V_pixel_38_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_39_luma_blk_n_assign_proc : process(strm_out_V_pixel_39_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_39_luma_blk_n <= strm_out_V_pixel_39_luma_full_n;
        else 
            strm_out_V_pixel_39_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_39_luma_din <= luma_39_reg_3259;
    strm_out_V_pixel_39_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_3_luma_blk_n_assign_proc : process(strm_out_V_pixel_3_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_3_luma_blk_n <= strm_out_V_pixel_3_luma_full_n;
        else 
            strm_out_V_pixel_3_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_3_luma_din <= luma_3_reg_3079;
    strm_out_V_pixel_3_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_40_luma_blk_n_assign_proc : process(strm_out_V_pixel_40_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_40_luma_blk_n <= strm_out_V_pixel_40_luma_full_n;
        else 
            strm_out_V_pixel_40_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_40_luma_din <= luma_40_reg_3264;
    strm_out_V_pixel_40_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_41_luma_blk_n_assign_proc : process(strm_out_V_pixel_41_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_41_luma_blk_n <= strm_out_V_pixel_41_luma_full_n;
        else 
            strm_out_V_pixel_41_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_41_luma_din <= luma_41_reg_3269;
    strm_out_V_pixel_41_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_4_luma_blk_n_assign_proc : process(strm_out_V_pixel_4_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_4_luma_blk_n <= strm_out_V_pixel_4_luma_full_n;
        else 
            strm_out_V_pixel_4_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_4_luma_din <= luma_4_reg_3084;
    strm_out_V_pixel_4_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_5_luma_blk_n_assign_proc : process(strm_out_V_pixel_5_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_5_luma_blk_n <= strm_out_V_pixel_5_luma_full_n;
        else 
            strm_out_V_pixel_5_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_5_luma_din <= luma_5_reg_3089;
    strm_out_V_pixel_5_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_6_luma_blk_n_assign_proc : process(strm_out_V_pixel_6_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_6_luma_blk_n <= strm_out_V_pixel_6_luma_full_n;
        else 
            strm_out_V_pixel_6_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_6_luma_din <= luma_6_reg_3094;
    strm_out_V_pixel_6_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_7_luma_blk_n_assign_proc : process(strm_out_V_pixel_7_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_7_luma_blk_n <= strm_out_V_pixel_7_luma_full_n;
        else 
            strm_out_V_pixel_7_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_7_luma_din <= luma_7_reg_3099;
    strm_out_V_pixel_7_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_8_luma_blk_n_assign_proc : process(strm_out_V_pixel_8_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_8_luma_blk_n <= strm_out_V_pixel_8_luma_full_n;
        else 
            strm_out_V_pixel_8_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_8_luma_din <= luma_8_reg_3104;
    strm_out_V_pixel_8_luma_write <= strm_out_V_pixel_1_luma1_update;

    strm_out_V_pixel_9_luma_blk_n_assign_proc : process(strm_out_V_pixel_9_luma_full_n, ap_reg_ppiten_pp0_it3, ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and (ap_const_lv1_0 = ap_reg_ppstg_exitcond1_reg_3055_pp0_iter2))) then 
            strm_out_V_pixel_9_luma_blk_n <= strm_out_V_pixel_9_luma_full_n;
        else 
            strm_out_V_pixel_9_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_9_luma_din <= luma_9_reg_3109;
    strm_out_V_pixel_9_luma_write <= strm_out_V_pixel_1_luma1_update;
    x_fu_2419_p2 <= std_logic_vector(unsigned(x_0_i_reg_2108) + unsigned(ap_const_lv9_1));
end behav;
