// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Sobel_downstrm2upstrm_array_of_pixel_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_V_pixel_0_dout,
        src_V_pixel_0_empty_n,
        src_V_pixel_0_read,
        src_V_pixel_1_dout,
        src_V_pixel_1_empty_n,
        src_V_pixel_1_read,
        src_V_pixel_2_dout,
        src_V_pixel_2_empty_n,
        src_V_pixel_2_read,
        src_V_pixel_3_dout,
        src_V_pixel_3_empty_n,
        src_V_pixel_3_read,
        src_V_pixel_4_dout,
        src_V_pixel_4_empty_n,
        src_V_pixel_4_read,
        src_V_pixel_5_dout,
        src_V_pixel_5_empty_n,
        src_V_pixel_5_read,
        src_V_pixel_6_dout,
        src_V_pixel_6_empty_n,
        src_V_pixel_6_read,
        src_V_pixel_7_dout,
        src_V_pixel_7_empty_n,
        src_V_pixel_7_read,
        src_V_pixel_8_dout,
        src_V_pixel_8_empty_n,
        src_V_pixel_8_read,
        src_V_pixel_9_dout,
        src_V_pixel_9_empty_n,
        src_V_pixel_9_read,
        src_V_pixel_10_dout,
        src_V_pixel_10_empty_n,
        src_V_pixel_10_read,
        src_V_pixel_11_dout,
        src_V_pixel_11_empty_n,
        src_V_pixel_11_read,
        src_V_pixel_12_dout,
        src_V_pixel_12_empty_n,
        src_V_pixel_12_read,
        src_V_pixel_13_dout,
        src_V_pixel_13_empty_n,
        src_V_pixel_13_read,
        src_V_pixel_14_dout,
        src_V_pixel_14_empty_n,
        src_V_pixel_14_read,
        src_V_pixel_15_dout,
        src_V_pixel_15_empty_n,
        src_V_pixel_15_read,
        src_V_pixel_16_dout,
        src_V_pixel_16_empty_n,
        src_V_pixel_16_read,
        src_V_pixel_17_dout,
        src_V_pixel_17_empty_n,
        src_V_pixel_17_read,
        src_V_pixel_18_dout,
        src_V_pixel_18_empty_n,
        src_V_pixel_18_read,
        src_V_pixel_19_dout,
        src_V_pixel_19_empty_n,
        src_V_pixel_19_read,
        src_V_pixel_20_dout,
        src_V_pixel_20_empty_n,
        src_V_pixel_20_read,
        src_V_pixel_21_dout,
        src_V_pixel_21_empty_n,
        src_V_pixel_21_read,
        src_V_pixel_22_dout,
        src_V_pixel_22_empty_n,
        src_V_pixel_22_read,
        src_V_pixel_23_dout,
        src_V_pixel_23_empty_n,
        src_V_pixel_23_read,
        src_V_pixel_24_dout,
        src_V_pixel_24_empty_n,
        src_V_pixel_24_read,
        src_V_pixel_25_dout,
        src_V_pixel_25_empty_n,
        src_V_pixel_25_read,
        src_V_pixel_26_dout,
        src_V_pixel_26_empty_n,
        src_V_pixel_26_read,
        src_V_pixel_27_dout,
        src_V_pixel_27_empty_n,
        src_V_pixel_27_read,
        src_V_pixel_28_dout,
        src_V_pixel_28_empty_n,
        src_V_pixel_28_read,
        src_V_pixel_29_dout,
        src_V_pixel_29_empty_n,
        src_V_pixel_29_read,
        src_V_pixel_30_dout,
        src_V_pixel_30_empty_n,
        src_V_pixel_30_read,
        src_V_pixel_31_dout,
        src_V_pixel_31_empty_n,
        src_V_pixel_31_read,
        src_V_pixel_32_dout,
        src_V_pixel_32_empty_n,
        src_V_pixel_32_read,
        src_V_pixel_33_dout,
        src_V_pixel_33_empty_n,
        src_V_pixel_33_read,
        src_V_pixel_34_dout,
        src_V_pixel_34_empty_n,
        src_V_pixel_34_read,
        src_V_pixel_35_dout,
        src_V_pixel_35_empty_n,
        src_V_pixel_35_read,
        src_V_pixel_36_dout,
        src_V_pixel_36_empty_n,
        src_V_pixel_36_read,
        src_V_pixel_37_dout,
        src_V_pixel_37_empty_n,
        src_V_pixel_37_read,
        src_V_pixel_38_dout,
        src_V_pixel_38_empty_n,
        src_V_pixel_38_read,
        src_V_pixel_39_dout,
        src_V_pixel_39_empty_n,
        src_V_pixel_39_read,
        src_V_pixel_40_dout,
        src_V_pixel_40_empty_n,
        src_V_pixel_40_read,
        src_V_pixel_41_dout,
        src_V_pixel_41_empty_n,
        src_V_pixel_41_read,
        dst_V_pixel_0_TDATA,
        dst_V_pixel_0_TVALID,
        dst_V_pixel_0_TREADY,
        dst_V_pixel_1_TDATA,
        dst_V_pixel_1_TVALID,
        dst_V_pixel_1_TREADY,
        dst_V_pixel_2_TDATA,
        dst_V_pixel_2_TVALID,
        dst_V_pixel_2_TREADY,
        dst_V_pixel_3_TDATA,
        dst_V_pixel_3_TVALID,
        dst_V_pixel_3_TREADY,
        dst_V_pixel_4_TDATA,
        dst_V_pixel_4_TVALID,
        dst_V_pixel_4_TREADY,
        dst_V_pixel_5_TDATA,
        dst_V_pixel_5_TVALID,
        dst_V_pixel_5_TREADY,
        dst_V_pixel_6_TDATA,
        dst_V_pixel_6_TVALID,
        dst_V_pixel_6_TREADY,
        dst_V_pixel_7_TDATA,
        dst_V_pixel_7_TVALID,
        dst_V_pixel_7_TREADY,
        dst_V_pixel_8_TDATA,
        dst_V_pixel_8_TVALID,
        dst_V_pixel_8_TREADY,
        dst_V_pixel_9_TDATA,
        dst_V_pixel_9_TVALID,
        dst_V_pixel_9_TREADY,
        dst_V_pixel_10_TDATA,
        dst_V_pixel_10_TVALID,
        dst_V_pixel_10_TREADY,
        dst_V_pixel_11_TDATA,
        dst_V_pixel_11_TVALID,
        dst_V_pixel_11_TREADY,
        dst_V_pixel_12_TDATA,
        dst_V_pixel_12_TVALID,
        dst_V_pixel_12_TREADY,
        dst_V_pixel_13_TDATA,
        dst_V_pixel_13_TVALID,
        dst_V_pixel_13_TREADY,
        dst_V_pixel_14_TDATA,
        dst_V_pixel_14_TVALID,
        dst_V_pixel_14_TREADY,
        dst_V_pixel_15_TDATA,
        dst_V_pixel_15_TVALID,
        dst_V_pixel_15_TREADY,
        dst_V_pixel_16_TDATA,
        dst_V_pixel_16_TVALID,
        dst_V_pixel_16_TREADY,
        dst_V_pixel_17_TDATA,
        dst_V_pixel_17_TVALID,
        dst_V_pixel_17_TREADY,
        dst_V_pixel_18_TDATA,
        dst_V_pixel_18_TVALID,
        dst_V_pixel_18_TREADY,
        dst_V_pixel_19_TDATA,
        dst_V_pixel_19_TVALID,
        dst_V_pixel_19_TREADY,
        dst_V_pixel_20_TDATA,
        dst_V_pixel_20_TVALID,
        dst_V_pixel_20_TREADY,
        dst_V_pixel_21_TDATA,
        dst_V_pixel_21_TVALID,
        dst_V_pixel_21_TREADY,
        dst_V_pixel_22_TDATA,
        dst_V_pixel_22_TVALID,
        dst_V_pixel_22_TREADY,
        dst_V_pixel_23_TDATA,
        dst_V_pixel_23_TVALID,
        dst_V_pixel_23_TREADY,
        dst_V_pixel_24_TDATA,
        dst_V_pixel_24_TVALID,
        dst_V_pixel_24_TREADY,
        dst_V_pixel_25_TDATA,
        dst_V_pixel_25_TVALID,
        dst_V_pixel_25_TREADY,
        dst_V_pixel_26_TDATA,
        dst_V_pixel_26_TVALID,
        dst_V_pixel_26_TREADY,
        dst_V_pixel_27_TDATA,
        dst_V_pixel_27_TVALID,
        dst_V_pixel_27_TREADY,
        dst_V_pixel_28_TDATA,
        dst_V_pixel_28_TVALID,
        dst_V_pixel_28_TREADY,
        dst_V_pixel_29_TDATA,
        dst_V_pixel_29_TVALID,
        dst_V_pixel_29_TREADY,
        dst_V_pixel_30_TDATA,
        dst_V_pixel_30_TVALID,
        dst_V_pixel_30_TREADY,
        dst_V_pixel_31_TDATA,
        dst_V_pixel_31_TVALID,
        dst_V_pixel_31_TREADY,
        dst_V_pixel_32_TDATA,
        dst_V_pixel_32_TVALID,
        dst_V_pixel_32_TREADY,
        dst_V_pixel_33_TDATA,
        dst_V_pixel_33_TVALID,
        dst_V_pixel_33_TREADY,
        dst_V_pixel_34_TDATA,
        dst_V_pixel_34_TVALID,
        dst_V_pixel_34_TREADY,
        dst_V_pixel_35_TDATA,
        dst_V_pixel_35_TVALID,
        dst_V_pixel_35_TREADY,
        dst_V_pixel_36_TDATA,
        dst_V_pixel_36_TVALID,
        dst_V_pixel_36_TREADY,
        dst_V_pixel_37_TDATA,
        dst_V_pixel_37_TVALID,
        dst_V_pixel_37_TREADY,
        dst_V_pixel_38_TDATA,
        dst_V_pixel_38_TVALID,
        dst_V_pixel_38_TREADY,
        dst_V_pixel_39_TDATA,
        dst_V_pixel_39_TVALID,
        dst_V_pixel_39_TREADY,
        dst_V_pixel_40_TDATA,
        dst_V_pixel_40_TVALID,
        dst_V_pixel_40_TREADY,
        dst_V_pixel_41_TDATA,
        dst_V_pixel_41_TVALID,
        dst_V_pixel_41_TREADY
);

parameter    ap_ST_st1_fsm_0 = 2'b1;
parameter    ap_ST_st2_fsm_1 = 2'b10;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv9_1E0 = 9'b111100000;
parameter    ap_const_lv9_1 = 9'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] src_V_pixel_0_dout;
input   src_V_pixel_0_empty_n;
output   src_V_pixel_0_read;
input  [7:0] src_V_pixel_1_dout;
input   src_V_pixel_1_empty_n;
output   src_V_pixel_1_read;
input  [7:0] src_V_pixel_2_dout;
input   src_V_pixel_2_empty_n;
output   src_V_pixel_2_read;
input  [7:0] src_V_pixel_3_dout;
input   src_V_pixel_3_empty_n;
output   src_V_pixel_3_read;
input  [7:0] src_V_pixel_4_dout;
input   src_V_pixel_4_empty_n;
output   src_V_pixel_4_read;
input  [7:0] src_V_pixel_5_dout;
input   src_V_pixel_5_empty_n;
output   src_V_pixel_5_read;
input  [7:0] src_V_pixel_6_dout;
input   src_V_pixel_6_empty_n;
output   src_V_pixel_6_read;
input  [7:0] src_V_pixel_7_dout;
input   src_V_pixel_7_empty_n;
output   src_V_pixel_7_read;
input  [7:0] src_V_pixel_8_dout;
input   src_V_pixel_8_empty_n;
output   src_V_pixel_8_read;
input  [7:0] src_V_pixel_9_dout;
input   src_V_pixel_9_empty_n;
output   src_V_pixel_9_read;
input  [7:0] src_V_pixel_10_dout;
input   src_V_pixel_10_empty_n;
output   src_V_pixel_10_read;
input  [7:0] src_V_pixel_11_dout;
input   src_V_pixel_11_empty_n;
output   src_V_pixel_11_read;
input  [7:0] src_V_pixel_12_dout;
input   src_V_pixel_12_empty_n;
output   src_V_pixel_12_read;
input  [7:0] src_V_pixel_13_dout;
input   src_V_pixel_13_empty_n;
output   src_V_pixel_13_read;
input  [7:0] src_V_pixel_14_dout;
input   src_V_pixel_14_empty_n;
output   src_V_pixel_14_read;
input  [7:0] src_V_pixel_15_dout;
input   src_V_pixel_15_empty_n;
output   src_V_pixel_15_read;
input  [7:0] src_V_pixel_16_dout;
input   src_V_pixel_16_empty_n;
output   src_V_pixel_16_read;
input  [7:0] src_V_pixel_17_dout;
input   src_V_pixel_17_empty_n;
output   src_V_pixel_17_read;
input  [7:0] src_V_pixel_18_dout;
input   src_V_pixel_18_empty_n;
output   src_V_pixel_18_read;
input  [7:0] src_V_pixel_19_dout;
input   src_V_pixel_19_empty_n;
output   src_V_pixel_19_read;
input  [7:0] src_V_pixel_20_dout;
input   src_V_pixel_20_empty_n;
output   src_V_pixel_20_read;
input  [7:0] src_V_pixel_21_dout;
input   src_V_pixel_21_empty_n;
output   src_V_pixel_21_read;
input  [7:0] src_V_pixel_22_dout;
input   src_V_pixel_22_empty_n;
output   src_V_pixel_22_read;
input  [7:0] src_V_pixel_23_dout;
input   src_V_pixel_23_empty_n;
output   src_V_pixel_23_read;
input  [7:0] src_V_pixel_24_dout;
input   src_V_pixel_24_empty_n;
output   src_V_pixel_24_read;
input  [7:0] src_V_pixel_25_dout;
input   src_V_pixel_25_empty_n;
output   src_V_pixel_25_read;
input  [7:0] src_V_pixel_26_dout;
input   src_V_pixel_26_empty_n;
output   src_V_pixel_26_read;
input  [7:0] src_V_pixel_27_dout;
input   src_V_pixel_27_empty_n;
output   src_V_pixel_27_read;
input  [7:0] src_V_pixel_28_dout;
input   src_V_pixel_28_empty_n;
output   src_V_pixel_28_read;
input  [7:0] src_V_pixel_29_dout;
input   src_V_pixel_29_empty_n;
output   src_V_pixel_29_read;
input  [7:0] src_V_pixel_30_dout;
input   src_V_pixel_30_empty_n;
output   src_V_pixel_30_read;
input  [7:0] src_V_pixel_31_dout;
input   src_V_pixel_31_empty_n;
output   src_V_pixel_31_read;
input  [7:0] src_V_pixel_32_dout;
input   src_V_pixel_32_empty_n;
output   src_V_pixel_32_read;
input  [7:0] src_V_pixel_33_dout;
input   src_V_pixel_33_empty_n;
output   src_V_pixel_33_read;
input  [7:0] src_V_pixel_34_dout;
input   src_V_pixel_34_empty_n;
output   src_V_pixel_34_read;
input  [7:0] src_V_pixel_35_dout;
input   src_V_pixel_35_empty_n;
output   src_V_pixel_35_read;
input  [7:0] src_V_pixel_36_dout;
input   src_V_pixel_36_empty_n;
output   src_V_pixel_36_read;
input  [7:0] src_V_pixel_37_dout;
input   src_V_pixel_37_empty_n;
output   src_V_pixel_37_read;
input  [7:0] src_V_pixel_38_dout;
input   src_V_pixel_38_empty_n;
output   src_V_pixel_38_read;
input  [7:0] src_V_pixel_39_dout;
input   src_V_pixel_39_empty_n;
output   src_V_pixel_39_read;
input  [7:0] src_V_pixel_40_dout;
input   src_V_pixel_40_empty_n;
output   src_V_pixel_40_read;
input  [7:0] src_V_pixel_41_dout;
input   src_V_pixel_41_empty_n;
output   src_V_pixel_41_read;
output  [7:0] dst_V_pixel_0_TDATA;
output   dst_V_pixel_0_TVALID;
input   dst_V_pixel_0_TREADY;
output  [7:0] dst_V_pixel_1_TDATA;
output   dst_V_pixel_1_TVALID;
input   dst_V_pixel_1_TREADY;
output  [7:0] dst_V_pixel_2_TDATA;
output   dst_V_pixel_2_TVALID;
input   dst_V_pixel_2_TREADY;
output  [7:0] dst_V_pixel_3_TDATA;
output   dst_V_pixel_3_TVALID;
input   dst_V_pixel_3_TREADY;
output  [7:0] dst_V_pixel_4_TDATA;
output   dst_V_pixel_4_TVALID;
input   dst_V_pixel_4_TREADY;
output  [7:0] dst_V_pixel_5_TDATA;
output   dst_V_pixel_5_TVALID;
input   dst_V_pixel_5_TREADY;
output  [7:0] dst_V_pixel_6_TDATA;
output   dst_V_pixel_6_TVALID;
input   dst_V_pixel_6_TREADY;
output  [7:0] dst_V_pixel_7_TDATA;
output   dst_V_pixel_7_TVALID;
input   dst_V_pixel_7_TREADY;
output  [7:0] dst_V_pixel_8_TDATA;
output   dst_V_pixel_8_TVALID;
input   dst_V_pixel_8_TREADY;
output  [7:0] dst_V_pixel_9_TDATA;
output   dst_V_pixel_9_TVALID;
input   dst_V_pixel_9_TREADY;
output  [7:0] dst_V_pixel_10_TDATA;
output   dst_V_pixel_10_TVALID;
input   dst_V_pixel_10_TREADY;
output  [7:0] dst_V_pixel_11_TDATA;
output   dst_V_pixel_11_TVALID;
input   dst_V_pixel_11_TREADY;
output  [7:0] dst_V_pixel_12_TDATA;
output   dst_V_pixel_12_TVALID;
input   dst_V_pixel_12_TREADY;
output  [7:0] dst_V_pixel_13_TDATA;
output   dst_V_pixel_13_TVALID;
input   dst_V_pixel_13_TREADY;
output  [7:0] dst_V_pixel_14_TDATA;
output   dst_V_pixel_14_TVALID;
input   dst_V_pixel_14_TREADY;
output  [7:0] dst_V_pixel_15_TDATA;
output   dst_V_pixel_15_TVALID;
input   dst_V_pixel_15_TREADY;
output  [7:0] dst_V_pixel_16_TDATA;
output   dst_V_pixel_16_TVALID;
input   dst_V_pixel_16_TREADY;
output  [7:0] dst_V_pixel_17_TDATA;
output   dst_V_pixel_17_TVALID;
input   dst_V_pixel_17_TREADY;
output  [7:0] dst_V_pixel_18_TDATA;
output   dst_V_pixel_18_TVALID;
input   dst_V_pixel_18_TREADY;
output  [7:0] dst_V_pixel_19_TDATA;
output   dst_V_pixel_19_TVALID;
input   dst_V_pixel_19_TREADY;
output  [7:0] dst_V_pixel_20_TDATA;
output   dst_V_pixel_20_TVALID;
input   dst_V_pixel_20_TREADY;
output  [7:0] dst_V_pixel_21_TDATA;
output   dst_V_pixel_21_TVALID;
input   dst_V_pixel_21_TREADY;
output  [7:0] dst_V_pixel_22_TDATA;
output   dst_V_pixel_22_TVALID;
input   dst_V_pixel_22_TREADY;
output  [7:0] dst_V_pixel_23_TDATA;
output   dst_V_pixel_23_TVALID;
input   dst_V_pixel_23_TREADY;
output  [7:0] dst_V_pixel_24_TDATA;
output   dst_V_pixel_24_TVALID;
input   dst_V_pixel_24_TREADY;
output  [7:0] dst_V_pixel_25_TDATA;
output   dst_V_pixel_25_TVALID;
input   dst_V_pixel_25_TREADY;
output  [7:0] dst_V_pixel_26_TDATA;
output   dst_V_pixel_26_TVALID;
input   dst_V_pixel_26_TREADY;
output  [7:0] dst_V_pixel_27_TDATA;
output   dst_V_pixel_27_TVALID;
input   dst_V_pixel_27_TREADY;
output  [7:0] dst_V_pixel_28_TDATA;
output   dst_V_pixel_28_TVALID;
input   dst_V_pixel_28_TREADY;
output  [7:0] dst_V_pixel_29_TDATA;
output   dst_V_pixel_29_TVALID;
input   dst_V_pixel_29_TREADY;
output  [7:0] dst_V_pixel_30_TDATA;
output   dst_V_pixel_30_TVALID;
input   dst_V_pixel_30_TREADY;
output  [7:0] dst_V_pixel_31_TDATA;
output   dst_V_pixel_31_TVALID;
input   dst_V_pixel_31_TREADY;
output  [7:0] dst_V_pixel_32_TDATA;
output   dst_V_pixel_32_TVALID;
input   dst_V_pixel_32_TREADY;
output  [7:0] dst_V_pixel_33_TDATA;
output   dst_V_pixel_33_TVALID;
input   dst_V_pixel_33_TREADY;
output  [7:0] dst_V_pixel_34_TDATA;
output   dst_V_pixel_34_TVALID;
input   dst_V_pixel_34_TREADY;
output  [7:0] dst_V_pixel_35_TDATA;
output   dst_V_pixel_35_TVALID;
input   dst_V_pixel_35_TREADY;
output  [7:0] dst_V_pixel_36_TDATA;
output   dst_V_pixel_36_TVALID;
input   dst_V_pixel_36_TREADY;
output  [7:0] dst_V_pixel_37_TDATA;
output   dst_V_pixel_37_TVALID;
input   dst_V_pixel_37_TREADY;
output  [7:0] dst_V_pixel_38_TDATA;
output   dst_V_pixel_38_TVALID;
input   dst_V_pixel_38_TREADY;
output  [7:0] dst_V_pixel_39_TDATA;
output   dst_V_pixel_39_TVALID;
input   dst_V_pixel_39_TREADY;
output  [7:0] dst_V_pixel_40_TDATA;
output   dst_V_pixel_40_TVALID;
input   dst_V_pixel_40_TREADY;
output  [7:0] dst_V_pixel_41_TDATA;
output   dst_V_pixel_41_TVALID;
input   dst_V_pixel_41_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dst_V_pixel_0_TVALID;
reg dst_V_pixel_1_TVALID;
reg dst_V_pixel_2_TVALID;
reg dst_V_pixel_3_TVALID;
reg dst_V_pixel_4_TVALID;
reg dst_V_pixel_5_TVALID;
reg dst_V_pixel_6_TVALID;
reg dst_V_pixel_7_TVALID;
reg dst_V_pixel_8_TVALID;
reg dst_V_pixel_9_TVALID;
reg dst_V_pixel_10_TVALID;
reg dst_V_pixel_11_TVALID;
reg dst_V_pixel_12_TVALID;
reg dst_V_pixel_13_TVALID;
reg dst_V_pixel_14_TVALID;
reg dst_V_pixel_15_TVALID;
reg dst_V_pixel_16_TVALID;
reg dst_V_pixel_17_TVALID;
reg dst_V_pixel_18_TVALID;
reg dst_V_pixel_19_TVALID;
reg dst_V_pixel_20_TVALID;
reg dst_V_pixel_21_TVALID;
reg dst_V_pixel_22_TVALID;
reg dst_V_pixel_23_TVALID;
reg dst_V_pixel_24_TVALID;
reg dst_V_pixel_25_TVALID;
reg dst_V_pixel_26_TVALID;
reg dst_V_pixel_27_TVALID;
reg dst_V_pixel_28_TVALID;
reg dst_V_pixel_29_TVALID;
reg dst_V_pixel_30_TVALID;
reg dst_V_pixel_31_TVALID;
reg dst_V_pixel_32_TVALID;
reg dst_V_pixel_33_TVALID;
reg dst_V_pixel_34_TVALID;
reg dst_V_pixel_35_TVALID;
reg dst_V_pixel_36_TVALID;
reg dst_V_pixel_37_TVALID;
reg dst_V_pixel_38_TVALID;
reg dst_V_pixel_39_TVALID;
reg dst_V_pixel_40_TVALID;
reg dst_V_pixel_41_TVALID;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_20;
reg    src_V_pixel_0_blk_n;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_327;
wire   [0:0] exitcond4_fu_765_p2;
reg    src_V_pixel_1_blk_n;
reg    src_V_pixel_2_blk_n;
reg    src_V_pixel_3_blk_n;
reg    src_V_pixel_4_blk_n;
reg    src_V_pixel_5_blk_n;
reg    src_V_pixel_6_blk_n;
reg    src_V_pixel_7_blk_n;
reg    src_V_pixel_8_blk_n;
reg    src_V_pixel_9_blk_n;
reg    src_V_pixel_10_blk_n;
reg    src_V_pixel_11_blk_n;
reg    src_V_pixel_12_blk_n;
reg    src_V_pixel_13_blk_n;
reg    src_V_pixel_14_blk_n;
reg    src_V_pixel_15_blk_n;
reg    src_V_pixel_16_blk_n;
reg    src_V_pixel_17_blk_n;
reg    src_V_pixel_18_blk_n;
reg    src_V_pixel_19_blk_n;
reg    src_V_pixel_20_blk_n;
reg    src_V_pixel_21_blk_n;
reg    src_V_pixel_22_blk_n;
reg    src_V_pixel_23_blk_n;
reg    src_V_pixel_24_blk_n;
reg    src_V_pixel_25_blk_n;
reg    src_V_pixel_26_blk_n;
reg    src_V_pixel_27_blk_n;
reg    src_V_pixel_28_blk_n;
reg    src_V_pixel_29_blk_n;
reg    src_V_pixel_30_blk_n;
reg    src_V_pixel_31_blk_n;
reg    src_V_pixel_32_blk_n;
reg    src_V_pixel_33_blk_n;
reg    src_V_pixel_34_blk_n;
reg    src_V_pixel_35_blk_n;
reg    src_V_pixel_36_blk_n;
reg    src_V_pixel_37_blk_n;
reg    src_V_pixel_38_blk_n;
reg    src_V_pixel_39_blk_n;
reg    src_V_pixel_40_blk_n;
reg    src_V_pixel_41_blk_n;
reg    dst_V_pixel_0_TDATA_blk_n;
reg    dst_V_pixel_1_TDATA_blk_n;
reg    dst_V_pixel_2_TDATA_blk_n;
reg    dst_V_pixel_3_TDATA_blk_n;
reg    dst_V_pixel_4_TDATA_blk_n;
reg    dst_V_pixel_5_TDATA_blk_n;
reg    dst_V_pixel_6_TDATA_blk_n;
reg    dst_V_pixel_7_TDATA_blk_n;
reg    dst_V_pixel_8_TDATA_blk_n;
reg    dst_V_pixel_9_TDATA_blk_n;
reg    dst_V_pixel_10_TDATA_blk_n;
reg    dst_V_pixel_11_TDATA_blk_n;
reg    dst_V_pixel_12_TDATA_blk_n;
reg    dst_V_pixel_13_TDATA_blk_n;
reg    dst_V_pixel_14_TDATA_blk_n;
reg    dst_V_pixel_15_TDATA_blk_n;
reg    dst_V_pixel_16_TDATA_blk_n;
reg    dst_V_pixel_17_TDATA_blk_n;
reg    dst_V_pixel_18_TDATA_blk_n;
reg    dst_V_pixel_19_TDATA_blk_n;
reg    dst_V_pixel_20_TDATA_blk_n;
reg    dst_V_pixel_21_TDATA_blk_n;
reg    dst_V_pixel_22_TDATA_blk_n;
reg    dst_V_pixel_23_TDATA_blk_n;
reg    dst_V_pixel_24_TDATA_blk_n;
reg    dst_V_pixel_25_TDATA_blk_n;
reg    dst_V_pixel_26_TDATA_blk_n;
reg    dst_V_pixel_27_TDATA_blk_n;
reg    dst_V_pixel_28_TDATA_blk_n;
reg    dst_V_pixel_29_TDATA_blk_n;
reg    dst_V_pixel_30_TDATA_blk_n;
reg    dst_V_pixel_31_TDATA_blk_n;
reg    dst_V_pixel_32_TDATA_blk_n;
reg    dst_V_pixel_33_TDATA_blk_n;
reg    dst_V_pixel_34_TDATA_blk_n;
reg    dst_V_pixel_35_TDATA_blk_n;
reg    dst_V_pixel_36_TDATA_blk_n;
reg    dst_V_pixel_37_TDATA_blk_n;
reg    dst_V_pixel_38_TDATA_blk_n;
reg    dst_V_pixel_39_TDATA_blk_n;
reg    dst_V_pixel_40_TDATA_blk_n;
reg    dst_V_pixel_41_TDATA_blk_n;
wire   [8:0] i_8_fu_771_p2;
wire    src_V_pixel_10_status;
reg    ap_sig_421;
reg    ap_sig_ioackin_dst_V_pixel_0_TREADY;
reg   [8:0] i_reg_754;
reg    ap_sig_434;
reg    src_V_pixel_10_update;
reg    ap_reg_ioackin_dst_V_pixel_0_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_1_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_2_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_3_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_4_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_5_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_6_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_7_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_8_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_9_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_10_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_11_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_12_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_13_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_14_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_15_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_16_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_17_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_18_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_19_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_20_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_21_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_22_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_23_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_24_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_25_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_26_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_27_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_28_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_29_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_30_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_31_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_32_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_33_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_34_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_35_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_36_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_37_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_38_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_39_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_40_TREADY;
reg    ap_reg_ioackin_dst_V_pixel_41_TREADY;
reg   [1:0] ap_NS_fsm;
reg    ap_sig_2655;
reg    ap_sig_333;
reg    ap_sig_2658;
reg    ap_sig_2660;
reg    ap_sig_2662;
reg    ap_sig_2664;
reg    ap_sig_2666;
reg    ap_sig_2668;
reg    ap_sig_2670;
reg    ap_sig_2672;
reg    ap_sig_2674;
reg    ap_sig_2676;
reg    ap_sig_2678;
reg    ap_sig_2680;
reg    ap_sig_2682;
reg    ap_sig_2684;
reg    ap_sig_2686;
reg    ap_sig_2688;
reg    ap_sig_2690;
reg    ap_sig_2692;
reg    ap_sig_2694;
reg    ap_sig_2696;
reg    ap_sig_2698;
reg    ap_sig_2700;
reg    ap_sig_2702;
reg    ap_sig_2704;
reg    ap_sig_2706;
reg    ap_sig_2708;
reg    ap_sig_2710;
reg    ap_sig_2712;
reg    ap_sig_2714;
reg    ap_sig_2716;
reg    ap_sig_2718;
reg    ap_sig_2720;
reg    ap_sig_2722;
reg    ap_sig_2724;
reg    ap_sig_2726;
reg    ap_sig_2728;
reg    ap_sig_2730;
reg    ap_sig_2732;
reg    ap_sig_2734;
reg    ap_sig_2736;
reg    ap_sig_2738;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'b1;
#0 ap_reg_ioackin_dst_V_pixel_0_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_1_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_2_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_3_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_4_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_5_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_6_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_7_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_8_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_9_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_10_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_11_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_12_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_13_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_14_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_15_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_16_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_17_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_18_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_19_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_20_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_21_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_22_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_23_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_24_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_25_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_26_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_27_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_28_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_29_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_30_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_31_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_32_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_33_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_34_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_35_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_36_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_37_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_38_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_39_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_40_TREADY = 1'b0;
#0 ap_reg_ioackin_dst_V_pixel_41_TREADY = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY))) & ~(exitcond4_fu_765_p2 == 1'b0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_0_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_0_TREADY <= 1'b0;
            end else if (ap_sig_2655) begin
                ap_reg_ioackin_dst_V_pixel_0_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_10_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_10_TREADY <= 1'b0;
            end else if (ap_sig_2658) begin
                ap_reg_ioackin_dst_V_pixel_10_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_11_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_11_TREADY <= 1'b0;
            end else if (ap_sig_2660) begin
                ap_reg_ioackin_dst_V_pixel_11_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_12_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_12_TREADY <= 1'b0;
            end else if (ap_sig_2662) begin
                ap_reg_ioackin_dst_V_pixel_12_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_13_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_13_TREADY <= 1'b0;
            end else if (ap_sig_2664) begin
                ap_reg_ioackin_dst_V_pixel_13_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_14_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_14_TREADY <= 1'b0;
            end else if (ap_sig_2666) begin
                ap_reg_ioackin_dst_V_pixel_14_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_15_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_15_TREADY <= 1'b0;
            end else if (ap_sig_2668) begin
                ap_reg_ioackin_dst_V_pixel_15_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_16_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_16_TREADY <= 1'b0;
            end else if (ap_sig_2670) begin
                ap_reg_ioackin_dst_V_pixel_16_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_17_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_17_TREADY <= 1'b0;
            end else if (ap_sig_2672) begin
                ap_reg_ioackin_dst_V_pixel_17_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_18_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_18_TREADY <= 1'b0;
            end else if (ap_sig_2674) begin
                ap_reg_ioackin_dst_V_pixel_18_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_19_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_19_TREADY <= 1'b0;
            end else if (ap_sig_2676) begin
                ap_reg_ioackin_dst_V_pixel_19_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_1_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_1_TREADY <= 1'b0;
            end else if (ap_sig_2678) begin
                ap_reg_ioackin_dst_V_pixel_1_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_20_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_20_TREADY <= 1'b0;
            end else if (ap_sig_2680) begin
                ap_reg_ioackin_dst_V_pixel_20_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_21_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_21_TREADY <= 1'b0;
            end else if (ap_sig_2682) begin
                ap_reg_ioackin_dst_V_pixel_21_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_22_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_22_TREADY <= 1'b0;
            end else if (ap_sig_2684) begin
                ap_reg_ioackin_dst_V_pixel_22_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_23_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_23_TREADY <= 1'b0;
            end else if (ap_sig_2686) begin
                ap_reg_ioackin_dst_V_pixel_23_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_24_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_24_TREADY <= 1'b0;
            end else if (ap_sig_2688) begin
                ap_reg_ioackin_dst_V_pixel_24_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_25_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_25_TREADY <= 1'b0;
            end else if (ap_sig_2690) begin
                ap_reg_ioackin_dst_V_pixel_25_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_26_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_26_TREADY <= 1'b0;
            end else if (ap_sig_2692) begin
                ap_reg_ioackin_dst_V_pixel_26_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_27_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_27_TREADY <= 1'b0;
            end else if (ap_sig_2694) begin
                ap_reg_ioackin_dst_V_pixel_27_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_28_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_28_TREADY <= 1'b0;
            end else if (ap_sig_2696) begin
                ap_reg_ioackin_dst_V_pixel_28_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_29_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_29_TREADY <= 1'b0;
            end else if (ap_sig_2698) begin
                ap_reg_ioackin_dst_V_pixel_29_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_2_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_2_TREADY <= 1'b0;
            end else if (ap_sig_2700) begin
                ap_reg_ioackin_dst_V_pixel_2_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_30_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_30_TREADY <= 1'b0;
            end else if (ap_sig_2702) begin
                ap_reg_ioackin_dst_V_pixel_30_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_31_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_31_TREADY <= 1'b0;
            end else if (ap_sig_2704) begin
                ap_reg_ioackin_dst_V_pixel_31_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_32_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_32_TREADY <= 1'b0;
            end else if (ap_sig_2706) begin
                ap_reg_ioackin_dst_V_pixel_32_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_33_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_33_TREADY <= 1'b0;
            end else if (ap_sig_2708) begin
                ap_reg_ioackin_dst_V_pixel_33_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_34_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_34_TREADY <= 1'b0;
            end else if (ap_sig_2710) begin
                ap_reg_ioackin_dst_V_pixel_34_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_35_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_35_TREADY <= 1'b0;
            end else if (ap_sig_2712) begin
                ap_reg_ioackin_dst_V_pixel_35_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_36_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_36_TREADY <= 1'b0;
            end else if (ap_sig_2714) begin
                ap_reg_ioackin_dst_V_pixel_36_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_37_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_37_TREADY <= 1'b0;
            end else if (ap_sig_2716) begin
                ap_reg_ioackin_dst_V_pixel_37_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_38_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_38_TREADY <= 1'b0;
            end else if (ap_sig_2718) begin
                ap_reg_ioackin_dst_V_pixel_38_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_39_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_39_TREADY <= 1'b0;
            end else if (ap_sig_2720) begin
                ap_reg_ioackin_dst_V_pixel_39_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_3_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_3_TREADY <= 1'b0;
            end else if (ap_sig_2722) begin
                ap_reg_ioackin_dst_V_pixel_3_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_40_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_40_TREADY <= 1'b0;
            end else if (ap_sig_2724) begin
                ap_reg_ioackin_dst_V_pixel_40_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_41_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_41_TREADY <= 1'b0;
            end else if (ap_sig_2726) begin
                ap_reg_ioackin_dst_V_pixel_41_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_4_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_4_TREADY <= 1'b0;
            end else if (ap_sig_2728) begin
                ap_reg_ioackin_dst_V_pixel_4_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_5_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_5_TREADY <= 1'b0;
            end else if (ap_sig_2730) begin
                ap_reg_ioackin_dst_V_pixel_5_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_6_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_6_TREADY <= 1'b0;
            end else if (ap_sig_2732) begin
                ap_reg_ioackin_dst_V_pixel_6_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_7_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_7_TREADY <= 1'b0;
            end else if (ap_sig_2734) begin
                ap_reg_ioackin_dst_V_pixel_7_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_8_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_8_TREADY <= 1'b0;
            end else if (ap_sig_2736) begin
                ap_reg_ioackin_dst_V_pixel_8_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_dst_V_pixel_9_TREADY <= 1'b0;
    end else begin
        if (ap_sig_333) begin
            if (~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY)))) begin
                ap_reg_ioackin_dst_V_pixel_9_TREADY <= 1'b0;
            end else if (ap_sig_2738) begin
                ap_reg_ioackin_dst_V_pixel_9_TREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY))))) begin
        i_reg_754 <= i_8_fu_771_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_434)) begin
        i_reg_754 <= ap_const_lv9_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY))) & ~(exitcond4_fu_765_p2 == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY))) & ~(exitcond4_fu_765_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_327) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_dst_V_pixel_0_TREADY)) begin
        ap_sig_ioackin_dst_V_pixel_0_TREADY = dst_V_pixel_0_TREADY;
    end else begin
        ap_sig_ioackin_dst_V_pixel_0_TREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_0_TDATA_blk_n = dst_V_pixel_0_TREADY;
    end else begin
        dst_V_pixel_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_0_TREADY))) begin
        dst_V_pixel_0_TVALID = 1'b1;
    end else begin
        dst_V_pixel_0_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_10_TDATA_blk_n = dst_V_pixel_10_TREADY;
    end else begin
        dst_V_pixel_10_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_10_TREADY))) begin
        dst_V_pixel_10_TVALID = 1'b1;
    end else begin
        dst_V_pixel_10_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_11_TDATA_blk_n = dst_V_pixel_11_TREADY;
    end else begin
        dst_V_pixel_11_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_11_TREADY))) begin
        dst_V_pixel_11_TVALID = 1'b1;
    end else begin
        dst_V_pixel_11_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_12_TDATA_blk_n = dst_V_pixel_12_TREADY;
    end else begin
        dst_V_pixel_12_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_12_TREADY))) begin
        dst_V_pixel_12_TVALID = 1'b1;
    end else begin
        dst_V_pixel_12_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_13_TDATA_blk_n = dst_V_pixel_13_TREADY;
    end else begin
        dst_V_pixel_13_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_13_TREADY))) begin
        dst_V_pixel_13_TVALID = 1'b1;
    end else begin
        dst_V_pixel_13_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_14_TDATA_blk_n = dst_V_pixel_14_TREADY;
    end else begin
        dst_V_pixel_14_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_14_TREADY))) begin
        dst_V_pixel_14_TVALID = 1'b1;
    end else begin
        dst_V_pixel_14_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_15_TDATA_blk_n = dst_V_pixel_15_TREADY;
    end else begin
        dst_V_pixel_15_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_15_TREADY))) begin
        dst_V_pixel_15_TVALID = 1'b1;
    end else begin
        dst_V_pixel_15_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_16_TDATA_blk_n = dst_V_pixel_16_TREADY;
    end else begin
        dst_V_pixel_16_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_16_TREADY))) begin
        dst_V_pixel_16_TVALID = 1'b1;
    end else begin
        dst_V_pixel_16_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_17_TDATA_blk_n = dst_V_pixel_17_TREADY;
    end else begin
        dst_V_pixel_17_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_17_TREADY))) begin
        dst_V_pixel_17_TVALID = 1'b1;
    end else begin
        dst_V_pixel_17_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_18_TDATA_blk_n = dst_V_pixel_18_TREADY;
    end else begin
        dst_V_pixel_18_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_18_TREADY))) begin
        dst_V_pixel_18_TVALID = 1'b1;
    end else begin
        dst_V_pixel_18_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_19_TDATA_blk_n = dst_V_pixel_19_TREADY;
    end else begin
        dst_V_pixel_19_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_19_TREADY))) begin
        dst_V_pixel_19_TVALID = 1'b1;
    end else begin
        dst_V_pixel_19_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_1_TDATA_blk_n = dst_V_pixel_1_TREADY;
    end else begin
        dst_V_pixel_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_1_TREADY))) begin
        dst_V_pixel_1_TVALID = 1'b1;
    end else begin
        dst_V_pixel_1_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_20_TDATA_blk_n = dst_V_pixel_20_TREADY;
    end else begin
        dst_V_pixel_20_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_20_TREADY))) begin
        dst_V_pixel_20_TVALID = 1'b1;
    end else begin
        dst_V_pixel_20_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_21_TDATA_blk_n = dst_V_pixel_21_TREADY;
    end else begin
        dst_V_pixel_21_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_21_TREADY))) begin
        dst_V_pixel_21_TVALID = 1'b1;
    end else begin
        dst_V_pixel_21_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_22_TDATA_blk_n = dst_V_pixel_22_TREADY;
    end else begin
        dst_V_pixel_22_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_22_TREADY))) begin
        dst_V_pixel_22_TVALID = 1'b1;
    end else begin
        dst_V_pixel_22_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_23_TDATA_blk_n = dst_V_pixel_23_TREADY;
    end else begin
        dst_V_pixel_23_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_23_TREADY))) begin
        dst_V_pixel_23_TVALID = 1'b1;
    end else begin
        dst_V_pixel_23_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_24_TDATA_blk_n = dst_V_pixel_24_TREADY;
    end else begin
        dst_V_pixel_24_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_24_TREADY))) begin
        dst_V_pixel_24_TVALID = 1'b1;
    end else begin
        dst_V_pixel_24_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_25_TDATA_blk_n = dst_V_pixel_25_TREADY;
    end else begin
        dst_V_pixel_25_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_25_TREADY))) begin
        dst_V_pixel_25_TVALID = 1'b1;
    end else begin
        dst_V_pixel_25_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_26_TDATA_blk_n = dst_V_pixel_26_TREADY;
    end else begin
        dst_V_pixel_26_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_26_TREADY))) begin
        dst_V_pixel_26_TVALID = 1'b1;
    end else begin
        dst_V_pixel_26_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_27_TDATA_blk_n = dst_V_pixel_27_TREADY;
    end else begin
        dst_V_pixel_27_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_27_TREADY))) begin
        dst_V_pixel_27_TVALID = 1'b1;
    end else begin
        dst_V_pixel_27_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_28_TDATA_blk_n = dst_V_pixel_28_TREADY;
    end else begin
        dst_V_pixel_28_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_28_TREADY))) begin
        dst_V_pixel_28_TVALID = 1'b1;
    end else begin
        dst_V_pixel_28_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_29_TDATA_blk_n = dst_V_pixel_29_TREADY;
    end else begin
        dst_V_pixel_29_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_29_TREADY))) begin
        dst_V_pixel_29_TVALID = 1'b1;
    end else begin
        dst_V_pixel_29_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_2_TDATA_blk_n = dst_V_pixel_2_TREADY;
    end else begin
        dst_V_pixel_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_2_TREADY))) begin
        dst_V_pixel_2_TVALID = 1'b1;
    end else begin
        dst_V_pixel_2_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_30_TDATA_blk_n = dst_V_pixel_30_TREADY;
    end else begin
        dst_V_pixel_30_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_30_TREADY))) begin
        dst_V_pixel_30_TVALID = 1'b1;
    end else begin
        dst_V_pixel_30_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_31_TDATA_blk_n = dst_V_pixel_31_TREADY;
    end else begin
        dst_V_pixel_31_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_31_TREADY))) begin
        dst_V_pixel_31_TVALID = 1'b1;
    end else begin
        dst_V_pixel_31_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_32_TDATA_blk_n = dst_V_pixel_32_TREADY;
    end else begin
        dst_V_pixel_32_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_32_TREADY))) begin
        dst_V_pixel_32_TVALID = 1'b1;
    end else begin
        dst_V_pixel_32_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_33_TDATA_blk_n = dst_V_pixel_33_TREADY;
    end else begin
        dst_V_pixel_33_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_33_TREADY))) begin
        dst_V_pixel_33_TVALID = 1'b1;
    end else begin
        dst_V_pixel_33_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_34_TDATA_blk_n = dst_V_pixel_34_TREADY;
    end else begin
        dst_V_pixel_34_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_34_TREADY))) begin
        dst_V_pixel_34_TVALID = 1'b1;
    end else begin
        dst_V_pixel_34_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_35_TDATA_blk_n = dst_V_pixel_35_TREADY;
    end else begin
        dst_V_pixel_35_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_35_TREADY))) begin
        dst_V_pixel_35_TVALID = 1'b1;
    end else begin
        dst_V_pixel_35_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_36_TDATA_blk_n = dst_V_pixel_36_TREADY;
    end else begin
        dst_V_pixel_36_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_36_TREADY))) begin
        dst_V_pixel_36_TVALID = 1'b1;
    end else begin
        dst_V_pixel_36_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_37_TDATA_blk_n = dst_V_pixel_37_TREADY;
    end else begin
        dst_V_pixel_37_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_37_TREADY))) begin
        dst_V_pixel_37_TVALID = 1'b1;
    end else begin
        dst_V_pixel_37_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_38_TDATA_blk_n = dst_V_pixel_38_TREADY;
    end else begin
        dst_V_pixel_38_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_38_TREADY))) begin
        dst_V_pixel_38_TVALID = 1'b1;
    end else begin
        dst_V_pixel_38_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_39_TDATA_blk_n = dst_V_pixel_39_TREADY;
    end else begin
        dst_V_pixel_39_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_39_TREADY))) begin
        dst_V_pixel_39_TVALID = 1'b1;
    end else begin
        dst_V_pixel_39_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_3_TDATA_blk_n = dst_V_pixel_3_TREADY;
    end else begin
        dst_V_pixel_3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_3_TREADY))) begin
        dst_V_pixel_3_TVALID = 1'b1;
    end else begin
        dst_V_pixel_3_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_40_TDATA_blk_n = dst_V_pixel_40_TREADY;
    end else begin
        dst_V_pixel_40_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_40_TREADY))) begin
        dst_V_pixel_40_TVALID = 1'b1;
    end else begin
        dst_V_pixel_40_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_41_TDATA_blk_n = dst_V_pixel_41_TREADY;
    end else begin
        dst_V_pixel_41_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_41_TREADY))) begin
        dst_V_pixel_41_TVALID = 1'b1;
    end else begin
        dst_V_pixel_41_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_4_TDATA_blk_n = dst_V_pixel_4_TREADY;
    end else begin
        dst_V_pixel_4_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_4_TREADY))) begin
        dst_V_pixel_4_TVALID = 1'b1;
    end else begin
        dst_V_pixel_4_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_5_TDATA_blk_n = dst_V_pixel_5_TREADY;
    end else begin
        dst_V_pixel_5_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_5_TREADY))) begin
        dst_V_pixel_5_TVALID = 1'b1;
    end else begin
        dst_V_pixel_5_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_6_TDATA_blk_n = dst_V_pixel_6_TREADY;
    end else begin
        dst_V_pixel_6_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_6_TREADY))) begin
        dst_V_pixel_6_TVALID = 1'b1;
    end else begin
        dst_V_pixel_6_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_7_TDATA_blk_n = dst_V_pixel_7_TREADY;
    end else begin
        dst_V_pixel_7_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_7_TREADY))) begin
        dst_V_pixel_7_TVALID = 1'b1;
    end else begin
        dst_V_pixel_7_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_8_TDATA_blk_n = dst_V_pixel_8_TREADY;
    end else begin
        dst_V_pixel_8_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_8_TREADY))) begin
        dst_V_pixel_8_TVALID = 1'b1;
    end else begin
        dst_V_pixel_8_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        dst_V_pixel_9_TDATA_blk_n = dst_V_pixel_9_TREADY;
    end else begin
        dst_V_pixel_9_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~ap_sig_421 & (1'b0 == ap_reg_ioackin_dst_V_pixel_9_TREADY))) begin
        dst_V_pixel_9_TVALID = 1'b1;
    end else begin
        dst_V_pixel_9_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_0_blk_n = src_V_pixel_0_empty_n;
    end else begin
        src_V_pixel_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_10_blk_n = src_V_pixel_10_empty_n;
    end else begin
        src_V_pixel_10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0) & ~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY))))) begin
        src_V_pixel_10_update = 1'b1;
    end else begin
        src_V_pixel_10_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_11_blk_n = src_V_pixel_11_empty_n;
    end else begin
        src_V_pixel_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_12_blk_n = src_V_pixel_12_empty_n;
    end else begin
        src_V_pixel_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_13_blk_n = src_V_pixel_13_empty_n;
    end else begin
        src_V_pixel_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_14_blk_n = src_V_pixel_14_empty_n;
    end else begin
        src_V_pixel_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_15_blk_n = src_V_pixel_15_empty_n;
    end else begin
        src_V_pixel_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_16_blk_n = src_V_pixel_16_empty_n;
    end else begin
        src_V_pixel_16_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_17_blk_n = src_V_pixel_17_empty_n;
    end else begin
        src_V_pixel_17_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_18_blk_n = src_V_pixel_18_empty_n;
    end else begin
        src_V_pixel_18_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_19_blk_n = src_V_pixel_19_empty_n;
    end else begin
        src_V_pixel_19_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_1_blk_n = src_V_pixel_1_empty_n;
    end else begin
        src_V_pixel_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_20_blk_n = src_V_pixel_20_empty_n;
    end else begin
        src_V_pixel_20_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_21_blk_n = src_V_pixel_21_empty_n;
    end else begin
        src_V_pixel_21_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_22_blk_n = src_V_pixel_22_empty_n;
    end else begin
        src_V_pixel_22_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_23_blk_n = src_V_pixel_23_empty_n;
    end else begin
        src_V_pixel_23_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_24_blk_n = src_V_pixel_24_empty_n;
    end else begin
        src_V_pixel_24_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_25_blk_n = src_V_pixel_25_empty_n;
    end else begin
        src_V_pixel_25_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_26_blk_n = src_V_pixel_26_empty_n;
    end else begin
        src_V_pixel_26_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_27_blk_n = src_V_pixel_27_empty_n;
    end else begin
        src_V_pixel_27_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_28_blk_n = src_V_pixel_28_empty_n;
    end else begin
        src_V_pixel_28_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_29_blk_n = src_V_pixel_29_empty_n;
    end else begin
        src_V_pixel_29_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_2_blk_n = src_V_pixel_2_empty_n;
    end else begin
        src_V_pixel_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_30_blk_n = src_V_pixel_30_empty_n;
    end else begin
        src_V_pixel_30_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_31_blk_n = src_V_pixel_31_empty_n;
    end else begin
        src_V_pixel_31_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_32_blk_n = src_V_pixel_32_empty_n;
    end else begin
        src_V_pixel_32_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_33_blk_n = src_V_pixel_33_empty_n;
    end else begin
        src_V_pixel_33_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_34_blk_n = src_V_pixel_34_empty_n;
    end else begin
        src_V_pixel_34_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_35_blk_n = src_V_pixel_35_empty_n;
    end else begin
        src_V_pixel_35_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_36_blk_n = src_V_pixel_36_empty_n;
    end else begin
        src_V_pixel_36_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_37_blk_n = src_V_pixel_37_empty_n;
    end else begin
        src_V_pixel_37_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_38_blk_n = src_V_pixel_38_empty_n;
    end else begin
        src_V_pixel_38_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_39_blk_n = src_V_pixel_39_empty_n;
    end else begin
        src_V_pixel_39_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_3_blk_n = src_V_pixel_3_empty_n;
    end else begin
        src_V_pixel_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_40_blk_n = src_V_pixel_40_empty_n;
    end else begin
        src_V_pixel_40_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_41_blk_n = src_V_pixel_41_empty_n;
    end else begin
        src_V_pixel_41_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_4_blk_n = src_V_pixel_4_empty_n;
    end else begin
        src_V_pixel_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_5_blk_n = src_V_pixel_5_empty_n;
    end else begin
        src_V_pixel_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_6_blk_n = src_V_pixel_6_empty_n;
    end else begin
        src_V_pixel_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_7_blk_n = src_V_pixel_7_empty_n;
    end else begin
        src_V_pixel_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_8_blk_n = src_V_pixel_8_empty_n;
    end else begin
        src_V_pixel_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0))) begin
        src_V_pixel_9_blk_n = src_V_pixel_9_empty_n;
    end else begin
        src_V_pixel_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_434) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY))) & ~(exitcond4_fu_765_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((exitcond4_fu_765_p2 == 1'b0) & ~(ap_sig_421 | ((exitcond4_fu_765_p2 == 1'b0) & (1'b0 == ap_sig_ioackin_dst_V_pixel_0_TREADY))))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_20 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_2655 = (~ap_sig_421 & (1'b1 == dst_V_pixel_0_TREADY));
end

always @ (*) begin
    ap_sig_2658 = (~ap_sig_421 & (1'b1 == dst_V_pixel_10_TREADY));
end

always @ (*) begin
    ap_sig_2660 = (~ap_sig_421 & (1'b1 == dst_V_pixel_11_TREADY));
end

always @ (*) begin
    ap_sig_2662 = (~ap_sig_421 & (1'b1 == dst_V_pixel_12_TREADY));
end

always @ (*) begin
    ap_sig_2664 = (~ap_sig_421 & (1'b1 == dst_V_pixel_13_TREADY));
end

always @ (*) begin
    ap_sig_2666 = (~ap_sig_421 & (1'b1 == dst_V_pixel_14_TREADY));
end

always @ (*) begin
    ap_sig_2668 = (~ap_sig_421 & (1'b1 == dst_V_pixel_15_TREADY));
end

always @ (*) begin
    ap_sig_2670 = (~ap_sig_421 & (1'b1 == dst_V_pixel_16_TREADY));
end

always @ (*) begin
    ap_sig_2672 = (~ap_sig_421 & (1'b1 == dst_V_pixel_17_TREADY));
end

always @ (*) begin
    ap_sig_2674 = (~ap_sig_421 & (1'b1 == dst_V_pixel_18_TREADY));
end

always @ (*) begin
    ap_sig_2676 = (~ap_sig_421 & (1'b1 == dst_V_pixel_19_TREADY));
end

always @ (*) begin
    ap_sig_2678 = (~ap_sig_421 & (1'b1 == dst_V_pixel_1_TREADY));
end

always @ (*) begin
    ap_sig_2680 = (~ap_sig_421 & (1'b1 == dst_V_pixel_20_TREADY));
end

always @ (*) begin
    ap_sig_2682 = (~ap_sig_421 & (1'b1 == dst_V_pixel_21_TREADY));
end

always @ (*) begin
    ap_sig_2684 = (~ap_sig_421 & (1'b1 == dst_V_pixel_22_TREADY));
end

always @ (*) begin
    ap_sig_2686 = (~ap_sig_421 & (1'b1 == dst_V_pixel_23_TREADY));
end

always @ (*) begin
    ap_sig_2688 = (~ap_sig_421 & (1'b1 == dst_V_pixel_24_TREADY));
end

always @ (*) begin
    ap_sig_2690 = (~ap_sig_421 & (1'b1 == dst_V_pixel_25_TREADY));
end

always @ (*) begin
    ap_sig_2692 = (~ap_sig_421 & (1'b1 == dst_V_pixel_26_TREADY));
end

always @ (*) begin
    ap_sig_2694 = (~ap_sig_421 & (1'b1 == dst_V_pixel_27_TREADY));
end

always @ (*) begin
    ap_sig_2696 = (~ap_sig_421 & (1'b1 == dst_V_pixel_28_TREADY));
end

always @ (*) begin
    ap_sig_2698 = (~ap_sig_421 & (1'b1 == dst_V_pixel_29_TREADY));
end

always @ (*) begin
    ap_sig_2700 = (~ap_sig_421 & (1'b1 == dst_V_pixel_2_TREADY));
end

always @ (*) begin
    ap_sig_2702 = (~ap_sig_421 & (1'b1 == dst_V_pixel_30_TREADY));
end

always @ (*) begin
    ap_sig_2704 = (~ap_sig_421 & (1'b1 == dst_V_pixel_31_TREADY));
end

always @ (*) begin
    ap_sig_2706 = (~ap_sig_421 & (1'b1 == dst_V_pixel_32_TREADY));
end

always @ (*) begin
    ap_sig_2708 = (~ap_sig_421 & (1'b1 == dst_V_pixel_33_TREADY));
end

always @ (*) begin
    ap_sig_2710 = (~ap_sig_421 & (1'b1 == dst_V_pixel_34_TREADY));
end

always @ (*) begin
    ap_sig_2712 = (~ap_sig_421 & (1'b1 == dst_V_pixel_35_TREADY));
end

always @ (*) begin
    ap_sig_2714 = (~ap_sig_421 & (1'b1 == dst_V_pixel_36_TREADY));
end

always @ (*) begin
    ap_sig_2716 = (~ap_sig_421 & (1'b1 == dst_V_pixel_37_TREADY));
end

always @ (*) begin
    ap_sig_2718 = (~ap_sig_421 & (1'b1 == dst_V_pixel_38_TREADY));
end

always @ (*) begin
    ap_sig_2720 = (~ap_sig_421 & (1'b1 == dst_V_pixel_39_TREADY));
end

always @ (*) begin
    ap_sig_2722 = (~ap_sig_421 & (1'b1 == dst_V_pixel_3_TREADY));
end

always @ (*) begin
    ap_sig_2724 = (~ap_sig_421 & (1'b1 == dst_V_pixel_40_TREADY));
end

always @ (*) begin
    ap_sig_2726 = (~ap_sig_421 & (1'b1 == dst_V_pixel_41_TREADY));
end

always @ (*) begin
    ap_sig_2728 = (~ap_sig_421 & (1'b1 == dst_V_pixel_4_TREADY));
end

always @ (*) begin
    ap_sig_2730 = (~ap_sig_421 & (1'b1 == dst_V_pixel_5_TREADY));
end

always @ (*) begin
    ap_sig_2732 = (~ap_sig_421 & (1'b1 == dst_V_pixel_6_TREADY));
end

always @ (*) begin
    ap_sig_2734 = (~ap_sig_421 & (1'b1 == dst_V_pixel_7_TREADY));
end

always @ (*) begin
    ap_sig_2736 = (~ap_sig_421 & (1'b1 == dst_V_pixel_8_TREADY));
end

always @ (*) begin
    ap_sig_2738 = (~ap_sig_421 & (1'b1 == dst_V_pixel_9_TREADY));
end

always @ (*) begin
    ap_sig_327 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_333 = ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_765_p2 == 1'b0));
end

always @ (*) begin
    ap_sig_421 = ((exitcond4_fu_765_p2 == 1'b0) & (src_V_pixel_10_status == 1'b0));
end

always @ (*) begin
    ap_sig_434 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign dst_V_pixel_0_TDATA = src_V_pixel_0_dout;

assign dst_V_pixel_10_TDATA = src_V_pixel_10_dout;

assign dst_V_pixel_11_TDATA = src_V_pixel_11_dout;

assign dst_V_pixel_12_TDATA = src_V_pixel_12_dout;

assign dst_V_pixel_13_TDATA = src_V_pixel_13_dout;

assign dst_V_pixel_14_TDATA = src_V_pixel_14_dout;

assign dst_V_pixel_15_TDATA = src_V_pixel_15_dout;

assign dst_V_pixel_16_TDATA = src_V_pixel_16_dout;

assign dst_V_pixel_17_TDATA = src_V_pixel_17_dout;

assign dst_V_pixel_18_TDATA = src_V_pixel_18_dout;

assign dst_V_pixel_19_TDATA = src_V_pixel_19_dout;

assign dst_V_pixel_1_TDATA = src_V_pixel_1_dout;

assign dst_V_pixel_20_TDATA = src_V_pixel_20_dout;

assign dst_V_pixel_21_TDATA = src_V_pixel_21_dout;

assign dst_V_pixel_22_TDATA = src_V_pixel_22_dout;

assign dst_V_pixel_23_TDATA = src_V_pixel_23_dout;

assign dst_V_pixel_24_TDATA = src_V_pixel_24_dout;

assign dst_V_pixel_25_TDATA = src_V_pixel_25_dout;

assign dst_V_pixel_26_TDATA = src_V_pixel_26_dout;

assign dst_V_pixel_27_TDATA = src_V_pixel_27_dout;

assign dst_V_pixel_28_TDATA = src_V_pixel_28_dout;

assign dst_V_pixel_29_TDATA = src_V_pixel_29_dout;

assign dst_V_pixel_2_TDATA = src_V_pixel_2_dout;

assign dst_V_pixel_30_TDATA = src_V_pixel_30_dout;

assign dst_V_pixel_31_TDATA = src_V_pixel_31_dout;

assign dst_V_pixel_32_TDATA = src_V_pixel_32_dout;

assign dst_V_pixel_33_TDATA = src_V_pixel_33_dout;

assign dst_V_pixel_34_TDATA = src_V_pixel_34_dout;

assign dst_V_pixel_35_TDATA = src_V_pixel_35_dout;

assign dst_V_pixel_36_TDATA = src_V_pixel_36_dout;

assign dst_V_pixel_37_TDATA = src_V_pixel_37_dout;

assign dst_V_pixel_38_TDATA = src_V_pixel_38_dout;

assign dst_V_pixel_39_TDATA = src_V_pixel_39_dout;

assign dst_V_pixel_3_TDATA = src_V_pixel_3_dout;

assign dst_V_pixel_40_TDATA = src_V_pixel_40_dout;

assign dst_V_pixel_41_TDATA = src_V_pixel_41_dout;

assign dst_V_pixel_4_TDATA = src_V_pixel_4_dout;

assign dst_V_pixel_5_TDATA = src_V_pixel_5_dout;

assign dst_V_pixel_6_TDATA = src_V_pixel_6_dout;

assign dst_V_pixel_7_TDATA = src_V_pixel_7_dout;

assign dst_V_pixel_8_TDATA = src_V_pixel_8_dout;

assign dst_V_pixel_9_TDATA = src_V_pixel_9_dout;

assign exitcond4_fu_765_p2 = ((i_reg_754 == ap_const_lv9_1E0) ? 1'b1 : 1'b0);

assign i_8_fu_771_p2 = (i_reg_754 + ap_const_lv9_1);

assign src_V_pixel_0_read = src_V_pixel_10_update;

assign src_V_pixel_10_read = src_V_pixel_10_update;

assign src_V_pixel_10_status = (src_V_pixel_0_empty_n & src_V_pixel_1_empty_n & src_V_pixel_2_empty_n & src_V_pixel_3_empty_n & src_V_pixel_4_empty_n & src_V_pixel_5_empty_n & src_V_pixel_6_empty_n & src_V_pixel_7_empty_n & src_V_pixel_8_empty_n & src_V_pixel_9_empty_n & src_V_pixel_10_empty_n & src_V_pixel_11_empty_n & src_V_pixel_12_empty_n & src_V_pixel_13_empty_n & src_V_pixel_14_empty_n & src_V_pixel_15_empty_n & src_V_pixel_16_empty_n & src_V_pixel_17_empty_n & src_V_pixel_18_empty_n & src_V_pixel_19_empty_n & src_V_pixel_20_empty_n & src_V_pixel_21_empty_n & src_V_pixel_22_empty_n & src_V_pixel_23_empty_n & src_V_pixel_24_empty_n & src_V_pixel_25_empty_n & src_V_pixel_26_empty_n & src_V_pixel_27_empty_n & src_V_pixel_28_empty_n & src_V_pixel_29_empty_n & src_V_pixel_30_empty_n & src_V_pixel_31_empty_n & src_V_pixel_32_empty_n & src_V_pixel_33_empty_n & src_V_pixel_34_empty_n & src_V_pixel_35_empty_n & src_V_pixel_36_empty_n & src_V_pixel_37_empty_n & src_V_pixel_38_empty_n & src_V_pixel_39_empty_n & src_V_pixel_40_empty_n & src_V_pixel_41_empty_n);

assign src_V_pixel_11_read = src_V_pixel_10_update;

assign src_V_pixel_12_read = src_V_pixel_10_update;

assign src_V_pixel_13_read = src_V_pixel_10_update;

assign src_V_pixel_14_read = src_V_pixel_10_update;

assign src_V_pixel_15_read = src_V_pixel_10_update;

assign src_V_pixel_16_read = src_V_pixel_10_update;

assign src_V_pixel_17_read = src_V_pixel_10_update;

assign src_V_pixel_18_read = src_V_pixel_10_update;

assign src_V_pixel_19_read = src_V_pixel_10_update;

assign src_V_pixel_1_read = src_V_pixel_10_update;

assign src_V_pixel_20_read = src_V_pixel_10_update;

assign src_V_pixel_21_read = src_V_pixel_10_update;

assign src_V_pixel_22_read = src_V_pixel_10_update;

assign src_V_pixel_23_read = src_V_pixel_10_update;

assign src_V_pixel_24_read = src_V_pixel_10_update;

assign src_V_pixel_25_read = src_V_pixel_10_update;

assign src_V_pixel_26_read = src_V_pixel_10_update;

assign src_V_pixel_27_read = src_V_pixel_10_update;

assign src_V_pixel_28_read = src_V_pixel_10_update;

assign src_V_pixel_29_read = src_V_pixel_10_update;

assign src_V_pixel_2_read = src_V_pixel_10_update;

assign src_V_pixel_30_read = src_V_pixel_10_update;

assign src_V_pixel_31_read = src_V_pixel_10_update;

assign src_V_pixel_32_read = src_V_pixel_10_update;

assign src_V_pixel_33_read = src_V_pixel_10_update;

assign src_V_pixel_34_read = src_V_pixel_10_update;

assign src_V_pixel_35_read = src_V_pixel_10_update;

assign src_V_pixel_36_read = src_V_pixel_10_update;

assign src_V_pixel_37_read = src_V_pixel_10_update;

assign src_V_pixel_38_read = src_V_pixel_10_update;

assign src_V_pixel_39_read = src_V_pixel_10_update;

assign src_V_pixel_3_read = src_V_pixel_10_update;

assign src_V_pixel_40_read = src_V_pixel_10_update;

assign src_V_pixel_41_read = src_V_pixel_10_update;

assign src_V_pixel_4_read = src_V_pixel_10_update;

assign src_V_pixel_5_read = src_V_pixel_10_update;

assign src_V_pixel_6_read = src_V_pixel_10_update;

assign src_V_pixel_7_read = src_V_pixel_10_update;

assign src_V_pixel_8_read = src_V_pixel_10_update;

assign src_V_pixel_9_read = src_V_pixel_10_update;

endmodule //Sobel_downstrm2upstrm_array_of_pixel_1
