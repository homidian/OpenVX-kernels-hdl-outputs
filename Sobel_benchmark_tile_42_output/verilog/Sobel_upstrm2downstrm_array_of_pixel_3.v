// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Sobel_upstrm2downstrm_array_of_pixel_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_V_pixel_0_dout,
        src_V_pixel_0_empty_n,
        src_V_pixel_0_read,
        src_V_pixel_1_dout,
        src_V_pixel_1_empty_n,
        src_V_pixel_1_read,
        src_V_pixel_2_dout,
        src_V_pixel_2_empty_n,
        src_V_pixel_2_read,
        src_V_pixel_3_dout,
        src_V_pixel_3_empty_n,
        src_V_pixel_3_read,
        src_V_pixel_4_dout,
        src_V_pixel_4_empty_n,
        src_V_pixel_4_read,
        src_V_pixel_5_dout,
        src_V_pixel_5_empty_n,
        src_V_pixel_5_read,
        src_V_pixel_6_dout,
        src_V_pixel_6_empty_n,
        src_V_pixel_6_read,
        src_V_pixel_7_dout,
        src_V_pixel_7_empty_n,
        src_V_pixel_7_read,
        src_V_pixel_8_dout,
        src_V_pixel_8_empty_n,
        src_V_pixel_8_read,
        src_V_pixel_9_dout,
        src_V_pixel_9_empty_n,
        src_V_pixel_9_read,
        src_V_pixel_10_dout,
        src_V_pixel_10_empty_n,
        src_V_pixel_10_read,
        src_V_pixel_11_dout,
        src_V_pixel_11_empty_n,
        src_V_pixel_11_read,
        src_V_pixel_12_dout,
        src_V_pixel_12_empty_n,
        src_V_pixel_12_read,
        src_V_pixel_13_dout,
        src_V_pixel_13_empty_n,
        src_V_pixel_13_read,
        src_V_pixel_14_dout,
        src_V_pixel_14_empty_n,
        src_V_pixel_14_read,
        src_V_pixel_15_dout,
        src_V_pixel_15_empty_n,
        src_V_pixel_15_read,
        src_V_pixel_16_dout,
        src_V_pixel_16_empty_n,
        src_V_pixel_16_read,
        src_V_pixel_17_dout,
        src_V_pixel_17_empty_n,
        src_V_pixel_17_read,
        src_V_pixel_18_dout,
        src_V_pixel_18_empty_n,
        src_V_pixel_18_read,
        src_V_pixel_19_dout,
        src_V_pixel_19_empty_n,
        src_V_pixel_19_read,
        src_V_pixel_20_dout,
        src_V_pixel_20_empty_n,
        src_V_pixel_20_read,
        src_V_pixel_21_dout,
        src_V_pixel_21_empty_n,
        src_V_pixel_21_read,
        src_V_pixel_22_dout,
        src_V_pixel_22_empty_n,
        src_V_pixel_22_read,
        src_V_pixel_23_dout,
        src_V_pixel_23_empty_n,
        src_V_pixel_23_read,
        src_V_pixel_24_dout,
        src_V_pixel_24_empty_n,
        src_V_pixel_24_read,
        src_V_pixel_25_dout,
        src_V_pixel_25_empty_n,
        src_V_pixel_25_read,
        src_V_pixel_26_dout,
        src_V_pixel_26_empty_n,
        src_V_pixel_26_read,
        src_V_pixel_27_dout,
        src_V_pixel_27_empty_n,
        src_V_pixel_27_read,
        src_V_pixel_28_dout,
        src_V_pixel_28_empty_n,
        src_V_pixel_28_read,
        src_V_pixel_29_dout,
        src_V_pixel_29_empty_n,
        src_V_pixel_29_read,
        src_V_pixel_30_dout,
        src_V_pixel_30_empty_n,
        src_V_pixel_30_read,
        src_V_pixel_31_dout,
        src_V_pixel_31_empty_n,
        src_V_pixel_31_read,
        src_V_pixel_32_dout,
        src_V_pixel_32_empty_n,
        src_V_pixel_32_read,
        src_V_pixel_33_dout,
        src_V_pixel_33_empty_n,
        src_V_pixel_33_read,
        src_V_pixel_34_dout,
        src_V_pixel_34_empty_n,
        src_V_pixel_34_read,
        src_V_pixel_35_dout,
        src_V_pixel_35_empty_n,
        src_V_pixel_35_read,
        src_V_pixel_36_dout,
        src_V_pixel_36_empty_n,
        src_V_pixel_36_read,
        src_V_pixel_37_dout,
        src_V_pixel_37_empty_n,
        src_V_pixel_37_read,
        src_V_pixel_38_dout,
        src_V_pixel_38_empty_n,
        src_V_pixel_38_read,
        src_V_pixel_39_dout,
        src_V_pixel_39_empty_n,
        src_V_pixel_39_read,
        src_V_pixel_40_dout,
        src_V_pixel_40_empty_n,
        src_V_pixel_40_read,
        src_V_pixel_41_dout,
        src_V_pixel_41_empty_n,
        src_V_pixel_41_read,
        dst_V_pixel_0_din,
        dst_V_pixel_0_full_n,
        dst_V_pixel_0_write,
        dst_V_pixel_1_din,
        dst_V_pixel_1_full_n,
        dst_V_pixel_1_write,
        dst_V_pixel_2_din,
        dst_V_pixel_2_full_n,
        dst_V_pixel_2_write,
        dst_V_pixel_3_din,
        dst_V_pixel_3_full_n,
        dst_V_pixel_3_write,
        dst_V_pixel_4_din,
        dst_V_pixel_4_full_n,
        dst_V_pixel_4_write,
        dst_V_pixel_5_din,
        dst_V_pixel_5_full_n,
        dst_V_pixel_5_write,
        dst_V_pixel_6_din,
        dst_V_pixel_6_full_n,
        dst_V_pixel_6_write,
        dst_V_pixel_7_din,
        dst_V_pixel_7_full_n,
        dst_V_pixel_7_write,
        dst_V_pixel_8_din,
        dst_V_pixel_8_full_n,
        dst_V_pixel_8_write,
        dst_V_pixel_9_din,
        dst_V_pixel_9_full_n,
        dst_V_pixel_9_write,
        dst_V_pixel_10_din,
        dst_V_pixel_10_full_n,
        dst_V_pixel_10_write,
        dst_V_pixel_11_din,
        dst_V_pixel_11_full_n,
        dst_V_pixel_11_write,
        dst_V_pixel_12_din,
        dst_V_pixel_12_full_n,
        dst_V_pixel_12_write,
        dst_V_pixel_13_din,
        dst_V_pixel_13_full_n,
        dst_V_pixel_13_write,
        dst_V_pixel_14_din,
        dst_V_pixel_14_full_n,
        dst_V_pixel_14_write,
        dst_V_pixel_15_din,
        dst_V_pixel_15_full_n,
        dst_V_pixel_15_write,
        dst_V_pixel_16_din,
        dst_V_pixel_16_full_n,
        dst_V_pixel_16_write,
        dst_V_pixel_17_din,
        dst_V_pixel_17_full_n,
        dst_V_pixel_17_write,
        dst_V_pixel_18_din,
        dst_V_pixel_18_full_n,
        dst_V_pixel_18_write,
        dst_V_pixel_19_din,
        dst_V_pixel_19_full_n,
        dst_V_pixel_19_write,
        dst_V_pixel_20_din,
        dst_V_pixel_20_full_n,
        dst_V_pixel_20_write,
        dst_V_pixel_21_din,
        dst_V_pixel_21_full_n,
        dst_V_pixel_21_write,
        dst_V_pixel_22_din,
        dst_V_pixel_22_full_n,
        dst_V_pixel_22_write,
        dst_V_pixel_23_din,
        dst_V_pixel_23_full_n,
        dst_V_pixel_23_write,
        dst_V_pixel_24_din,
        dst_V_pixel_24_full_n,
        dst_V_pixel_24_write,
        dst_V_pixel_25_din,
        dst_V_pixel_25_full_n,
        dst_V_pixel_25_write,
        dst_V_pixel_26_din,
        dst_V_pixel_26_full_n,
        dst_V_pixel_26_write,
        dst_V_pixel_27_din,
        dst_V_pixel_27_full_n,
        dst_V_pixel_27_write,
        dst_V_pixel_28_din,
        dst_V_pixel_28_full_n,
        dst_V_pixel_28_write,
        dst_V_pixel_29_din,
        dst_V_pixel_29_full_n,
        dst_V_pixel_29_write,
        dst_V_pixel_30_din,
        dst_V_pixel_30_full_n,
        dst_V_pixel_30_write,
        dst_V_pixel_31_din,
        dst_V_pixel_31_full_n,
        dst_V_pixel_31_write,
        dst_V_pixel_32_din,
        dst_V_pixel_32_full_n,
        dst_V_pixel_32_write,
        dst_V_pixel_33_din,
        dst_V_pixel_33_full_n,
        dst_V_pixel_33_write,
        dst_V_pixel_34_din,
        dst_V_pixel_34_full_n,
        dst_V_pixel_34_write,
        dst_V_pixel_35_din,
        dst_V_pixel_35_full_n,
        dst_V_pixel_35_write,
        dst_V_pixel_36_din,
        dst_V_pixel_36_full_n,
        dst_V_pixel_36_write,
        dst_V_pixel_37_din,
        dst_V_pixel_37_full_n,
        dst_V_pixel_37_write,
        dst_V_pixel_38_din,
        dst_V_pixel_38_full_n,
        dst_V_pixel_38_write,
        dst_V_pixel_39_din,
        dst_V_pixel_39_full_n,
        dst_V_pixel_39_write,
        dst_V_pixel_40_din,
        dst_V_pixel_40_full_n,
        dst_V_pixel_40_write,
        dst_V_pixel_41_din,
        dst_V_pixel_41_full_n,
        dst_V_pixel_41_write
);

parameter    ap_ST_st1_fsm_0 = 2'b1;
parameter    ap_ST_st2_fsm_1 = 2'b10;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv9_1E0 = 9'b111100000;
parameter    ap_const_lv9_1 = 9'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] src_V_pixel_0_dout;
input   src_V_pixel_0_empty_n;
output   src_V_pixel_0_read;
input  [7:0] src_V_pixel_1_dout;
input   src_V_pixel_1_empty_n;
output   src_V_pixel_1_read;
input  [7:0] src_V_pixel_2_dout;
input   src_V_pixel_2_empty_n;
output   src_V_pixel_2_read;
input  [7:0] src_V_pixel_3_dout;
input   src_V_pixel_3_empty_n;
output   src_V_pixel_3_read;
input  [7:0] src_V_pixel_4_dout;
input   src_V_pixel_4_empty_n;
output   src_V_pixel_4_read;
input  [7:0] src_V_pixel_5_dout;
input   src_V_pixel_5_empty_n;
output   src_V_pixel_5_read;
input  [7:0] src_V_pixel_6_dout;
input   src_V_pixel_6_empty_n;
output   src_V_pixel_6_read;
input  [7:0] src_V_pixel_7_dout;
input   src_V_pixel_7_empty_n;
output   src_V_pixel_7_read;
input  [7:0] src_V_pixel_8_dout;
input   src_V_pixel_8_empty_n;
output   src_V_pixel_8_read;
input  [7:0] src_V_pixel_9_dout;
input   src_V_pixel_9_empty_n;
output   src_V_pixel_9_read;
input  [7:0] src_V_pixel_10_dout;
input   src_V_pixel_10_empty_n;
output   src_V_pixel_10_read;
input  [7:0] src_V_pixel_11_dout;
input   src_V_pixel_11_empty_n;
output   src_V_pixel_11_read;
input  [7:0] src_V_pixel_12_dout;
input   src_V_pixel_12_empty_n;
output   src_V_pixel_12_read;
input  [7:0] src_V_pixel_13_dout;
input   src_V_pixel_13_empty_n;
output   src_V_pixel_13_read;
input  [7:0] src_V_pixel_14_dout;
input   src_V_pixel_14_empty_n;
output   src_V_pixel_14_read;
input  [7:0] src_V_pixel_15_dout;
input   src_V_pixel_15_empty_n;
output   src_V_pixel_15_read;
input  [7:0] src_V_pixel_16_dout;
input   src_V_pixel_16_empty_n;
output   src_V_pixel_16_read;
input  [7:0] src_V_pixel_17_dout;
input   src_V_pixel_17_empty_n;
output   src_V_pixel_17_read;
input  [7:0] src_V_pixel_18_dout;
input   src_V_pixel_18_empty_n;
output   src_V_pixel_18_read;
input  [7:0] src_V_pixel_19_dout;
input   src_V_pixel_19_empty_n;
output   src_V_pixel_19_read;
input  [7:0] src_V_pixel_20_dout;
input   src_V_pixel_20_empty_n;
output   src_V_pixel_20_read;
input  [7:0] src_V_pixel_21_dout;
input   src_V_pixel_21_empty_n;
output   src_V_pixel_21_read;
input  [7:0] src_V_pixel_22_dout;
input   src_V_pixel_22_empty_n;
output   src_V_pixel_22_read;
input  [7:0] src_V_pixel_23_dout;
input   src_V_pixel_23_empty_n;
output   src_V_pixel_23_read;
input  [7:0] src_V_pixel_24_dout;
input   src_V_pixel_24_empty_n;
output   src_V_pixel_24_read;
input  [7:0] src_V_pixel_25_dout;
input   src_V_pixel_25_empty_n;
output   src_V_pixel_25_read;
input  [7:0] src_V_pixel_26_dout;
input   src_V_pixel_26_empty_n;
output   src_V_pixel_26_read;
input  [7:0] src_V_pixel_27_dout;
input   src_V_pixel_27_empty_n;
output   src_V_pixel_27_read;
input  [7:0] src_V_pixel_28_dout;
input   src_V_pixel_28_empty_n;
output   src_V_pixel_28_read;
input  [7:0] src_V_pixel_29_dout;
input   src_V_pixel_29_empty_n;
output   src_V_pixel_29_read;
input  [7:0] src_V_pixel_30_dout;
input   src_V_pixel_30_empty_n;
output   src_V_pixel_30_read;
input  [7:0] src_V_pixel_31_dout;
input   src_V_pixel_31_empty_n;
output   src_V_pixel_31_read;
input  [7:0] src_V_pixel_32_dout;
input   src_V_pixel_32_empty_n;
output   src_V_pixel_32_read;
input  [7:0] src_V_pixel_33_dout;
input   src_V_pixel_33_empty_n;
output   src_V_pixel_33_read;
input  [7:0] src_V_pixel_34_dout;
input   src_V_pixel_34_empty_n;
output   src_V_pixel_34_read;
input  [7:0] src_V_pixel_35_dout;
input   src_V_pixel_35_empty_n;
output   src_V_pixel_35_read;
input  [7:0] src_V_pixel_36_dout;
input   src_V_pixel_36_empty_n;
output   src_V_pixel_36_read;
input  [7:0] src_V_pixel_37_dout;
input   src_V_pixel_37_empty_n;
output   src_V_pixel_37_read;
input  [7:0] src_V_pixel_38_dout;
input   src_V_pixel_38_empty_n;
output   src_V_pixel_38_read;
input  [7:0] src_V_pixel_39_dout;
input   src_V_pixel_39_empty_n;
output   src_V_pixel_39_read;
input  [7:0] src_V_pixel_40_dout;
input   src_V_pixel_40_empty_n;
output   src_V_pixel_40_read;
input  [7:0] src_V_pixel_41_dout;
input   src_V_pixel_41_empty_n;
output   src_V_pixel_41_read;
output  [7:0] dst_V_pixel_0_din;
input   dst_V_pixel_0_full_n;
output   dst_V_pixel_0_write;
output  [7:0] dst_V_pixel_1_din;
input   dst_V_pixel_1_full_n;
output   dst_V_pixel_1_write;
output  [7:0] dst_V_pixel_2_din;
input   dst_V_pixel_2_full_n;
output   dst_V_pixel_2_write;
output  [7:0] dst_V_pixel_3_din;
input   dst_V_pixel_3_full_n;
output   dst_V_pixel_3_write;
output  [7:0] dst_V_pixel_4_din;
input   dst_V_pixel_4_full_n;
output   dst_V_pixel_4_write;
output  [7:0] dst_V_pixel_5_din;
input   dst_V_pixel_5_full_n;
output   dst_V_pixel_5_write;
output  [7:0] dst_V_pixel_6_din;
input   dst_V_pixel_6_full_n;
output   dst_V_pixel_6_write;
output  [7:0] dst_V_pixel_7_din;
input   dst_V_pixel_7_full_n;
output   dst_V_pixel_7_write;
output  [7:0] dst_V_pixel_8_din;
input   dst_V_pixel_8_full_n;
output   dst_V_pixel_8_write;
output  [7:0] dst_V_pixel_9_din;
input   dst_V_pixel_9_full_n;
output   dst_V_pixel_9_write;
output  [7:0] dst_V_pixel_10_din;
input   dst_V_pixel_10_full_n;
output   dst_V_pixel_10_write;
output  [7:0] dst_V_pixel_11_din;
input   dst_V_pixel_11_full_n;
output   dst_V_pixel_11_write;
output  [7:0] dst_V_pixel_12_din;
input   dst_V_pixel_12_full_n;
output   dst_V_pixel_12_write;
output  [7:0] dst_V_pixel_13_din;
input   dst_V_pixel_13_full_n;
output   dst_V_pixel_13_write;
output  [7:0] dst_V_pixel_14_din;
input   dst_V_pixel_14_full_n;
output   dst_V_pixel_14_write;
output  [7:0] dst_V_pixel_15_din;
input   dst_V_pixel_15_full_n;
output   dst_V_pixel_15_write;
output  [7:0] dst_V_pixel_16_din;
input   dst_V_pixel_16_full_n;
output   dst_V_pixel_16_write;
output  [7:0] dst_V_pixel_17_din;
input   dst_V_pixel_17_full_n;
output   dst_V_pixel_17_write;
output  [7:0] dst_V_pixel_18_din;
input   dst_V_pixel_18_full_n;
output   dst_V_pixel_18_write;
output  [7:0] dst_V_pixel_19_din;
input   dst_V_pixel_19_full_n;
output   dst_V_pixel_19_write;
output  [7:0] dst_V_pixel_20_din;
input   dst_V_pixel_20_full_n;
output   dst_V_pixel_20_write;
output  [7:0] dst_V_pixel_21_din;
input   dst_V_pixel_21_full_n;
output   dst_V_pixel_21_write;
output  [7:0] dst_V_pixel_22_din;
input   dst_V_pixel_22_full_n;
output   dst_V_pixel_22_write;
output  [7:0] dst_V_pixel_23_din;
input   dst_V_pixel_23_full_n;
output   dst_V_pixel_23_write;
output  [7:0] dst_V_pixel_24_din;
input   dst_V_pixel_24_full_n;
output   dst_V_pixel_24_write;
output  [7:0] dst_V_pixel_25_din;
input   dst_V_pixel_25_full_n;
output   dst_V_pixel_25_write;
output  [7:0] dst_V_pixel_26_din;
input   dst_V_pixel_26_full_n;
output   dst_V_pixel_26_write;
output  [7:0] dst_V_pixel_27_din;
input   dst_V_pixel_27_full_n;
output   dst_V_pixel_27_write;
output  [7:0] dst_V_pixel_28_din;
input   dst_V_pixel_28_full_n;
output   dst_V_pixel_28_write;
output  [7:0] dst_V_pixel_29_din;
input   dst_V_pixel_29_full_n;
output   dst_V_pixel_29_write;
output  [7:0] dst_V_pixel_30_din;
input   dst_V_pixel_30_full_n;
output   dst_V_pixel_30_write;
output  [7:0] dst_V_pixel_31_din;
input   dst_V_pixel_31_full_n;
output   dst_V_pixel_31_write;
output  [7:0] dst_V_pixel_32_din;
input   dst_V_pixel_32_full_n;
output   dst_V_pixel_32_write;
output  [7:0] dst_V_pixel_33_din;
input   dst_V_pixel_33_full_n;
output   dst_V_pixel_33_write;
output  [7:0] dst_V_pixel_34_din;
input   dst_V_pixel_34_full_n;
output   dst_V_pixel_34_write;
output  [7:0] dst_V_pixel_35_din;
input   dst_V_pixel_35_full_n;
output   dst_V_pixel_35_write;
output  [7:0] dst_V_pixel_36_din;
input   dst_V_pixel_36_full_n;
output   dst_V_pixel_36_write;
output  [7:0] dst_V_pixel_37_din;
input   dst_V_pixel_37_full_n;
output   dst_V_pixel_37_write;
output  [7:0] dst_V_pixel_38_din;
input   dst_V_pixel_38_full_n;
output   dst_V_pixel_38_write;
output  [7:0] dst_V_pixel_39_din;
input   dst_V_pixel_39_full_n;
output   dst_V_pixel_39_write;
output  [7:0] dst_V_pixel_40_din;
input   dst_V_pixel_40_full_n;
output   dst_V_pixel_40_write;
output  [7:0] dst_V_pixel_41_din;
input   dst_V_pixel_41_full_n;
output   dst_V_pixel_41_write;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_20;
reg    src_V_pixel_0_blk_n;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_369;
wire   [0:0] exitcond4_fu_1097_p2;
reg    src_V_pixel_1_blk_n;
reg    src_V_pixel_2_blk_n;
reg    src_V_pixel_3_blk_n;
reg    src_V_pixel_4_blk_n;
reg    src_V_pixel_5_blk_n;
reg    src_V_pixel_6_blk_n;
reg    src_V_pixel_7_blk_n;
reg    src_V_pixel_8_blk_n;
reg    src_V_pixel_9_blk_n;
reg    src_V_pixel_10_blk_n;
reg    src_V_pixel_11_blk_n;
reg    src_V_pixel_12_blk_n;
reg    src_V_pixel_13_blk_n;
reg    src_V_pixel_14_blk_n;
reg    src_V_pixel_15_blk_n;
reg    src_V_pixel_16_blk_n;
reg    src_V_pixel_17_blk_n;
reg    src_V_pixel_18_blk_n;
reg    src_V_pixel_19_blk_n;
reg    src_V_pixel_20_blk_n;
reg    src_V_pixel_21_blk_n;
reg    src_V_pixel_22_blk_n;
reg    src_V_pixel_23_blk_n;
reg    src_V_pixel_24_blk_n;
reg    src_V_pixel_25_blk_n;
reg    src_V_pixel_26_blk_n;
reg    src_V_pixel_27_blk_n;
reg    src_V_pixel_28_blk_n;
reg    src_V_pixel_29_blk_n;
reg    src_V_pixel_30_blk_n;
reg    src_V_pixel_31_blk_n;
reg    src_V_pixel_32_blk_n;
reg    src_V_pixel_33_blk_n;
reg    src_V_pixel_34_blk_n;
reg    src_V_pixel_35_blk_n;
reg    src_V_pixel_36_blk_n;
reg    src_V_pixel_37_blk_n;
reg    src_V_pixel_38_blk_n;
reg    src_V_pixel_39_blk_n;
reg    src_V_pixel_40_blk_n;
reg    src_V_pixel_41_blk_n;
reg    dst_V_pixel_0_blk_n;
reg    dst_V_pixel_1_blk_n;
reg    dst_V_pixel_2_blk_n;
reg    dst_V_pixel_3_blk_n;
reg    dst_V_pixel_4_blk_n;
reg    dst_V_pixel_5_blk_n;
reg    dst_V_pixel_6_blk_n;
reg    dst_V_pixel_7_blk_n;
reg    dst_V_pixel_8_blk_n;
reg    dst_V_pixel_9_blk_n;
reg    dst_V_pixel_10_blk_n;
reg    dst_V_pixel_11_blk_n;
reg    dst_V_pixel_12_blk_n;
reg    dst_V_pixel_13_blk_n;
reg    dst_V_pixel_14_blk_n;
reg    dst_V_pixel_15_blk_n;
reg    dst_V_pixel_16_blk_n;
reg    dst_V_pixel_17_blk_n;
reg    dst_V_pixel_18_blk_n;
reg    dst_V_pixel_19_blk_n;
reg    dst_V_pixel_20_blk_n;
reg    dst_V_pixel_21_blk_n;
reg    dst_V_pixel_22_blk_n;
reg    dst_V_pixel_23_blk_n;
reg    dst_V_pixel_24_blk_n;
reg    dst_V_pixel_25_blk_n;
reg    dst_V_pixel_26_blk_n;
reg    dst_V_pixel_27_blk_n;
reg    dst_V_pixel_28_blk_n;
reg    dst_V_pixel_29_blk_n;
reg    dst_V_pixel_30_blk_n;
reg    dst_V_pixel_31_blk_n;
reg    dst_V_pixel_32_blk_n;
reg    dst_V_pixel_33_blk_n;
reg    dst_V_pixel_34_blk_n;
reg    dst_V_pixel_35_blk_n;
reg    dst_V_pixel_36_blk_n;
reg    dst_V_pixel_37_blk_n;
reg    dst_V_pixel_38_blk_n;
reg    dst_V_pixel_39_blk_n;
reg    dst_V_pixel_40_blk_n;
reg    dst_V_pixel_41_blk_n;
wire   [8:0] i_3_fu_1103_p2;
wire    src_V_pixel_10_status;
wire    dst_V_pixel_11_status;
reg    ap_sig_467;
reg   [8:0] i_reg_1086;
reg    ap_sig_476;
reg    src_V_pixel_10_update;
reg    dst_V_pixel_11_update;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'b1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_467 & ~(exitcond4_fu_1097_p2 == 1'b0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0) & ~ap_sig_467)) begin
        i_reg_1086 <= i_3_fu_1103_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_476)) begin
        i_reg_1086 <= ap_const_lv9_0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_467 & ~(exitcond4_fu_1097_p2 == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_467 & ~(exitcond4_fu_1097_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_369) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_0_blk_n = dst_V_pixel_0_full_n;
    end else begin
        dst_V_pixel_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_10_blk_n = dst_V_pixel_10_full_n;
    end else begin
        dst_V_pixel_10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_11_blk_n = dst_V_pixel_11_full_n;
    end else begin
        dst_V_pixel_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0) & ~ap_sig_467)) begin
        dst_V_pixel_11_update = 1'b1;
    end else begin
        dst_V_pixel_11_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_12_blk_n = dst_V_pixel_12_full_n;
    end else begin
        dst_V_pixel_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_13_blk_n = dst_V_pixel_13_full_n;
    end else begin
        dst_V_pixel_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_14_blk_n = dst_V_pixel_14_full_n;
    end else begin
        dst_V_pixel_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_15_blk_n = dst_V_pixel_15_full_n;
    end else begin
        dst_V_pixel_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_16_blk_n = dst_V_pixel_16_full_n;
    end else begin
        dst_V_pixel_16_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_17_blk_n = dst_V_pixel_17_full_n;
    end else begin
        dst_V_pixel_17_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_18_blk_n = dst_V_pixel_18_full_n;
    end else begin
        dst_V_pixel_18_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_19_blk_n = dst_V_pixel_19_full_n;
    end else begin
        dst_V_pixel_19_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_1_blk_n = dst_V_pixel_1_full_n;
    end else begin
        dst_V_pixel_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_20_blk_n = dst_V_pixel_20_full_n;
    end else begin
        dst_V_pixel_20_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_21_blk_n = dst_V_pixel_21_full_n;
    end else begin
        dst_V_pixel_21_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_22_blk_n = dst_V_pixel_22_full_n;
    end else begin
        dst_V_pixel_22_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_23_blk_n = dst_V_pixel_23_full_n;
    end else begin
        dst_V_pixel_23_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_24_blk_n = dst_V_pixel_24_full_n;
    end else begin
        dst_V_pixel_24_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_25_blk_n = dst_V_pixel_25_full_n;
    end else begin
        dst_V_pixel_25_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_26_blk_n = dst_V_pixel_26_full_n;
    end else begin
        dst_V_pixel_26_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_27_blk_n = dst_V_pixel_27_full_n;
    end else begin
        dst_V_pixel_27_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_28_blk_n = dst_V_pixel_28_full_n;
    end else begin
        dst_V_pixel_28_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_29_blk_n = dst_V_pixel_29_full_n;
    end else begin
        dst_V_pixel_29_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_2_blk_n = dst_V_pixel_2_full_n;
    end else begin
        dst_V_pixel_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_30_blk_n = dst_V_pixel_30_full_n;
    end else begin
        dst_V_pixel_30_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_31_blk_n = dst_V_pixel_31_full_n;
    end else begin
        dst_V_pixel_31_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_32_blk_n = dst_V_pixel_32_full_n;
    end else begin
        dst_V_pixel_32_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_33_blk_n = dst_V_pixel_33_full_n;
    end else begin
        dst_V_pixel_33_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_34_blk_n = dst_V_pixel_34_full_n;
    end else begin
        dst_V_pixel_34_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_35_blk_n = dst_V_pixel_35_full_n;
    end else begin
        dst_V_pixel_35_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_36_blk_n = dst_V_pixel_36_full_n;
    end else begin
        dst_V_pixel_36_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_37_blk_n = dst_V_pixel_37_full_n;
    end else begin
        dst_V_pixel_37_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_38_blk_n = dst_V_pixel_38_full_n;
    end else begin
        dst_V_pixel_38_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_39_blk_n = dst_V_pixel_39_full_n;
    end else begin
        dst_V_pixel_39_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_3_blk_n = dst_V_pixel_3_full_n;
    end else begin
        dst_V_pixel_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_40_blk_n = dst_V_pixel_40_full_n;
    end else begin
        dst_V_pixel_40_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_41_blk_n = dst_V_pixel_41_full_n;
    end else begin
        dst_V_pixel_41_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_4_blk_n = dst_V_pixel_4_full_n;
    end else begin
        dst_V_pixel_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_5_blk_n = dst_V_pixel_5_full_n;
    end else begin
        dst_V_pixel_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_6_blk_n = dst_V_pixel_6_full_n;
    end else begin
        dst_V_pixel_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_7_blk_n = dst_V_pixel_7_full_n;
    end else begin
        dst_V_pixel_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_8_blk_n = dst_V_pixel_8_full_n;
    end else begin
        dst_V_pixel_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        dst_V_pixel_9_blk_n = dst_V_pixel_9_full_n;
    end else begin
        dst_V_pixel_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_0_blk_n = src_V_pixel_0_empty_n;
    end else begin
        src_V_pixel_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_10_blk_n = src_V_pixel_10_empty_n;
    end else begin
        src_V_pixel_10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0) & ~ap_sig_467)) begin
        src_V_pixel_10_update = 1'b1;
    end else begin
        src_V_pixel_10_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_11_blk_n = src_V_pixel_11_empty_n;
    end else begin
        src_V_pixel_11_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_12_blk_n = src_V_pixel_12_empty_n;
    end else begin
        src_V_pixel_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_13_blk_n = src_V_pixel_13_empty_n;
    end else begin
        src_V_pixel_13_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_14_blk_n = src_V_pixel_14_empty_n;
    end else begin
        src_V_pixel_14_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_15_blk_n = src_V_pixel_15_empty_n;
    end else begin
        src_V_pixel_15_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_16_blk_n = src_V_pixel_16_empty_n;
    end else begin
        src_V_pixel_16_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_17_blk_n = src_V_pixel_17_empty_n;
    end else begin
        src_V_pixel_17_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_18_blk_n = src_V_pixel_18_empty_n;
    end else begin
        src_V_pixel_18_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_19_blk_n = src_V_pixel_19_empty_n;
    end else begin
        src_V_pixel_19_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_1_blk_n = src_V_pixel_1_empty_n;
    end else begin
        src_V_pixel_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_20_blk_n = src_V_pixel_20_empty_n;
    end else begin
        src_V_pixel_20_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_21_blk_n = src_V_pixel_21_empty_n;
    end else begin
        src_V_pixel_21_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_22_blk_n = src_V_pixel_22_empty_n;
    end else begin
        src_V_pixel_22_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_23_blk_n = src_V_pixel_23_empty_n;
    end else begin
        src_V_pixel_23_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_24_blk_n = src_V_pixel_24_empty_n;
    end else begin
        src_V_pixel_24_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_25_blk_n = src_V_pixel_25_empty_n;
    end else begin
        src_V_pixel_25_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_26_blk_n = src_V_pixel_26_empty_n;
    end else begin
        src_V_pixel_26_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_27_blk_n = src_V_pixel_27_empty_n;
    end else begin
        src_V_pixel_27_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_28_blk_n = src_V_pixel_28_empty_n;
    end else begin
        src_V_pixel_28_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_29_blk_n = src_V_pixel_29_empty_n;
    end else begin
        src_V_pixel_29_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_2_blk_n = src_V_pixel_2_empty_n;
    end else begin
        src_V_pixel_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_30_blk_n = src_V_pixel_30_empty_n;
    end else begin
        src_V_pixel_30_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_31_blk_n = src_V_pixel_31_empty_n;
    end else begin
        src_V_pixel_31_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_32_blk_n = src_V_pixel_32_empty_n;
    end else begin
        src_V_pixel_32_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_33_blk_n = src_V_pixel_33_empty_n;
    end else begin
        src_V_pixel_33_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_34_blk_n = src_V_pixel_34_empty_n;
    end else begin
        src_V_pixel_34_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_35_blk_n = src_V_pixel_35_empty_n;
    end else begin
        src_V_pixel_35_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_36_blk_n = src_V_pixel_36_empty_n;
    end else begin
        src_V_pixel_36_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_37_blk_n = src_V_pixel_37_empty_n;
    end else begin
        src_V_pixel_37_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_38_blk_n = src_V_pixel_38_empty_n;
    end else begin
        src_V_pixel_38_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_39_blk_n = src_V_pixel_39_empty_n;
    end else begin
        src_V_pixel_39_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_3_blk_n = src_V_pixel_3_empty_n;
    end else begin
        src_V_pixel_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_40_blk_n = src_V_pixel_40_empty_n;
    end else begin
        src_V_pixel_40_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_41_blk_n = src_V_pixel_41_empty_n;
    end else begin
        src_V_pixel_41_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_4_blk_n = src_V_pixel_4_empty_n;
    end else begin
        src_V_pixel_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_5_blk_n = src_V_pixel_5_empty_n;
    end else begin
        src_V_pixel_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_6_blk_n = src_V_pixel_6_empty_n;
    end else begin
        src_V_pixel_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_7_blk_n = src_V_pixel_7_empty_n;
    end else begin
        src_V_pixel_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_8_blk_n = src_V_pixel_8_empty_n;
    end else begin
        src_V_pixel_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_fu_1097_p2 == 1'b0))) begin
        src_V_pixel_9_blk_n = src_V_pixel_9_empty_n;
    end else begin
        src_V_pixel_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_476) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((~ap_sig_467 & ~(exitcond4_fu_1097_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((exitcond4_fu_1097_p2 == 1'b0) & ~ap_sig_467)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_20 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_369 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_467 = (((exitcond4_fu_1097_p2 == 1'b0) & (src_V_pixel_10_status == 1'b0)) | ((exitcond4_fu_1097_p2 == 1'b0) & (dst_V_pixel_11_status == 1'b0)));
end

always @ (*) begin
    ap_sig_476 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign dst_V_pixel_0_din = src_V_pixel_0_dout;

assign dst_V_pixel_0_write = dst_V_pixel_11_update;

assign dst_V_pixel_10_din = src_V_pixel_10_dout;

assign dst_V_pixel_10_write = dst_V_pixel_11_update;

assign dst_V_pixel_11_din = src_V_pixel_11_dout;

assign dst_V_pixel_11_status = (dst_V_pixel_0_full_n & dst_V_pixel_1_full_n & dst_V_pixel_2_full_n & dst_V_pixel_3_full_n & dst_V_pixel_4_full_n & dst_V_pixel_5_full_n & dst_V_pixel_6_full_n & dst_V_pixel_7_full_n & dst_V_pixel_8_full_n & dst_V_pixel_9_full_n & dst_V_pixel_10_full_n & dst_V_pixel_11_full_n & dst_V_pixel_12_full_n & dst_V_pixel_13_full_n & dst_V_pixel_14_full_n & dst_V_pixel_15_full_n & dst_V_pixel_16_full_n & dst_V_pixel_17_full_n & dst_V_pixel_18_full_n & dst_V_pixel_19_full_n & dst_V_pixel_20_full_n & dst_V_pixel_21_full_n & dst_V_pixel_22_full_n & dst_V_pixel_23_full_n & dst_V_pixel_24_full_n & dst_V_pixel_25_full_n & dst_V_pixel_26_full_n & dst_V_pixel_27_full_n & dst_V_pixel_28_full_n & dst_V_pixel_29_full_n & dst_V_pixel_30_full_n & dst_V_pixel_31_full_n & dst_V_pixel_32_full_n & dst_V_pixel_33_full_n & dst_V_pixel_34_full_n & dst_V_pixel_35_full_n & dst_V_pixel_36_full_n & dst_V_pixel_37_full_n & dst_V_pixel_38_full_n & dst_V_pixel_39_full_n & dst_V_pixel_40_full_n & dst_V_pixel_41_full_n);

assign dst_V_pixel_11_write = dst_V_pixel_11_update;

assign dst_V_pixel_12_din = src_V_pixel_12_dout;

assign dst_V_pixel_12_write = dst_V_pixel_11_update;

assign dst_V_pixel_13_din = src_V_pixel_13_dout;

assign dst_V_pixel_13_write = dst_V_pixel_11_update;

assign dst_V_pixel_14_din = src_V_pixel_14_dout;

assign dst_V_pixel_14_write = dst_V_pixel_11_update;

assign dst_V_pixel_15_din = src_V_pixel_15_dout;

assign dst_V_pixel_15_write = dst_V_pixel_11_update;

assign dst_V_pixel_16_din = src_V_pixel_16_dout;

assign dst_V_pixel_16_write = dst_V_pixel_11_update;

assign dst_V_pixel_17_din = src_V_pixel_17_dout;

assign dst_V_pixel_17_write = dst_V_pixel_11_update;

assign dst_V_pixel_18_din = src_V_pixel_18_dout;

assign dst_V_pixel_18_write = dst_V_pixel_11_update;

assign dst_V_pixel_19_din = src_V_pixel_19_dout;

assign dst_V_pixel_19_write = dst_V_pixel_11_update;

assign dst_V_pixel_1_din = src_V_pixel_1_dout;

assign dst_V_pixel_1_write = dst_V_pixel_11_update;

assign dst_V_pixel_20_din = src_V_pixel_20_dout;

assign dst_V_pixel_20_write = dst_V_pixel_11_update;

assign dst_V_pixel_21_din = src_V_pixel_21_dout;

assign dst_V_pixel_21_write = dst_V_pixel_11_update;

assign dst_V_pixel_22_din = src_V_pixel_22_dout;

assign dst_V_pixel_22_write = dst_V_pixel_11_update;

assign dst_V_pixel_23_din = src_V_pixel_23_dout;

assign dst_V_pixel_23_write = dst_V_pixel_11_update;

assign dst_V_pixel_24_din = src_V_pixel_24_dout;

assign dst_V_pixel_24_write = dst_V_pixel_11_update;

assign dst_V_pixel_25_din = src_V_pixel_25_dout;

assign dst_V_pixel_25_write = dst_V_pixel_11_update;

assign dst_V_pixel_26_din = src_V_pixel_26_dout;

assign dst_V_pixel_26_write = dst_V_pixel_11_update;

assign dst_V_pixel_27_din = src_V_pixel_27_dout;

assign dst_V_pixel_27_write = dst_V_pixel_11_update;

assign dst_V_pixel_28_din = src_V_pixel_28_dout;

assign dst_V_pixel_28_write = dst_V_pixel_11_update;

assign dst_V_pixel_29_din = src_V_pixel_29_dout;

assign dst_V_pixel_29_write = dst_V_pixel_11_update;

assign dst_V_pixel_2_din = src_V_pixel_2_dout;

assign dst_V_pixel_2_write = dst_V_pixel_11_update;

assign dst_V_pixel_30_din = src_V_pixel_30_dout;

assign dst_V_pixel_30_write = dst_V_pixel_11_update;

assign dst_V_pixel_31_din = src_V_pixel_31_dout;

assign dst_V_pixel_31_write = dst_V_pixel_11_update;

assign dst_V_pixel_32_din = src_V_pixel_32_dout;

assign dst_V_pixel_32_write = dst_V_pixel_11_update;

assign dst_V_pixel_33_din = src_V_pixel_33_dout;

assign dst_V_pixel_33_write = dst_V_pixel_11_update;

assign dst_V_pixel_34_din = src_V_pixel_34_dout;

assign dst_V_pixel_34_write = dst_V_pixel_11_update;

assign dst_V_pixel_35_din = src_V_pixel_35_dout;

assign dst_V_pixel_35_write = dst_V_pixel_11_update;

assign dst_V_pixel_36_din = src_V_pixel_36_dout;

assign dst_V_pixel_36_write = dst_V_pixel_11_update;

assign dst_V_pixel_37_din = src_V_pixel_37_dout;

assign dst_V_pixel_37_write = dst_V_pixel_11_update;

assign dst_V_pixel_38_din = src_V_pixel_38_dout;

assign dst_V_pixel_38_write = dst_V_pixel_11_update;

assign dst_V_pixel_39_din = src_V_pixel_39_dout;

assign dst_V_pixel_39_write = dst_V_pixel_11_update;

assign dst_V_pixel_3_din = src_V_pixel_3_dout;

assign dst_V_pixel_3_write = dst_V_pixel_11_update;

assign dst_V_pixel_40_din = src_V_pixel_40_dout;

assign dst_V_pixel_40_write = dst_V_pixel_11_update;

assign dst_V_pixel_41_din = src_V_pixel_41_dout;

assign dst_V_pixel_41_write = dst_V_pixel_11_update;

assign dst_V_pixel_4_din = src_V_pixel_4_dout;

assign dst_V_pixel_4_write = dst_V_pixel_11_update;

assign dst_V_pixel_5_din = src_V_pixel_5_dout;

assign dst_V_pixel_5_write = dst_V_pixel_11_update;

assign dst_V_pixel_6_din = src_V_pixel_6_dout;

assign dst_V_pixel_6_write = dst_V_pixel_11_update;

assign dst_V_pixel_7_din = src_V_pixel_7_dout;

assign dst_V_pixel_7_write = dst_V_pixel_11_update;

assign dst_V_pixel_8_din = src_V_pixel_8_dout;

assign dst_V_pixel_8_write = dst_V_pixel_11_update;

assign dst_V_pixel_9_din = src_V_pixel_9_dout;

assign dst_V_pixel_9_write = dst_V_pixel_11_update;

assign exitcond4_fu_1097_p2 = ((i_reg_1086 == ap_const_lv9_1E0) ? 1'b1 : 1'b0);

assign i_3_fu_1103_p2 = (i_reg_1086 + ap_const_lv9_1);

assign src_V_pixel_0_read = src_V_pixel_10_update;

assign src_V_pixel_10_read = src_V_pixel_10_update;

assign src_V_pixel_10_status = (src_V_pixel_0_empty_n & src_V_pixel_1_empty_n & src_V_pixel_2_empty_n & src_V_pixel_3_empty_n & src_V_pixel_4_empty_n & src_V_pixel_5_empty_n & src_V_pixel_6_empty_n & src_V_pixel_7_empty_n & src_V_pixel_8_empty_n & src_V_pixel_9_empty_n & src_V_pixel_10_empty_n & src_V_pixel_11_empty_n & src_V_pixel_12_empty_n & src_V_pixel_13_empty_n & src_V_pixel_14_empty_n & src_V_pixel_15_empty_n & src_V_pixel_16_empty_n & src_V_pixel_17_empty_n & src_V_pixel_18_empty_n & src_V_pixel_19_empty_n & src_V_pixel_20_empty_n & src_V_pixel_21_empty_n & src_V_pixel_22_empty_n & src_V_pixel_23_empty_n & src_V_pixel_24_empty_n & src_V_pixel_25_empty_n & src_V_pixel_26_empty_n & src_V_pixel_27_empty_n & src_V_pixel_28_empty_n & src_V_pixel_29_empty_n & src_V_pixel_30_empty_n & src_V_pixel_31_empty_n & src_V_pixel_32_empty_n & src_V_pixel_33_empty_n & src_V_pixel_34_empty_n & src_V_pixel_35_empty_n & src_V_pixel_36_empty_n & src_V_pixel_37_empty_n & src_V_pixel_38_empty_n & src_V_pixel_39_empty_n & src_V_pixel_40_empty_n & src_V_pixel_41_empty_n);

assign src_V_pixel_11_read = src_V_pixel_10_update;

assign src_V_pixel_12_read = src_V_pixel_10_update;

assign src_V_pixel_13_read = src_V_pixel_10_update;

assign src_V_pixel_14_read = src_V_pixel_10_update;

assign src_V_pixel_15_read = src_V_pixel_10_update;

assign src_V_pixel_16_read = src_V_pixel_10_update;

assign src_V_pixel_17_read = src_V_pixel_10_update;

assign src_V_pixel_18_read = src_V_pixel_10_update;

assign src_V_pixel_19_read = src_V_pixel_10_update;

assign src_V_pixel_1_read = src_V_pixel_10_update;

assign src_V_pixel_20_read = src_V_pixel_10_update;

assign src_V_pixel_21_read = src_V_pixel_10_update;

assign src_V_pixel_22_read = src_V_pixel_10_update;

assign src_V_pixel_23_read = src_V_pixel_10_update;

assign src_V_pixel_24_read = src_V_pixel_10_update;

assign src_V_pixel_25_read = src_V_pixel_10_update;

assign src_V_pixel_26_read = src_V_pixel_10_update;

assign src_V_pixel_27_read = src_V_pixel_10_update;

assign src_V_pixel_28_read = src_V_pixel_10_update;

assign src_V_pixel_29_read = src_V_pixel_10_update;

assign src_V_pixel_2_read = src_V_pixel_10_update;

assign src_V_pixel_30_read = src_V_pixel_10_update;

assign src_V_pixel_31_read = src_V_pixel_10_update;

assign src_V_pixel_32_read = src_V_pixel_10_update;

assign src_V_pixel_33_read = src_V_pixel_10_update;

assign src_V_pixel_34_read = src_V_pixel_10_update;

assign src_V_pixel_35_read = src_V_pixel_10_update;

assign src_V_pixel_36_read = src_V_pixel_10_update;

assign src_V_pixel_37_read = src_V_pixel_10_update;

assign src_V_pixel_38_read = src_V_pixel_10_update;

assign src_V_pixel_39_read = src_V_pixel_10_update;

assign src_V_pixel_3_read = src_V_pixel_10_update;

assign src_V_pixel_40_read = src_V_pixel_10_update;

assign src_V_pixel_41_read = src_V_pixel_10_update;

assign src_V_pixel_4_read = src_V_pixel_10_update;

assign src_V_pixel_5_read = src_V_pixel_10_update;

assign src_V_pixel_6_read = src_V_pixel_10_update;

assign src_V_pixel_7_read = src_V_pixel_10_update;

assign src_V_pixel_8_read = src_V_pixel_10_update;

assign src_V_pixel_9_read = src_V_pixel_10_update;

endmodule //Sobel_upstrm2downstrm_array_of_pixel_3
