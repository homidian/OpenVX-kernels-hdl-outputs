// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Sobel_vxConvertColor_tile_Loop_l1_pr (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        strm_out_V_pixel_0_luma_dout,
        strm_out_V_pixel_0_luma_empty_n,
        strm_out_V_pixel_0_luma_read,
        strm_out_V_pixel_1_luma_dout,
        strm_out_V_pixel_1_luma_empty_n,
        strm_out_V_pixel_1_luma_read,
        strm_out_V_pixel_2_luma_dout,
        strm_out_V_pixel_2_luma_empty_n,
        strm_out_V_pixel_2_luma_read,
        strm_out_V_pixel_3_luma_dout,
        strm_out_V_pixel_3_luma_empty_n,
        strm_out_V_pixel_3_luma_read,
        strm_out_V_pixel_4_luma_dout,
        strm_out_V_pixel_4_luma_empty_n,
        strm_out_V_pixel_4_luma_read,
        strm_out_V_pixel_5_luma_dout,
        strm_out_V_pixel_5_luma_empty_n,
        strm_out_V_pixel_5_luma_read,
        strm_out_V_pixel_6_luma_dout,
        strm_out_V_pixel_6_luma_empty_n,
        strm_out_V_pixel_6_luma_read,
        strm_out_V_pixel_7_luma_dout,
        strm_out_V_pixel_7_luma_empty_n,
        strm_out_V_pixel_7_luma_read,
        strm_out_V_pixel_8_luma_dout,
        strm_out_V_pixel_8_luma_empty_n,
        strm_out_V_pixel_8_luma_read,
        strm_out_V_pixel_9_luma_dout,
        strm_out_V_pixel_9_luma_empty_n,
        strm_out_V_pixel_9_luma_read,
        strm_out_V_pixel_10_luma_dout,
        strm_out_V_pixel_10_luma_empty_n,
        strm_out_V_pixel_10_luma_read,
        strm_out_V_pixel_11_luma_dout,
        strm_out_V_pixel_11_luma_empty_n,
        strm_out_V_pixel_11_luma_read,
        strm_out_V_pixel_12_luma_dout,
        strm_out_V_pixel_12_luma_empty_n,
        strm_out_V_pixel_12_luma_read,
        strm_out_V_pixel_13_luma_dout,
        strm_out_V_pixel_13_luma_empty_n,
        strm_out_V_pixel_13_luma_read,
        strm_out_V_pixel_14_luma_dout,
        strm_out_V_pixel_14_luma_empty_n,
        strm_out_V_pixel_14_luma_read,
        strm_out_V_pixel_15_luma_dout,
        strm_out_V_pixel_15_luma_empty_n,
        strm_out_V_pixel_15_luma_read,
        strm_out_V_pixel_16_luma_dout,
        strm_out_V_pixel_16_luma_empty_n,
        strm_out_V_pixel_16_luma_read,
        strm_out_V_pixel_17_luma_dout,
        strm_out_V_pixel_17_luma_empty_n,
        strm_out_V_pixel_17_luma_read,
        strm_out_V_pixel_18_luma_dout,
        strm_out_V_pixel_18_luma_empty_n,
        strm_out_V_pixel_18_luma_read,
        strm_out_V_pixel_19_luma_dout,
        strm_out_V_pixel_19_luma_empty_n,
        strm_out_V_pixel_19_luma_read,
        strm_out_V_pixel_20_luma_dout,
        strm_out_V_pixel_20_luma_empty_n,
        strm_out_V_pixel_20_luma_read,
        strm_out_V_pixel_21_luma_dout,
        strm_out_V_pixel_21_luma_empty_n,
        strm_out_V_pixel_21_luma_read,
        strm_out_V_pixel_22_luma_dout,
        strm_out_V_pixel_22_luma_empty_n,
        strm_out_V_pixel_22_luma_read,
        strm_out_V_pixel_23_luma_dout,
        strm_out_V_pixel_23_luma_empty_n,
        strm_out_V_pixel_23_luma_read,
        strm_out_V_pixel_24_luma_dout,
        strm_out_V_pixel_24_luma_empty_n,
        strm_out_V_pixel_24_luma_read,
        strm_out_V_pixel_25_luma_dout,
        strm_out_V_pixel_25_luma_empty_n,
        strm_out_V_pixel_25_luma_read,
        strm_out_V_pixel_26_luma_dout,
        strm_out_V_pixel_26_luma_empty_n,
        strm_out_V_pixel_26_luma_read,
        strm_out_V_pixel_27_luma_dout,
        strm_out_V_pixel_27_luma_empty_n,
        strm_out_V_pixel_27_luma_read,
        strm_out_V_pixel_28_luma_dout,
        strm_out_V_pixel_28_luma_empty_n,
        strm_out_V_pixel_28_luma_read,
        strm_out_V_pixel_29_luma_dout,
        strm_out_V_pixel_29_luma_empty_n,
        strm_out_V_pixel_29_luma_read,
        strm_out_V_pixel_30_luma_dout,
        strm_out_V_pixel_30_luma_empty_n,
        strm_out_V_pixel_30_luma_read,
        strm_out_V_pixel_31_luma_dout,
        strm_out_V_pixel_31_luma_empty_n,
        strm_out_V_pixel_31_luma_read,
        strm_out_V_pixel_32_luma_dout,
        strm_out_V_pixel_32_luma_empty_n,
        strm_out_V_pixel_32_luma_read,
        strm_out_V_pixel_33_luma_dout,
        strm_out_V_pixel_33_luma_empty_n,
        strm_out_V_pixel_33_luma_read,
        strm_out_V_pixel_34_luma_dout,
        strm_out_V_pixel_34_luma_empty_n,
        strm_out_V_pixel_34_luma_read,
        strm_out_V_pixel_35_luma_dout,
        strm_out_V_pixel_35_luma_empty_n,
        strm_out_V_pixel_35_luma_read,
        strm_out_V_pixel_36_luma_dout,
        strm_out_V_pixel_36_luma_empty_n,
        strm_out_V_pixel_36_luma_read,
        strm_out_V_pixel_37_luma_dout,
        strm_out_V_pixel_37_luma_empty_n,
        strm_out_V_pixel_37_luma_read,
        strm_out_V_pixel_38_luma_dout,
        strm_out_V_pixel_38_luma_empty_n,
        strm_out_V_pixel_38_luma_read,
        strm_out_V_pixel_39_luma_dout,
        strm_out_V_pixel_39_luma_empty_n,
        strm_out_V_pixel_39_luma_read,
        strm_out_V_pixel_40_luma_dout,
        strm_out_V_pixel_40_luma_empty_n,
        strm_out_V_pixel_40_luma_read,
        strm_out_V_pixel_41_luma_dout,
        strm_out_V_pixel_41_luma_empty_n,
        strm_out_V_pixel_41_luma_read,
        strm_out_V_pixel_42_luma_dout,
        strm_out_V_pixel_42_luma_empty_n,
        strm_out_V_pixel_42_luma_read,
        strm_out_V_pixel_43_luma_dout,
        strm_out_V_pixel_43_luma_empty_n,
        strm_out_V_pixel_43_luma_read,
        strm_out_V_pixel_44_luma_dout,
        strm_out_V_pixel_44_luma_empty_n,
        strm_out_V_pixel_44_luma_read,
        strm_out_V_pixel_45_luma_dout,
        strm_out_V_pixel_45_luma_empty_n,
        strm_out_V_pixel_45_luma_read,
        strm_out_V_pixel_46_luma_dout,
        strm_out_V_pixel_46_luma_empty_n,
        strm_out_V_pixel_46_luma_read,
        strm_out_V_pixel_47_luma_dout,
        strm_out_V_pixel_47_luma_empty_n,
        strm_out_V_pixel_47_luma_read,
        strm_out_V_pixel_48_luma_dout,
        strm_out_V_pixel_48_luma_empty_n,
        strm_out_V_pixel_48_luma_read,
        strm_out_V_pixel_49_luma_dout,
        strm_out_V_pixel_49_luma_empty_n,
        strm_out_V_pixel_49_luma_read,
        strm_out_V_pixel_50_luma_dout,
        strm_out_V_pixel_50_luma_empty_n,
        strm_out_V_pixel_50_luma_read,
        strm_out_V_pixel_51_luma_dout,
        strm_out_V_pixel_51_luma_empty_n,
        strm_out_V_pixel_51_luma_read,
        strm_out_V_pixel_52_luma_dout,
        strm_out_V_pixel_52_luma_empty_n,
        strm_out_V_pixel_52_luma_read,
        strm_out_V_pixel_53_luma_dout,
        strm_out_V_pixel_53_luma_empty_n,
        strm_out_V_pixel_53_luma_read,
        strm_out_V_pixel_54_luma_dout,
        strm_out_V_pixel_54_luma_empty_n,
        strm_out_V_pixel_54_luma_read,
        strm_out_V_pixel_55_luma_dout,
        strm_out_V_pixel_55_luma_empty_n,
        strm_out_V_pixel_55_luma_read,
        strm_out_V_pixel_56_luma_dout,
        strm_out_V_pixel_56_luma_empty_n,
        strm_out_V_pixel_56_luma_read,
        strm_out_V_pixel_57_luma_dout,
        strm_out_V_pixel_57_luma_empty_n,
        strm_out_V_pixel_57_luma_read,
        strm_out_V_pixel_58_luma_dout,
        strm_out_V_pixel_58_luma_empty_n,
        strm_out_V_pixel_58_luma_read,
        strm_out_V_pixel_59_luma_dout,
        strm_out_V_pixel_59_luma_empty_n,
        strm_out_V_pixel_59_luma_read,
        strm_out_V_pixel_60_luma_dout,
        strm_out_V_pixel_60_luma_empty_n,
        strm_out_V_pixel_60_luma_read,
        strm_out_V_pixel_61_luma_dout,
        strm_out_V_pixel_61_luma_empty_n,
        strm_out_V_pixel_61_luma_read,
        strm_out_V_pixel_62_luma_dout,
        strm_out_V_pixel_62_luma_empty_n,
        strm_out_V_pixel_62_luma_read,
        strm_out_V_pixel_63_luma_dout,
        strm_out_V_pixel_63_luma_empty_n,
        strm_out_V_pixel_63_luma_read,
        strm_out_V_pixel_64_luma_dout,
        strm_out_V_pixel_64_luma_empty_n,
        strm_out_V_pixel_64_luma_read,
        strm_out_V_pixel_65_luma_dout,
        strm_out_V_pixel_65_luma_empty_n,
        strm_out_V_pixel_65_luma_read,
        strm_out_V_pixel_66_luma_dout,
        strm_out_V_pixel_66_luma_empty_n,
        strm_out_V_pixel_66_luma_read,
        strm_out_V_pixel_67_luma_dout,
        strm_out_V_pixel_67_luma_empty_n,
        strm_out_V_pixel_67_luma_read,
        strm_out_V_pixel_68_luma_dout,
        strm_out_V_pixel_68_luma_empty_n,
        strm_out_V_pixel_68_luma_read,
        strm_out_V_pixel_69_luma_dout,
        strm_out_V_pixel_69_luma_empty_n,
        strm_out_V_pixel_69_luma_read,
        strm_out_V_pixel_70_luma_dout,
        strm_out_V_pixel_70_luma_empty_n,
        strm_out_V_pixel_70_luma_read,
        dst_V_pixel_0_luma_din,
        dst_V_pixel_0_luma_full_n,
        dst_V_pixel_0_luma_write,
        dst_V_pixel_1_luma_din,
        dst_V_pixel_1_luma_full_n,
        dst_V_pixel_1_luma_write,
        dst_V_pixel_2_luma_din,
        dst_V_pixel_2_luma_full_n,
        dst_V_pixel_2_luma_write,
        dst_V_pixel_3_luma_din,
        dst_V_pixel_3_luma_full_n,
        dst_V_pixel_3_luma_write,
        dst_V_pixel_4_luma_din,
        dst_V_pixel_4_luma_full_n,
        dst_V_pixel_4_luma_write,
        dst_V_pixel_5_luma_din,
        dst_V_pixel_5_luma_full_n,
        dst_V_pixel_5_luma_write,
        dst_V_pixel_6_luma_din,
        dst_V_pixel_6_luma_full_n,
        dst_V_pixel_6_luma_write,
        dst_V_pixel_7_luma_din,
        dst_V_pixel_7_luma_full_n,
        dst_V_pixel_7_luma_write,
        dst_V_pixel_8_luma_din,
        dst_V_pixel_8_luma_full_n,
        dst_V_pixel_8_luma_write,
        dst_V_pixel_9_luma_din,
        dst_V_pixel_9_luma_full_n,
        dst_V_pixel_9_luma_write,
        dst_V_pixel_10_luma_din,
        dst_V_pixel_10_luma_full_n,
        dst_V_pixel_10_luma_write,
        dst_V_pixel_11_luma_din,
        dst_V_pixel_11_luma_full_n,
        dst_V_pixel_11_luma_write,
        dst_V_pixel_12_luma_din,
        dst_V_pixel_12_luma_full_n,
        dst_V_pixel_12_luma_write,
        dst_V_pixel_13_luma_din,
        dst_V_pixel_13_luma_full_n,
        dst_V_pixel_13_luma_write,
        dst_V_pixel_14_luma_din,
        dst_V_pixel_14_luma_full_n,
        dst_V_pixel_14_luma_write,
        dst_V_pixel_15_luma_din,
        dst_V_pixel_15_luma_full_n,
        dst_V_pixel_15_luma_write,
        dst_V_pixel_16_luma_din,
        dst_V_pixel_16_luma_full_n,
        dst_V_pixel_16_luma_write,
        dst_V_pixel_17_luma_din,
        dst_V_pixel_17_luma_full_n,
        dst_V_pixel_17_luma_write,
        dst_V_pixel_18_luma_din,
        dst_V_pixel_18_luma_full_n,
        dst_V_pixel_18_luma_write,
        dst_V_pixel_19_luma_din,
        dst_V_pixel_19_luma_full_n,
        dst_V_pixel_19_luma_write,
        dst_V_pixel_20_luma_din,
        dst_V_pixel_20_luma_full_n,
        dst_V_pixel_20_luma_write,
        dst_V_pixel_21_luma_din,
        dst_V_pixel_21_luma_full_n,
        dst_V_pixel_21_luma_write,
        dst_V_pixel_22_luma_din,
        dst_V_pixel_22_luma_full_n,
        dst_V_pixel_22_luma_write,
        dst_V_pixel_23_luma_din,
        dst_V_pixel_23_luma_full_n,
        dst_V_pixel_23_luma_write,
        dst_V_pixel_24_luma_din,
        dst_V_pixel_24_luma_full_n,
        dst_V_pixel_24_luma_write,
        dst_V_pixel_25_luma_din,
        dst_V_pixel_25_luma_full_n,
        dst_V_pixel_25_luma_write,
        dst_V_pixel_26_luma_din,
        dst_V_pixel_26_luma_full_n,
        dst_V_pixel_26_luma_write,
        dst_V_pixel_27_luma_din,
        dst_V_pixel_27_luma_full_n,
        dst_V_pixel_27_luma_write,
        dst_V_pixel_28_luma_din,
        dst_V_pixel_28_luma_full_n,
        dst_V_pixel_28_luma_write,
        dst_V_pixel_29_luma_din,
        dst_V_pixel_29_luma_full_n,
        dst_V_pixel_29_luma_write,
        dst_V_pixel_30_luma_din,
        dst_V_pixel_30_luma_full_n,
        dst_V_pixel_30_luma_write,
        dst_V_pixel_31_luma_din,
        dst_V_pixel_31_luma_full_n,
        dst_V_pixel_31_luma_write,
        dst_V_pixel_32_luma_din,
        dst_V_pixel_32_luma_full_n,
        dst_V_pixel_32_luma_write,
        dst_V_pixel_33_luma_din,
        dst_V_pixel_33_luma_full_n,
        dst_V_pixel_33_luma_write,
        dst_V_pixel_34_luma_din,
        dst_V_pixel_34_luma_full_n,
        dst_V_pixel_34_luma_write,
        dst_V_pixel_35_luma_din,
        dst_V_pixel_35_luma_full_n,
        dst_V_pixel_35_luma_write,
        dst_V_pixel_36_luma_din,
        dst_V_pixel_36_luma_full_n,
        dst_V_pixel_36_luma_write,
        dst_V_pixel_37_luma_din,
        dst_V_pixel_37_luma_full_n,
        dst_V_pixel_37_luma_write,
        dst_V_pixel_38_luma_din,
        dst_V_pixel_38_luma_full_n,
        dst_V_pixel_38_luma_write,
        dst_V_pixel_39_luma_din,
        dst_V_pixel_39_luma_full_n,
        dst_V_pixel_39_luma_write,
        dst_V_pixel_40_luma_din,
        dst_V_pixel_40_luma_full_n,
        dst_V_pixel_40_luma_write,
        dst_V_pixel_41_luma_din,
        dst_V_pixel_41_luma_full_n,
        dst_V_pixel_41_luma_write,
        dst_V_pixel_42_luma_din,
        dst_V_pixel_42_luma_full_n,
        dst_V_pixel_42_luma_write,
        dst_V_pixel_43_luma_din,
        dst_V_pixel_43_luma_full_n,
        dst_V_pixel_43_luma_write,
        dst_V_pixel_44_luma_din,
        dst_V_pixel_44_luma_full_n,
        dst_V_pixel_44_luma_write,
        dst_V_pixel_45_luma_din,
        dst_V_pixel_45_luma_full_n,
        dst_V_pixel_45_luma_write,
        dst_V_pixel_46_luma_din,
        dst_V_pixel_46_luma_full_n,
        dst_V_pixel_46_luma_write,
        dst_V_pixel_47_luma_din,
        dst_V_pixel_47_luma_full_n,
        dst_V_pixel_47_luma_write,
        dst_V_pixel_48_luma_din,
        dst_V_pixel_48_luma_full_n,
        dst_V_pixel_48_luma_write,
        dst_V_pixel_49_luma_din,
        dst_V_pixel_49_luma_full_n,
        dst_V_pixel_49_luma_write,
        dst_V_pixel_50_luma_din,
        dst_V_pixel_50_luma_full_n,
        dst_V_pixel_50_luma_write,
        dst_V_pixel_51_luma_din,
        dst_V_pixel_51_luma_full_n,
        dst_V_pixel_51_luma_write,
        dst_V_pixel_52_luma_din,
        dst_V_pixel_52_luma_full_n,
        dst_V_pixel_52_luma_write,
        dst_V_pixel_53_luma_din,
        dst_V_pixel_53_luma_full_n,
        dst_V_pixel_53_luma_write,
        dst_V_pixel_54_luma_din,
        dst_V_pixel_54_luma_full_n,
        dst_V_pixel_54_luma_write,
        dst_V_pixel_55_luma_din,
        dst_V_pixel_55_luma_full_n,
        dst_V_pixel_55_luma_write,
        dst_V_pixel_56_luma_din,
        dst_V_pixel_56_luma_full_n,
        dst_V_pixel_56_luma_write,
        dst_V_pixel_57_luma_din,
        dst_V_pixel_57_luma_full_n,
        dst_V_pixel_57_luma_write,
        dst_V_pixel_58_luma_din,
        dst_V_pixel_58_luma_full_n,
        dst_V_pixel_58_luma_write,
        dst_V_pixel_59_luma_din,
        dst_V_pixel_59_luma_full_n,
        dst_V_pixel_59_luma_write,
        dst_V_pixel_60_luma_din,
        dst_V_pixel_60_luma_full_n,
        dst_V_pixel_60_luma_write,
        dst_V_pixel_61_luma_din,
        dst_V_pixel_61_luma_full_n,
        dst_V_pixel_61_luma_write,
        dst_V_pixel_62_luma_din,
        dst_V_pixel_62_luma_full_n,
        dst_V_pixel_62_luma_write,
        dst_V_pixel_63_luma_din,
        dst_V_pixel_63_luma_full_n,
        dst_V_pixel_63_luma_write,
        dst_V_pixel_64_luma_din,
        dst_V_pixel_64_luma_full_n,
        dst_V_pixel_64_luma_write,
        dst_V_pixel_65_luma_din,
        dst_V_pixel_65_luma_full_n,
        dst_V_pixel_65_luma_write,
        dst_V_pixel_66_luma_din,
        dst_V_pixel_66_luma_full_n,
        dst_V_pixel_66_luma_write,
        dst_V_pixel_67_luma_din,
        dst_V_pixel_67_luma_full_n,
        dst_V_pixel_67_luma_write,
        dst_V_pixel_68_luma_din,
        dst_V_pixel_68_luma_full_n,
        dst_V_pixel_68_luma_write,
        dst_V_pixel_69_luma_din,
        dst_V_pixel_69_luma_full_n,
        dst_V_pixel_69_luma_write,
        dst_V_pixel_70_luma_din,
        dst_V_pixel_70_luma_full_n,
        dst_V_pixel_70_luma_write
);

parameter    ap_ST_st1_fsm_0 = 2'b1;
parameter    ap_ST_st2_fsm_1 = 2'b10;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv9_1E0 = 9'b111100000;
parameter    ap_const_lv9_1 = 9'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] strm_out_V_pixel_0_luma_dout;
input   strm_out_V_pixel_0_luma_empty_n;
output   strm_out_V_pixel_0_luma_read;
input  [7:0] strm_out_V_pixel_1_luma_dout;
input   strm_out_V_pixel_1_luma_empty_n;
output   strm_out_V_pixel_1_luma_read;
input  [7:0] strm_out_V_pixel_2_luma_dout;
input   strm_out_V_pixel_2_luma_empty_n;
output   strm_out_V_pixel_2_luma_read;
input  [7:0] strm_out_V_pixel_3_luma_dout;
input   strm_out_V_pixel_3_luma_empty_n;
output   strm_out_V_pixel_3_luma_read;
input  [7:0] strm_out_V_pixel_4_luma_dout;
input   strm_out_V_pixel_4_luma_empty_n;
output   strm_out_V_pixel_4_luma_read;
input  [7:0] strm_out_V_pixel_5_luma_dout;
input   strm_out_V_pixel_5_luma_empty_n;
output   strm_out_V_pixel_5_luma_read;
input  [7:0] strm_out_V_pixel_6_luma_dout;
input   strm_out_V_pixel_6_luma_empty_n;
output   strm_out_V_pixel_6_luma_read;
input  [7:0] strm_out_V_pixel_7_luma_dout;
input   strm_out_V_pixel_7_luma_empty_n;
output   strm_out_V_pixel_7_luma_read;
input  [7:0] strm_out_V_pixel_8_luma_dout;
input   strm_out_V_pixel_8_luma_empty_n;
output   strm_out_V_pixel_8_luma_read;
input  [7:0] strm_out_V_pixel_9_luma_dout;
input   strm_out_V_pixel_9_luma_empty_n;
output   strm_out_V_pixel_9_luma_read;
input  [7:0] strm_out_V_pixel_10_luma_dout;
input   strm_out_V_pixel_10_luma_empty_n;
output   strm_out_V_pixel_10_luma_read;
input  [7:0] strm_out_V_pixel_11_luma_dout;
input   strm_out_V_pixel_11_luma_empty_n;
output   strm_out_V_pixel_11_luma_read;
input  [7:0] strm_out_V_pixel_12_luma_dout;
input   strm_out_V_pixel_12_luma_empty_n;
output   strm_out_V_pixel_12_luma_read;
input  [7:0] strm_out_V_pixel_13_luma_dout;
input   strm_out_V_pixel_13_luma_empty_n;
output   strm_out_V_pixel_13_luma_read;
input  [7:0] strm_out_V_pixel_14_luma_dout;
input   strm_out_V_pixel_14_luma_empty_n;
output   strm_out_V_pixel_14_luma_read;
input  [7:0] strm_out_V_pixel_15_luma_dout;
input   strm_out_V_pixel_15_luma_empty_n;
output   strm_out_V_pixel_15_luma_read;
input  [7:0] strm_out_V_pixel_16_luma_dout;
input   strm_out_V_pixel_16_luma_empty_n;
output   strm_out_V_pixel_16_luma_read;
input  [7:0] strm_out_V_pixel_17_luma_dout;
input   strm_out_V_pixel_17_luma_empty_n;
output   strm_out_V_pixel_17_luma_read;
input  [7:0] strm_out_V_pixel_18_luma_dout;
input   strm_out_V_pixel_18_luma_empty_n;
output   strm_out_V_pixel_18_luma_read;
input  [7:0] strm_out_V_pixel_19_luma_dout;
input   strm_out_V_pixel_19_luma_empty_n;
output   strm_out_V_pixel_19_luma_read;
input  [7:0] strm_out_V_pixel_20_luma_dout;
input   strm_out_V_pixel_20_luma_empty_n;
output   strm_out_V_pixel_20_luma_read;
input  [7:0] strm_out_V_pixel_21_luma_dout;
input   strm_out_V_pixel_21_luma_empty_n;
output   strm_out_V_pixel_21_luma_read;
input  [7:0] strm_out_V_pixel_22_luma_dout;
input   strm_out_V_pixel_22_luma_empty_n;
output   strm_out_V_pixel_22_luma_read;
input  [7:0] strm_out_V_pixel_23_luma_dout;
input   strm_out_V_pixel_23_luma_empty_n;
output   strm_out_V_pixel_23_luma_read;
input  [7:0] strm_out_V_pixel_24_luma_dout;
input   strm_out_V_pixel_24_luma_empty_n;
output   strm_out_V_pixel_24_luma_read;
input  [7:0] strm_out_V_pixel_25_luma_dout;
input   strm_out_V_pixel_25_luma_empty_n;
output   strm_out_V_pixel_25_luma_read;
input  [7:0] strm_out_V_pixel_26_luma_dout;
input   strm_out_V_pixel_26_luma_empty_n;
output   strm_out_V_pixel_26_luma_read;
input  [7:0] strm_out_V_pixel_27_luma_dout;
input   strm_out_V_pixel_27_luma_empty_n;
output   strm_out_V_pixel_27_luma_read;
input  [7:0] strm_out_V_pixel_28_luma_dout;
input   strm_out_V_pixel_28_luma_empty_n;
output   strm_out_V_pixel_28_luma_read;
input  [7:0] strm_out_V_pixel_29_luma_dout;
input   strm_out_V_pixel_29_luma_empty_n;
output   strm_out_V_pixel_29_luma_read;
input  [7:0] strm_out_V_pixel_30_luma_dout;
input   strm_out_V_pixel_30_luma_empty_n;
output   strm_out_V_pixel_30_luma_read;
input  [7:0] strm_out_V_pixel_31_luma_dout;
input   strm_out_V_pixel_31_luma_empty_n;
output   strm_out_V_pixel_31_luma_read;
input  [7:0] strm_out_V_pixel_32_luma_dout;
input   strm_out_V_pixel_32_luma_empty_n;
output   strm_out_V_pixel_32_luma_read;
input  [7:0] strm_out_V_pixel_33_luma_dout;
input   strm_out_V_pixel_33_luma_empty_n;
output   strm_out_V_pixel_33_luma_read;
input  [7:0] strm_out_V_pixel_34_luma_dout;
input   strm_out_V_pixel_34_luma_empty_n;
output   strm_out_V_pixel_34_luma_read;
input  [7:0] strm_out_V_pixel_35_luma_dout;
input   strm_out_V_pixel_35_luma_empty_n;
output   strm_out_V_pixel_35_luma_read;
input  [7:0] strm_out_V_pixel_36_luma_dout;
input   strm_out_V_pixel_36_luma_empty_n;
output   strm_out_V_pixel_36_luma_read;
input  [7:0] strm_out_V_pixel_37_luma_dout;
input   strm_out_V_pixel_37_luma_empty_n;
output   strm_out_V_pixel_37_luma_read;
input  [7:0] strm_out_V_pixel_38_luma_dout;
input   strm_out_V_pixel_38_luma_empty_n;
output   strm_out_V_pixel_38_luma_read;
input  [7:0] strm_out_V_pixel_39_luma_dout;
input   strm_out_V_pixel_39_luma_empty_n;
output   strm_out_V_pixel_39_luma_read;
input  [7:0] strm_out_V_pixel_40_luma_dout;
input   strm_out_V_pixel_40_luma_empty_n;
output   strm_out_V_pixel_40_luma_read;
input  [7:0] strm_out_V_pixel_41_luma_dout;
input   strm_out_V_pixel_41_luma_empty_n;
output   strm_out_V_pixel_41_luma_read;
input  [7:0] strm_out_V_pixel_42_luma_dout;
input   strm_out_V_pixel_42_luma_empty_n;
output   strm_out_V_pixel_42_luma_read;
input  [7:0] strm_out_V_pixel_43_luma_dout;
input   strm_out_V_pixel_43_luma_empty_n;
output   strm_out_V_pixel_43_luma_read;
input  [7:0] strm_out_V_pixel_44_luma_dout;
input   strm_out_V_pixel_44_luma_empty_n;
output   strm_out_V_pixel_44_luma_read;
input  [7:0] strm_out_V_pixel_45_luma_dout;
input   strm_out_V_pixel_45_luma_empty_n;
output   strm_out_V_pixel_45_luma_read;
input  [7:0] strm_out_V_pixel_46_luma_dout;
input   strm_out_V_pixel_46_luma_empty_n;
output   strm_out_V_pixel_46_luma_read;
input  [7:0] strm_out_V_pixel_47_luma_dout;
input   strm_out_V_pixel_47_luma_empty_n;
output   strm_out_V_pixel_47_luma_read;
input  [7:0] strm_out_V_pixel_48_luma_dout;
input   strm_out_V_pixel_48_luma_empty_n;
output   strm_out_V_pixel_48_luma_read;
input  [7:0] strm_out_V_pixel_49_luma_dout;
input   strm_out_V_pixel_49_luma_empty_n;
output   strm_out_V_pixel_49_luma_read;
input  [7:0] strm_out_V_pixel_50_luma_dout;
input   strm_out_V_pixel_50_luma_empty_n;
output   strm_out_V_pixel_50_luma_read;
input  [7:0] strm_out_V_pixel_51_luma_dout;
input   strm_out_V_pixel_51_luma_empty_n;
output   strm_out_V_pixel_51_luma_read;
input  [7:0] strm_out_V_pixel_52_luma_dout;
input   strm_out_V_pixel_52_luma_empty_n;
output   strm_out_V_pixel_52_luma_read;
input  [7:0] strm_out_V_pixel_53_luma_dout;
input   strm_out_V_pixel_53_luma_empty_n;
output   strm_out_V_pixel_53_luma_read;
input  [7:0] strm_out_V_pixel_54_luma_dout;
input   strm_out_V_pixel_54_luma_empty_n;
output   strm_out_V_pixel_54_luma_read;
input  [7:0] strm_out_V_pixel_55_luma_dout;
input   strm_out_V_pixel_55_luma_empty_n;
output   strm_out_V_pixel_55_luma_read;
input  [7:0] strm_out_V_pixel_56_luma_dout;
input   strm_out_V_pixel_56_luma_empty_n;
output   strm_out_V_pixel_56_luma_read;
input  [7:0] strm_out_V_pixel_57_luma_dout;
input   strm_out_V_pixel_57_luma_empty_n;
output   strm_out_V_pixel_57_luma_read;
input  [7:0] strm_out_V_pixel_58_luma_dout;
input   strm_out_V_pixel_58_luma_empty_n;
output   strm_out_V_pixel_58_luma_read;
input  [7:0] strm_out_V_pixel_59_luma_dout;
input   strm_out_V_pixel_59_luma_empty_n;
output   strm_out_V_pixel_59_luma_read;
input  [7:0] strm_out_V_pixel_60_luma_dout;
input   strm_out_V_pixel_60_luma_empty_n;
output   strm_out_V_pixel_60_luma_read;
input  [7:0] strm_out_V_pixel_61_luma_dout;
input   strm_out_V_pixel_61_luma_empty_n;
output   strm_out_V_pixel_61_luma_read;
input  [7:0] strm_out_V_pixel_62_luma_dout;
input   strm_out_V_pixel_62_luma_empty_n;
output   strm_out_V_pixel_62_luma_read;
input  [7:0] strm_out_V_pixel_63_luma_dout;
input   strm_out_V_pixel_63_luma_empty_n;
output   strm_out_V_pixel_63_luma_read;
input  [7:0] strm_out_V_pixel_64_luma_dout;
input   strm_out_V_pixel_64_luma_empty_n;
output   strm_out_V_pixel_64_luma_read;
input  [7:0] strm_out_V_pixel_65_luma_dout;
input   strm_out_V_pixel_65_luma_empty_n;
output   strm_out_V_pixel_65_luma_read;
input  [7:0] strm_out_V_pixel_66_luma_dout;
input   strm_out_V_pixel_66_luma_empty_n;
output   strm_out_V_pixel_66_luma_read;
input  [7:0] strm_out_V_pixel_67_luma_dout;
input   strm_out_V_pixel_67_luma_empty_n;
output   strm_out_V_pixel_67_luma_read;
input  [7:0] strm_out_V_pixel_68_luma_dout;
input   strm_out_V_pixel_68_luma_empty_n;
output   strm_out_V_pixel_68_luma_read;
input  [7:0] strm_out_V_pixel_69_luma_dout;
input   strm_out_V_pixel_69_luma_empty_n;
output   strm_out_V_pixel_69_luma_read;
input  [7:0] strm_out_V_pixel_70_luma_dout;
input   strm_out_V_pixel_70_luma_empty_n;
output   strm_out_V_pixel_70_luma_read;
output  [7:0] dst_V_pixel_0_luma_din;
input   dst_V_pixel_0_luma_full_n;
output   dst_V_pixel_0_luma_write;
output  [7:0] dst_V_pixel_1_luma_din;
input   dst_V_pixel_1_luma_full_n;
output   dst_V_pixel_1_luma_write;
output  [7:0] dst_V_pixel_2_luma_din;
input   dst_V_pixel_2_luma_full_n;
output   dst_V_pixel_2_luma_write;
output  [7:0] dst_V_pixel_3_luma_din;
input   dst_V_pixel_3_luma_full_n;
output   dst_V_pixel_3_luma_write;
output  [7:0] dst_V_pixel_4_luma_din;
input   dst_V_pixel_4_luma_full_n;
output   dst_V_pixel_4_luma_write;
output  [7:0] dst_V_pixel_5_luma_din;
input   dst_V_pixel_5_luma_full_n;
output   dst_V_pixel_5_luma_write;
output  [7:0] dst_V_pixel_6_luma_din;
input   dst_V_pixel_6_luma_full_n;
output   dst_V_pixel_6_luma_write;
output  [7:0] dst_V_pixel_7_luma_din;
input   dst_V_pixel_7_luma_full_n;
output   dst_V_pixel_7_luma_write;
output  [7:0] dst_V_pixel_8_luma_din;
input   dst_V_pixel_8_luma_full_n;
output   dst_V_pixel_8_luma_write;
output  [7:0] dst_V_pixel_9_luma_din;
input   dst_V_pixel_9_luma_full_n;
output   dst_V_pixel_9_luma_write;
output  [7:0] dst_V_pixel_10_luma_din;
input   dst_V_pixel_10_luma_full_n;
output   dst_V_pixel_10_luma_write;
output  [7:0] dst_V_pixel_11_luma_din;
input   dst_V_pixel_11_luma_full_n;
output   dst_V_pixel_11_luma_write;
output  [7:0] dst_V_pixel_12_luma_din;
input   dst_V_pixel_12_luma_full_n;
output   dst_V_pixel_12_luma_write;
output  [7:0] dst_V_pixel_13_luma_din;
input   dst_V_pixel_13_luma_full_n;
output   dst_V_pixel_13_luma_write;
output  [7:0] dst_V_pixel_14_luma_din;
input   dst_V_pixel_14_luma_full_n;
output   dst_V_pixel_14_luma_write;
output  [7:0] dst_V_pixel_15_luma_din;
input   dst_V_pixel_15_luma_full_n;
output   dst_V_pixel_15_luma_write;
output  [7:0] dst_V_pixel_16_luma_din;
input   dst_V_pixel_16_luma_full_n;
output   dst_V_pixel_16_luma_write;
output  [7:0] dst_V_pixel_17_luma_din;
input   dst_V_pixel_17_luma_full_n;
output   dst_V_pixel_17_luma_write;
output  [7:0] dst_V_pixel_18_luma_din;
input   dst_V_pixel_18_luma_full_n;
output   dst_V_pixel_18_luma_write;
output  [7:0] dst_V_pixel_19_luma_din;
input   dst_V_pixel_19_luma_full_n;
output   dst_V_pixel_19_luma_write;
output  [7:0] dst_V_pixel_20_luma_din;
input   dst_V_pixel_20_luma_full_n;
output   dst_V_pixel_20_luma_write;
output  [7:0] dst_V_pixel_21_luma_din;
input   dst_V_pixel_21_luma_full_n;
output   dst_V_pixel_21_luma_write;
output  [7:0] dst_V_pixel_22_luma_din;
input   dst_V_pixel_22_luma_full_n;
output   dst_V_pixel_22_luma_write;
output  [7:0] dst_V_pixel_23_luma_din;
input   dst_V_pixel_23_luma_full_n;
output   dst_V_pixel_23_luma_write;
output  [7:0] dst_V_pixel_24_luma_din;
input   dst_V_pixel_24_luma_full_n;
output   dst_V_pixel_24_luma_write;
output  [7:0] dst_V_pixel_25_luma_din;
input   dst_V_pixel_25_luma_full_n;
output   dst_V_pixel_25_luma_write;
output  [7:0] dst_V_pixel_26_luma_din;
input   dst_V_pixel_26_luma_full_n;
output   dst_V_pixel_26_luma_write;
output  [7:0] dst_V_pixel_27_luma_din;
input   dst_V_pixel_27_luma_full_n;
output   dst_V_pixel_27_luma_write;
output  [7:0] dst_V_pixel_28_luma_din;
input   dst_V_pixel_28_luma_full_n;
output   dst_V_pixel_28_luma_write;
output  [7:0] dst_V_pixel_29_luma_din;
input   dst_V_pixel_29_luma_full_n;
output   dst_V_pixel_29_luma_write;
output  [7:0] dst_V_pixel_30_luma_din;
input   dst_V_pixel_30_luma_full_n;
output   dst_V_pixel_30_luma_write;
output  [7:0] dst_V_pixel_31_luma_din;
input   dst_V_pixel_31_luma_full_n;
output   dst_V_pixel_31_luma_write;
output  [7:0] dst_V_pixel_32_luma_din;
input   dst_V_pixel_32_luma_full_n;
output   dst_V_pixel_32_luma_write;
output  [7:0] dst_V_pixel_33_luma_din;
input   dst_V_pixel_33_luma_full_n;
output   dst_V_pixel_33_luma_write;
output  [7:0] dst_V_pixel_34_luma_din;
input   dst_V_pixel_34_luma_full_n;
output   dst_V_pixel_34_luma_write;
output  [7:0] dst_V_pixel_35_luma_din;
input   dst_V_pixel_35_luma_full_n;
output   dst_V_pixel_35_luma_write;
output  [7:0] dst_V_pixel_36_luma_din;
input   dst_V_pixel_36_luma_full_n;
output   dst_V_pixel_36_luma_write;
output  [7:0] dst_V_pixel_37_luma_din;
input   dst_V_pixel_37_luma_full_n;
output   dst_V_pixel_37_luma_write;
output  [7:0] dst_V_pixel_38_luma_din;
input   dst_V_pixel_38_luma_full_n;
output   dst_V_pixel_38_luma_write;
output  [7:0] dst_V_pixel_39_luma_din;
input   dst_V_pixel_39_luma_full_n;
output   dst_V_pixel_39_luma_write;
output  [7:0] dst_V_pixel_40_luma_din;
input   dst_V_pixel_40_luma_full_n;
output   dst_V_pixel_40_luma_write;
output  [7:0] dst_V_pixel_41_luma_din;
input   dst_V_pixel_41_luma_full_n;
output   dst_V_pixel_41_luma_write;
output  [7:0] dst_V_pixel_42_luma_din;
input   dst_V_pixel_42_luma_full_n;
output   dst_V_pixel_42_luma_write;
output  [7:0] dst_V_pixel_43_luma_din;
input   dst_V_pixel_43_luma_full_n;
output   dst_V_pixel_43_luma_write;
output  [7:0] dst_V_pixel_44_luma_din;
input   dst_V_pixel_44_luma_full_n;
output   dst_V_pixel_44_luma_write;
output  [7:0] dst_V_pixel_45_luma_din;
input   dst_V_pixel_45_luma_full_n;
output   dst_V_pixel_45_luma_write;
output  [7:0] dst_V_pixel_46_luma_din;
input   dst_V_pixel_46_luma_full_n;
output   dst_V_pixel_46_luma_write;
output  [7:0] dst_V_pixel_47_luma_din;
input   dst_V_pixel_47_luma_full_n;
output   dst_V_pixel_47_luma_write;
output  [7:0] dst_V_pixel_48_luma_din;
input   dst_V_pixel_48_luma_full_n;
output   dst_V_pixel_48_luma_write;
output  [7:0] dst_V_pixel_49_luma_din;
input   dst_V_pixel_49_luma_full_n;
output   dst_V_pixel_49_luma_write;
output  [7:0] dst_V_pixel_50_luma_din;
input   dst_V_pixel_50_luma_full_n;
output   dst_V_pixel_50_luma_write;
output  [7:0] dst_V_pixel_51_luma_din;
input   dst_V_pixel_51_luma_full_n;
output   dst_V_pixel_51_luma_write;
output  [7:0] dst_V_pixel_52_luma_din;
input   dst_V_pixel_52_luma_full_n;
output   dst_V_pixel_52_luma_write;
output  [7:0] dst_V_pixel_53_luma_din;
input   dst_V_pixel_53_luma_full_n;
output   dst_V_pixel_53_luma_write;
output  [7:0] dst_V_pixel_54_luma_din;
input   dst_V_pixel_54_luma_full_n;
output   dst_V_pixel_54_luma_write;
output  [7:0] dst_V_pixel_55_luma_din;
input   dst_V_pixel_55_luma_full_n;
output   dst_V_pixel_55_luma_write;
output  [7:0] dst_V_pixel_56_luma_din;
input   dst_V_pixel_56_luma_full_n;
output   dst_V_pixel_56_luma_write;
output  [7:0] dst_V_pixel_57_luma_din;
input   dst_V_pixel_57_luma_full_n;
output   dst_V_pixel_57_luma_write;
output  [7:0] dst_V_pixel_58_luma_din;
input   dst_V_pixel_58_luma_full_n;
output   dst_V_pixel_58_luma_write;
output  [7:0] dst_V_pixel_59_luma_din;
input   dst_V_pixel_59_luma_full_n;
output   dst_V_pixel_59_luma_write;
output  [7:0] dst_V_pixel_60_luma_din;
input   dst_V_pixel_60_luma_full_n;
output   dst_V_pixel_60_luma_write;
output  [7:0] dst_V_pixel_61_luma_din;
input   dst_V_pixel_61_luma_full_n;
output   dst_V_pixel_61_luma_write;
output  [7:0] dst_V_pixel_62_luma_din;
input   dst_V_pixel_62_luma_full_n;
output   dst_V_pixel_62_luma_write;
output  [7:0] dst_V_pixel_63_luma_din;
input   dst_V_pixel_63_luma_full_n;
output   dst_V_pixel_63_luma_write;
output  [7:0] dst_V_pixel_64_luma_din;
input   dst_V_pixel_64_luma_full_n;
output   dst_V_pixel_64_luma_write;
output  [7:0] dst_V_pixel_65_luma_din;
input   dst_V_pixel_65_luma_full_n;
output   dst_V_pixel_65_luma_write;
output  [7:0] dst_V_pixel_66_luma_din;
input   dst_V_pixel_66_luma_full_n;
output   dst_V_pixel_66_luma_write;
output  [7:0] dst_V_pixel_67_luma_din;
input   dst_V_pixel_67_luma_full_n;
output   dst_V_pixel_67_luma_write;
output  [7:0] dst_V_pixel_68_luma_din;
input   dst_V_pixel_68_luma_full_n;
output   dst_V_pixel_68_luma_write;
output  [7:0] dst_V_pixel_69_luma_din;
input   dst_V_pixel_69_luma_full_n;
output   dst_V_pixel_69_luma_write;
output  [7:0] dst_V_pixel_70_luma_din;
input   dst_V_pixel_70_luma_full_n;
output   dst_V_pixel_70_luma_write;

reg ap_done;
reg ap_idle;
reg ap_ready;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_20;
reg    strm_out_V_pixel_0_luma_blk_n;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_601;
wire   [0:0] exitcond4_i1_fu_1822_p2;
reg    strm_out_V_pixel_1_luma_blk_n;
reg    strm_out_V_pixel_2_luma_blk_n;
reg    strm_out_V_pixel_3_luma_blk_n;
reg    strm_out_V_pixel_4_luma_blk_n;
reg    strm_out_V_pixel_5_luma_blk_n;
reg    strm_out_V_pixel_6_luma_blk_n;
reg    strm_out_V_pixel_7_luma_blk_n;
reg    strm_out_V_pixel_8_luma_blk_n;
reg    strm_out_V_pixel_9_luma_blk_n;
reg    strm_out_V_pixel_10_luma_blk_n;
reg    strm_out_V_pixel_11_luma_blk_n;
reg    strm_out_V_pixel_12_luma_blk_n;
reg    strm_out_V_pixel_13_luma_blk_n;
reg    strm_out_V_pixel_14_luma_blk_n;
reg    strm_out_V_pixel_15_luma_blk_n;
reg    strm_out_V_pixel_16_luma_blk_n;
reg    strm_out_V_pixel_17_luma_blk_n;
reg    strm_out_V_pixel_18_luma_blk_n;
reg    strm_out_V_pixel_19_luma_blk_n;
reg    strm_out_V_pixel_20_luma_blk_n;
reg    strm_out_V_pixel_21_luma_blk_n;
reg    strm_out_V_pixel_22_luma_blk_n;
reg    strm_out_V_pixel_23_luma_blk_n;
reg    strm_out_V_pixel_24_luma_blk_n;
reg    strm_out_V_pixel_25_luma_blk_n;
reg    strm_out_V_pixel_26_luma_blk_n;
reg    strm_out_V_pixel_27_luma_blk_n;
reg    strm_out_V_pixel_28_luma_blk_n;
reg    strm_out_V_pixel_29_luma_blk_n;
reg    strm_out_V_pixel_30_luma_blk_n;
reg    strm_out_V_pixel_31_luma_blk_n;
reg    strm_out_V_pixel_32_luma_blk_n;
reg    strm_out_V_pixel_33_luma_blk_n;
reg    strm_out_V_pixel_34_luma_blk_n;
reg    strm_out_V_pixel_35_luma_blk_n;
reg    strm_out_V_pixel_36_luma_blk_n;
reg    strm_out_V_pixel_37_luma_blk_n;
reg    strm_out_V_pixel_38_luma_blk_n;
reg    strm_out_V_pixel_39_luma_blk_n;
reg    strm_out_V_pixel_40_luma_blk_n;
reg    strm_out_V_pixel_41_luma_blk_n;
reg    strm_out_V_pixel_42_luma_blk_n;
reg    strm_out_V_pixel_43_luma_blk_n;
reg    strm_out_V_pixel_44_luma_blk_n;
reg    strm_out_V_pixel_45_luma_blk_n;
reg    strm_out_V_pixel_46_luma_blk_n;
reg    strm_out_V_pixel_47_luma_blk_n;
reg    strm_out_V_pixel_48_luma_blk_n;
reg    strm_out_V_pixel_49_luma_blk_n;
reg    strm_out_V_pixel_50_luma_blk_n;
reg    strm_out_V_pixel_51_luma_blk_n;
reg    strm_out_V_pixel_52_luma_blk_n;
reg    strm_out_V_pixel_53_luma_blk_n;
reg    strm_out_V_pixel_54_luma_blk_n;
reg    strm_out_V_pixel_55_luma_blk_n;
reg    strm_out_V_pixel_56_luma_blk_n;
reg    strm_out_V_pixel_57_luma_blk_n;
reg    strm_out_V_pixel_58_luma_blk_n;
reg    strm_out_V_pixel_59_luma_blk_n;
reg    strm_out_V_pixel_60_luma_blk_n;
reg    strm_out_V_pixel_61_luma_blk_n;
reg    strm_out_V_pixel_62_luma_blk_n;
reg    strm_out_V_pixel_63_luma_blk_n;
reg    strm_out_V_pixel_64_luma_blk_n;
reg    strm_out_V_pixel_65_luma_blk_n;
reg    strm_out_V_pixel_66_luma_blk_n;
reg    strm_out_V_pixel_67_luma_blk_n;
reg    strm_out_V_pixel_68_luma_blk_n;
reg    strm_out_V_pixel_69_luma_blk_n;
reg    strm_out_V_pixel_70_luma_blk_n;
reg    dst_V_pixel_0_luma_blk_n;
reg    dst_V_pixel_1_luma_blk_n;
reg    dst_V_pixel_2_luma_blk_n;
reg    dst_V_pixel_3_luma_blk_n;
reg    dst_V_pixel_4_luma_blk_n;
reg    dst_V_pixel_5_luma_blk_n;
reg    dst_V_pixel_6_luma_blk_n;
reg    dst_V_pixel_7_luma_blk_n;
reg    dst_V_pixel_8_luma_blk_n;
reg    dst_V_pixel_9_luma_blk_n;
reg    dst_V_pixel_10_luma_blk_n;
reg    dst_V_pixel_11_luma_blk_n;
reg    dst_V_pixel_12_luma_blk_n;
reg    dst_V_pixel_13_luma_blk_n;
reg    dst_V_pixel_14_luma_blk_n;
reg    dst_V_pixel_15_luma_blk_n;
reg    dst_V_pixel_16_luma_blk_n;
reg    dst_V_pixel_17_luma_blk_n;
reg    dst_V_pixel_18_luma_blk_n;
reg    dst_V_pixel_19_luma_blk_n;
reg    dst_V_pixel_20_luma_blk_n;
reg    dst_V_pixel_21_luma_blk_n;
reg    dst_V_pixel_22_luma_blk_n;
reg    dst_V_pixel_23_luma_blk_n;
reg    dst_V_pixel_24_luma_blk_n;
reg    dst_V_pixel_25_luma_blk_n;
reg    dst_V_pixel_26_luma_blk_n;
reg    dst_V_pixel_27_luma_blk_n;
reg    dst_V_pixel_28_luma_blk_n;
reg    dst_V_pixel_29_luma_blk_n;
reg    dst_V_pixel_30_luma_blk_n;
reg    dst_V_pixel_31_luma_blk_n;
reg    dst_V_pixel_32_luma_blk_n;
reg    dst_V_pixel_33_luma_blk_n;
reg    dst_V_pixel_34_luma_blk_n;
reg    dst_V_pixel_35_luma_blk_n;
reg    dst_V_pixel_36_luma_blk_n;
reg    dst_V_pixel_37_luma_blk_n;
reg    dst_V_pixel_38_luma_blk_n;
reg    dst_V_pixel_39_luma_blk_n;
reg    dst_V_pixel_40_luma_blk_n;
reg    dst_V_pixel_41_luma_blk_n;
reg    dst_V_pixel_42_luma_blk_n;
reg    dst_V_pixel_43_luma_blk_n;
reg    dst_V_pixel_44_luma_blk_n;
reg    dst_V_pixel_45_luma_blk_n;
reg    dst_V_pixel_46_luma_blk_n;
reg    dst_V_pixel_47_luma_blk_n;
reg    dst_V_pixel_48_luma_blk_n;
reg    dst_V_pixel_49_luma_blk_n;
reg    dst_V_pixel_50_luma_blk_n;
reg    dst_V_pixel_51_luma_blk_n;
reg    dst_V_pixel_52_luma_blk_n;
reg    dst_V_pixel_53_luma_blk_n;
reg    dst_V_pixel_54_luma_blk_n;
reg    dst_V_pixel_55_luma_blk_n;
reg    dst_V_pixel_56_luma_blk_n;
reg    dst_V_pixel_57_luma_blk_n;
reg    dst_V_pixel_58_luma_blk_n;
reg    dst_V_pixel_59_luma_blk_n;
reg    dst_V_pixel_60_luma_blk_n;
reg    dst_V_pixel_61_luma_blk_n;
reg    dst_V_pixel_62_luma_blk_n;
reg    dst_V_pixel_63_luma_blk_n;
reg    dst_V_pixel_64_luma_blk_n;
reg    dst_V_pixel_65_luma_blk_n;
reg    dst_V_pixel_66_luma_blk_n;
reg    dst_V_pixel_67_luma_blk_n;
reg    dst_V_pixel_68_luma_blk_n;
reg    dst_V_pixel_69_luma_blk_n;
reg    dst_V_pixel_70_luma_blk_n;
wire   [8:0] i_fu_1828_p2;
wire    strm_out_V_pixel_1_luma0_status;
wire    dst_V_pixel_1_luma1_status;
reg    ap_sig_757;
reg   [8:0] i_0_i1_reg_1811;
reg    ap_sig_767;
reg    strm_out_V_pixel_1_luma0_update;
reg    dst_V_pixel_1_luma1_update;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'b1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_757 & ~(exitcond4_i1_fu_1822_p2 == 1'b0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_767)) begin
        i_0_i1_reg_1811 <= ap_const_lv9_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0) & ~ap_sig_757)) begin
        i_0_i1_reg_1811 <= i_fu_1828_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_757 & ~(exitcond4_i1_fu_1822_p2 == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_757 & ~(exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_20) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_601) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_0_luma_blk_n = dst_V_pixel_0_luma_full_n;
    end else begin
        dst_V_pixel_0_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_10_luma_blk_n = dst_V_pixel_10_luma_full_n;
    end else begin
        dst_V_pixel_10_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_11_luma_blk_n = dst_V_pixel_11_luma_full_n;
    end else begin
        dst_V_pixel_11_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_12_luma_blk_n = dst_V_pixel_12_luma_full_n;
    end else begin
        dst_V_pixel_12_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_13_luma_blk_n = dst_V_pixel_13_luma_full_n;
    end else begin
        dst_V_pixel_13_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_14_luma_blk_n = dst_V_pixel_14_luma_full_n;
    end else begin
        dst_V_pixel_14_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_15_luma_blk_n = dst_V_pixel_15_luma_full_n;
    end else begin
        dst_V_pixel_15_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_16_luma_blk_n = dst_V_pixel_16_luma_full_n;
    end else begin
        dst_V_pixel_16_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_17_luma_blk_n = dst_V_pixel_17_luma_full_n;
    end else begin
        dst_V_pixel_17_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_18_luma_blk_n = dst_V_pixel_18_luma_full_n;
    end else begin
        dst_V_pixel_18_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_19_luma_blk_n = dst_V_pixel_19_luma_full_n;
    end else begin
        dst_V_pixel_19_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0) & ~ap_sig_757)) begin
        dst_V_pixel_1_luma1_update = 1'b1;
    end else begin
        dst_V_pixel_1_luma1_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_1_luma_blk_n = dst_V_pixel_1_luma_full_n;
    end else begin
        dst_V_pixel_1_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_20_luma_blk_n = dst_V_pixel_20_luma_full_n;
    end else begin
        dst_V_pixel_20_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_21_luma_blk_n = dst_V_pixel_21_luma_full_n;
    end else begin
        dst_V_pixel_21_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_22_luma_blk_n = dst_V_pixel_22_luma_full_n;
    end else begin
        dst_V_pixel_22_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_23_luma_blk_n = dst_V_pixel_23_luma_full_n;
    end else begin
        dst_V_pixel_23_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_24_luma_blk_n = dst_V_pixel_24_luma_full_n;
    end else begin
        dst_V_pixel_24_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_25_luma_blk_n = dst_V_pixel_25_luma_full_n;
    end else begin
        dst_V_pixel_25_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_26_luma_blk_n = dst_V_pixel_26_luma_full_n;
    end else begin
        dst_V_pixel_26_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_27_luma_blk_n = dst_V_pixel_27_luma_full_n;
    end else begin
        dst_V_pixel_27_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_28_luma_blk_n = dst_V_pixel_28_luma_full_n;
    end else begin
        dst_V_pixel_28_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_29_luma_blk_n = dst_V_pixel_29_luma_full_n;
    end else begin
        dst_V_pixel_29_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_2_luma_blk_n = dst_V_pixel_2_luma_full_n;
    end else begin
        dst_V_pixel_2_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_30_luma_blk_n = dst_V_pixel_30_luma_full_n;
    end else begin
        dst_V_pixel_30_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_31_luma_blk_n = dst_V_pixel_31_luma_full_n;
    end else begin
        dst_V_pixel_31_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_32_luma_blk_n = dst_V_pixel_32_luma_full_n;
    end else begin
        dst_V_pixel_32_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_33_luma_blk_n = dst_V_pixel_33_luma_full_n;
    end else begin
        dst_V_pixel_33_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_34_luma_blk_n = dst_V_pixel_34_luma_full_n;
    end else begin
        dst_V_pixel_34_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_35_luma_blk_n = dst_V_pixel_35_luma_full_n;
    end else begin
        dst_V_pixel_35_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_36_luma_blk_n = dst_V_pixel_36_luma_full_n;
    end else begin
        dst_V_pixel_36_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_37_luma_blk_n = dst_V_pixel_37_luma_full_n;
    end else begin
        dst_V_pixel_37_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_38_luma_blk_n = dst_V_pixel_38_luma_full_n;
    end else begin
        dst_V_pixel_38_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_39_luma_blk_n = dst_V_pixel_39_luma_full_n;
    end else begin
        dst_V_pixel_39_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_3_luma_blk_n = dst_V_pixel_3_luma_full_n;
    end else begin
        dst_V_pixel_3_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_40_luma_blk_n = dst_V_pixel_40_luma_full_n;
    end else begin
        dst_V_pixel_40_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_41_luma_blk_n = dst_V_pixel_41_luma_full_n;
    end else begin
        dst_V_pixel_41_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_42_luma_blk_n = dst_V_pixel_42_luma_full_n;
    end else begin
        dst_V_pixel_42_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_43_luma_blk_n = dst_V_pixel_43_luma_full_n;
    end else begin
        dst_V_pixel_43_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_44_luma_blk_n = dst_V_pixel_44_luma_full_n;
    end else begin
        dst_V_pixel_44_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_45_luma_blk_n = dst_V_pixel_45_luma_full_n;
    end else begin
        dst_V_pixel_45_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_46_luma_blk_n = dst_V_pixel_46_luma_full_n;
    end else begin
        dst_V_pixel_46_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_47_luma_blk_n = dst_V_pixel_47_luma_full_n;
    end else begin
        dst_V_pixel_47_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_48_luma_blk_n = dst_V_pixel_48_luma_full_n;
    end else begin
        dst_V_pixel_48_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_49_luma_blk_n = dst_V_pixel_49_luma_full_n;
    end else begin
        dst_V_pixel_49_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_4_luma_blk_n = dst_V_pixel_4_luma_full_n;
    end else begin
        dst_V_pixel_4_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_50_luma_blk_n = dst_V_pixel_50_luma_full_n;
    end else begin
        dst_V_pixel_50_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_51_luma_blk_n = dst_V_pixel_51_luma_full_n;
    end else begin
        dst_V_pixel_51_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_52_luma_blk_n = dst_V_pixel_52_luma_full_n;
    end else begin
        dst_V_pixel_52_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_53_luma_blk_n = dst_V_pixel_53_luma_full_n;
    end else begin
        dst_V_pixel_53_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_54_luma_blk_n = dst_V_pixel_54_luma_full_n;
    end else begin
        dst_V_pixel_54_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_55_luma_blk_n = dst_V_pixel_55_luma_full_n;
    end else begin
        dst_V_pixel_55_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_56_luma_blk_n = dst_V_pixel_56_luma_full_n;
    end else begin
        dst_V_pixel_56_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_57_luma_blk_n = dst_V_pixel_57_luma_full_n;
    end else begin
        dst_V_pixel_57_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_58_luma_blk_n = dst_V_pixel_58_luma_full_n;
    end else begin
        dst_V_pixel_58_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_59_luma_blk_n = dst_V_pixel_59_luma_full_n;
    end else begin
        dst_V_pixel_59_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_5_luma_blk_n = dst_V_pixel_5_luma_full_n;
    end else begin
        dst_V_pixel_5_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_60_luma_blk_n = dst_V_pixel_60_luma_full_n;
    end else begin
        dst_V_pixel_60_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_61_luma_blk_n = dst_V_pixel_61_luma_full_n;
    end else begin
        dst_V_pixel_61_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_62_luma_blk_n = dst_V_pixel_62_luma_full_n;
    end else begin
        dst_V_pixel_62_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_63_luma_blk_n = dst_V_pixel_63_luma_full_n;
    end else begin
        dst_V_pixel_63_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_64_luma_blk_n = dst_V_pixel_64_luma_full_n;
    end else begin
        dst_V_pixel_64_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_65_luma_blk_n = dst_V_pixel_65_luma_full_n;
    end else begin
        dst_V_pixel_65_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_66_luma_blk_n = dst_V_pixel_66_luma_full_n;
    end else begin
        dst_V_pixel_66_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_67_luma_blk_n = dst_V_pixel_67_luma_full_n;
    end else begin
        dst_V_pixel_67_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_68_luma_blk_n = dst_V_pixel_68_luma_full_n;
    end else begin
        dst_V_pixel_68_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_69_luma_blk_n = dst_V_pixel_69_luma_full_n;
    end else begin
        dst_V_pixel_69_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_6_luma_blk_n = dst_V_pixel_6_luma_full_n;
    end else begin
        dst_V_pixel_6_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_70_luma_blk_n = dst_V_pixel_70_luma_full_n;
    end else begin
        dst_V_pixel_70_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_7_luma_blk_n = dst_V_pixel_7_luma_full_n;
    end else begin
        dst_V_pixel_7_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_8_luma_blk_n = dst_V_pixel_8_luma_full_n;
    end else begin
        dst_V_pixel_8_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        dst_V_pixel_9_luma_blk_n = dst_V_pixel_9_luma_full_n;
    end else begin
        dst_V_pixel_9_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_0_luma_blk_n = strm_out_V_pixel_0_luma_empty_n;
    end else begin
        strm_out_V_pixel_0_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_10_luma_blk_n = strm_out_V_pixel_10_luma_empty_n;
    end else begin
        strm_out_V_pixel_10_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_11_luma_blk_n = strm_out_V_pixel_11_luma_empty_n;
    end else begin
        strm_out_V_pixel_11_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_12_luma_blk_n = strm_out_V_pixel_12_luma_empty_n;
    end else begin
        strm_out_V_pixel_12_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_13_luma_blk_n = strm_out_V_pixel_13_luma_empty_n;
    end else begin
        strm_out_V_pixel_13_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_14_luma_blk_n = strm_out_V_pixel_14_luma_empty_n;
    end else begin
        strm_out_V_pixel_14_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_15_luma_blk_n = strm_out_V_pixel_15_luma_empty_n;
    end else begin
        strm_out_V_pixel_15_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_16_luma_blk_n = strm_out_V_pixel_16_luma_empty_n;
    end else begin
        strm_out_V_pixel_16_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_17_luma_blk_n = strm_out_V_pixel_17_luma_empty_n;
    end else begin
        strm_out_V_pixel_17_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_18_luma_blk_n = strm_out_V_pixel_18_luma_empty_n;
    end else begin
        strm_out_V_pixel_18_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_19_luma_blk_n = strm_out_V_pixel_19_luma_empty_n;
    end else begin
        strm_out_V_pixel_19_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0) & ~ap_sig_757)) begin
        strm_out_V_pixel_1_luma0_update = 1'b1;
    end else begin
        strm_out_V_pixel_1_luma0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_1_luma_blk_n = strm_out_V_pixel_1_luma_empty_n;
    end else begin
        strm_out_V_pixel_1_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_20_luma_blk_n = strm_out_V_pixel_20_luma_empty_n;
    end else begin
        strm_out_V_pixel_20_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_21_luma_blk_n = strm_out_V_pixel_21_luma_empty_n;
    end else begin
        strm_out_V_pixel_21_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_22_luma_blk_n = strm_out_V_pixel_22_luma_empty_n;
    end else begin
        strm_out_V_pixel_22_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_23_luma_blk_n = strm_out_V_pixel_23_luma_empty_n;
    end else begin
        strm_out_V_pixel_23_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_24_luma_blk_n = strm_out_V_pixel_24_luma_empty_n;
    end else begin
        strm_out_V_pixel_24_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_25_luma_blk_n = strm_out_V_pixel_25_luma_empty_n;
    end else begin
        strm_out_V_pixel_25_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_26_luma_blk_n = strm_out_V_pixel_26_luma_empty_n;
    end else begin
        strm_out_V_pixel_26_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_27_luma_blk_n = strm_out_V_pixel_27_luma_empty_n;
    end else begin
        strm_out_V_pixel_27_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_28_luma_blk_n = strm_out_V_pixel_28_luma_empty_n;
    end else begin
        strm_out_V_pixel_28_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_29_luma_blk_n = strm_out_V_pixel_29_luma_empty_n;
    end else begin
        strm_out_V_pixel_29_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_2_luma_blk_n = strm_out_V_pixel_2_luma_empty_n;
    end else begin
        strm_out_V_pixel_2_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_30_luma_blk_n = strm_out_V_pixel_30_luma_empty_n;
    end else begin
        strm_out_V_pixel_30_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_31_luma_blk_n = strm_out_V_pixel_31_luma_empty_n;
    end else begin
        strm_out_V_pixel_31_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_32_luma_blk_n = strm_out_V_pixel_32_luma_empty_n;
    end else begin
        strm_out_V_pixel_32_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_33_luma_blk_n = strm_out_V_pixel_33_luma_empty_n;
    end else begin
        strm_out_V_pixel_33_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_34_luma_blk_n = strm_out_V_pixel_34_luma_empty_n;
    end else begin
        strm_out_V_pixel_34_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_35_luma_blk_n = strm_out_V_pixel_35_luma_empty_n;
    end else begin
        strm_out_V_pixel_35_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_36_luma_blk_n = strm_out_V_pixel_36_luma_empty_n;
    end else begin
        strm_out_V_pixel_36_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_37_luma_blk_n = strm_out_V_pixel_37_luma_empty_n;
    end else begin
        strm_out_V_pixel_37_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_38_luma_blk_n = strm_out_V_pixel_38_luma_empty_n;
    end else begin
        strm_out_V_pixel_38_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_39_luma_blk_n = strm_out_V_pixel_39_luma_empty_n;
    end else begin
        strm_out_V_pixel_39_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_3_luma_blk_n = strm_out_V_pixel_3_luma_empty_n;
    end else begin
        strm_out_V_pixel_3_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_40_luma_blk_n = strm_out_V_pixel_40_luma_empty_n;
    end else begin
        strm_out_V_pixel_40_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_41_luma_blk_n = strm_out_V_pixel_41_luma_empty_n;
    end else begin
        strm_out_V_pixel_41_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_42_luma_blk_n = strm_out_V_pixel_42_luma_empty_n;
    end else begin
        strm_out_V_pixel_42_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_43_luma_blk_n = strm_out_V_pixel_43_luma_empty_n;
    end else begin
        strm_out_V_pixel_43_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_44_luma_blk_n = strm_out_V_pixel_44_luma_empty_n;
    end else begin
        strm_out_V_pixel_44_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_45_luma_blk_n = strm_out_V_pixel_45_luma_empty_n;
    end else begin
        strm_out_V_pixel_45_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_46_luma_blk_n = strm_out_V_pixel_46_luma_empty_n;
    end else begin
        strm_out_V_pixel_46_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_47_luma_blk_n = strm_out_V_pixel_47_luma_empty_n;
    end else begin
        strm_out_V_pixel_47_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_48_luma_blk_n = strm_out_V_pixel_48_luma_empty_n;
    end else begin
        strm_out_V_pixel_48_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_49_luma_blk_n = strm_out_V_pixel_49_luma_empty_n;
    end else begin
        strm_out_V_pixel_49_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_4_luma_blk_n = strm_out_V_pixel_4_luma_empty_n;
    end else begin
        strm_out_V_pixel_4_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_50_luma_blk_n = strm_out_V_pixel_50_luma_empty_n;
    end else begin
        strm_out_V_pixel_50_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_51_luma_blk_n = strm_out_V_pixel_51_luma_empty_n;
    end else begin
        strm_out_V_pixel_51_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_52_luma_blk_n = strm_out_V_pixel_52_luma_empty_n;
    end else begin
        strm_out_V_pixel_52_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_53_luma_blk_n = strm_out_V_pixel_53_luma_empty_n;
    end else begin
        strm_out_V_pixel_53_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_54_luma_blk_n = strm_out_V_pixel_54_luma_empty_n;
    end else begin
        strm_out_V_pixel_54_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_55_luma_blk_n = strm_out_V_pixel_55_luma_empty_n;
    end else begin
        strm_out_V_pixel_55_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_56_luma_blk_n = strm_out_V_pixel_56_luma_empty_n;
    end else begin
        strm_out_V_pixel_56_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_57_luma_blk_n = strm_out_V_pixel_57_luma_empty_n;
    end else begin
        strm_out_V_pixel_57_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_58_luma_blk_n = strm_out_V_pixel_58_luma_empty_n;
    end else begin
        strm_out_V_pixel_58_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_59_luma_blk_n = strm_out_V_pixel_59_luma_empty_n;
    end else begin
        strm_out_V_pixel_59_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_5_luma_blk_n = strm_out_V_pixel_5_luma_empty_n;
    end else begin
        strm_out_V_pixel_5_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_60_luma_blk_n = strm_out_V_pixel_60_luma_empty_n;
    end else begin
        strm_out_V_pixel_60_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_61_luma_blk_n = strm_out_V_pixel_61_luma_empty_n;
    end else begin
        strm_out_V_pixel_61_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_62_luma_blk_n = strm_out_V_pixel_62_luma_empty_n;
    end else begin
        strm_out_V_pixel_62_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_63_luma_blk_n = strm_out_V_pixel_63_luma_empty_n;
    end else begin
        strm_out_V_pixel_63_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_64_luma_blk_n = strm_out_V_pixel_64_luma_empty_n;
    end else begin
        strm_out_V_pixel_64_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_65_luma_blk_n = strm_out_V_pixel_65_luma_empty_n;
    end else begin
        strm_out_V_pixel_65_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_66_luma_blk_n = strm_out_V_pixel_66_luma_empty_n;
    end else begin
        strm_out_V_pixel_66_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_67_luma_blk_n = strm_out_V_pixel_67_luma_empty_n;
    end else begin
        strm_out_V_pixel_67_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_68_luma_blk_n = strm_out_V_pixel_68_luma_empty_n;
    end else begin
        strm_out_V_pixel_68_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_69_luma_blk_n = strm_out_V_pixel_69_luma_empty_n;
    end else begin
        strm_out_V_pixel_69_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_6_luma_blk_n = strm_out_V_pixel_6_luma_empty_n;
    end else begin
        strm_out_V_pixel_6_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_70_luma_blk_n = strm_out_V_pixel_70_luma_empty_n;
    end else begin
        strm_out_V_pixel_70_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_7_luma_blk_n = strm_out_V_pixel_7_luma_empty_n;
    end else begin
        strm_out_V_pixel_7_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_8_luma_blk_n = strm_out_V_pixel_8_luma_empty_n;
    end else begin
        strm_out_V_pixel_8_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond4_i1_fu_1822_p2 == 1'b0))) begin
        strm_out_V_pixel_9_luma_blk_n = strm_out_V_pixel_9_luma_empty_n;
    end else begin
        strm_out_V_pixel_9_luma_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~ap_sig_767) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((~ap_sig_757 & ~(exitcond4_i1_fu_1822_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else if (((exitcond4_i1_fu_1822_p2 == 1'b0) & ~ap_sig_757)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_20 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_601 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_757 = (((exitcond4_i1_fu_1822_p2 == 1'b0) & (strm_out_V_pixel_1_luma0_status == 1'b0)) | ((exitcond4_i1_fu_1822_p2 == 1'b0) & (dst_V_pixel_1_luma1_status == 1'b0)));
end

always @ (*) begin
    ap_sig_767 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign dst_V_pixel_0_luma_din = strm_out_V_pixel_0_luma_dout;

assign dst_V_pixel_0_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_10_luma_din = strm_out_V_pixel_10_luma_dout;

assign dst_V_pixel_10_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_11_luma_din = strm_out_V_pixel_11_luma_dout;

assign dst_V_pixel_11_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_12_luma_din = strm_out_V_pixel_12_luma_dout;

assign dst_V_pixel_12_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_13_luma_din = strm_out_V_pixel_13_luma_dout;

assign dst_V_pixel_13_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_14_luma_din = strm_out_V_pixel_14_luma_dout;

assign dst_V_pixel_14_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_15_luma_din = strm_out_V_pixel_15_luma_dout;

assign dst_V_pixel_15_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_16_luma_din = strm_out_V_pixel_16_luma_dout;

assign dst_V_pixel_16_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_17_luma_din = strm_out_V_pixel_17_luma_dout;

assign dst_V_pixel_17_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_18_luma_din = strm_out_V_pixel_18_luma_dout;

assign dst_V_pixel_18_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_19_luma_din = strm_out_V_pixel_19_luma_dout;

assign dst_V_pixel_19_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_1_luma1_status = (dst_V_pixel_0_luma_full_n & dst_V_pixel_1_luma_full_n & dst_V_pixel_2_luma_full_n & dst_V_pixel_3_luma_full_n & dst_V_pixel_4_luma_full_n & dst_V_pixel_5_luma_full_n & dst_V_pixel_6_luma_full_n & dst_V_pixel_7_luma_full_n & dst_V_pixel_8_luma_full_n & dst_V_pixel_9_luma_full_n & dst_V_pixel_10_luma_full_n & dst_V_pixel_11_luma_full_n & dst_V_pixel_12_luma_full_n & dst_V_pixel_13_luma_full_n & dst_V_pixel_14_luma_full_n & dst_V_pixel_15_luma_full_n & dst_V_pixel_16_luma_full_n & dst_V_pixel_17_luma_full_n & dst_V_pixel_18_luma_full_n & dst_V_pixel_19_luma_full_n & dst_V_pixel_20_luma_full_n & dst_V_pixel_21_luma_full_n & dst_V_pixel_22_luma_full_n & dst_V_pixel_23_luma_full_n & dst_V_pixel_24_luma_full_n & dst_V_pixel_25_luma_full_n & dst_V_pixel_26_luma_full_n & dst_V_pixel_27_luma_full_n & dst_V_pixel_28_luma_full_n & dst_V_pixel_29_luma_full_n & dst_V_pixel_30_luma_full_n & dst_V_pixel_31_luma_full_n & dst_V_pixel_32_luma_full_n & dst_V_pixel_33_luma_full_n & dst_V_pixel_34_luma_full_n & dst_V_pixel_35_luma_full_n & dst_V_pixel_36_luma_full_n & dst_V_pixel_37_luma_full_n & dst_V_pixel_38_luma_full_n & dst_V_pixel_39_luma_full_n & dst_V_pixel_40_luma_full_n & dst_V_pixel_41_luma_full_n & dst_V_pixel_42_luma_full_n & dst_V_pixel_43_luma_full_n & dst_V_pixel_44_luma_full_n & dst_V_pixel_45_luma_full_n & dst_V_pixel_46_luma_full_n & dst_V_pixel_47_luma_full_n & dst_V_pixel_48_luma_full_n & dst_V_pixel_49_luma_full_n & dst_V_pixel_50_luma_full_n & dst_V_pixel_51_luma_full_n & dst_V_pixel_52_luma_full_n & dst_V_pixel_53_luma_full_n & dst_V_pixel_54_luma_full_n & dst_V_pixel_55_luma_full_n & dst_V_pixel_56_luma_full_n & dst_V_pixel_57_luma_full_n & dst_V_pixel_58_luma_full_n & dst_V_pixel_59_luma_full_n & dst_V_pixel_60_luma_full_n & dst_V_pixel_61_luma_full_n & dst_V_pixel_62_luma_full_n & dst_V_pixel_63_luma_full_n & dst_V_pixel_64_luma_full_n & dst_V_pixel_65_luma_full_n & dst_V_pixel_66_luma_full_n & dst_V_pixel_67_luma_full_n & dst_V_pixel_68_luma_full_n & dst_V_pixel_69_luma_full_n & dst_V_pixel_70_luma_full_n);

assign dst_V_pixel_1_luma_din = strm_out_V_pixel_1_luma_dout;

assign dst_V_pixel_1_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_20_luma_din = strm_out_V_pixel_20_luma_dout;

assign dst_V_pixel_20_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_21_luma_din = strm_out_V_pixel_21_luma_dout;

assign dst_V_pixel_21_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_22_luma_din = strm_out_V_pixel_22_luma_dout;

assign dst_V_pixel_22_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_23_luma_din = strm_out_V_pixel_23_luma_dout;

assign dst_V_pixel_23_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_24_luma_din = strm_out_V_pixel_24_luma_dout;

assign dst_V_pixel_24_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_25_luma_din = strm_out_V_pixel_25_luma_dout;

assign dst_V_pixel_25_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_26_luma_din = strm_out_V_pixel_26_luma_dout;

assign dst_V_pixel_26_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_27_luma_din = strm_out_V_pixel_27_luma_dout;

assign dst_V_pixel_27_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_28_luma_din = strm_out_V_pixel_28_luma_dout;

assign dst_V_pixel_28_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_29_luma_din = strm_out_V_pixel_29_luma_dout;

assign dst_V_pixel_29_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_2_luma_din = strm_out_V_pixel_2_luma_dout;

assign dst_V_pixel_2_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_30_luma_din = strm_out_V_pixel_30_luma_dout;

assign dst_V_pixel_30_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_31_luma_din = strm_out_V_pixel_31_luma_dout;

assign dst_V_pixel_31_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_32_luma_din = strm_out_V_pixel_32_luma_dout;

assign dst_V_pixel_32_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_33_luma_din = strm_out_V_pixel_33_luma_dout;

assign dst_V_pixel_33_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_34_luma_din = strm_out_V_pixel_34_luma_dout;

assign dst_V_pixel_34_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_35_luma_din = strm_out_V_pixel_35_luma_dout;

assign dst_V_pixel_35_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_36_luma_din = strm_out_V_pixel_36_luma_dout;

assign dst_V_pixel_36_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_37_luma_din = strm_out_V_pixel_37_luma_dout;

assign dst_V_pixel_37_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_38_luma_din = strm_out_V_pixel_38_luma_dout;

assign dst_V_pixel_38_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_39_luma_din = strm_out_V_pixel_39_luma_dout;

assign dst_V_pixel_39_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_3_luma_din = strm_out_V_pixel_3_luma_dout;

assign dst_V_pixel_3_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_40_luma_din = strm_out_V_pixel_40_luma_dout;

assign dst_V_pixel_40_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_41_luma_din = strm_out_V_pixel_41_luma_dout;

assign dst_V_pixel_41_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_42_luma_din = strm_out_V_pixel_42_luma_dout;

assign dst_V_pixel_42_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_43_luma_din = strm_out_V_pixel_43_luma_dout;

assign dst_V_pixel_43_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_44_luma_din = strm_out_V_pixel_44_luma_dout;

assign dst_V_pixel_44_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_45_luma_din = strm_out_V_pixel_45_luma_dout;

assign dst_V_pixel_45_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_46_luma_din = strm_out_V_pixel_46_luma_dout;

assign dst_V_pixel_46_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_47_luma_din = strm_out_V_pixel_47_luma_dout;

assign dst_V_pixel_47_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_48_luma_din = strm_out_V_pixel_48_luma_dout;

assign dst_V_pixel_48_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_49_luma_din = strm_out_V_pixel_49_luma_dout;

assign dst_V_pixel_49_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_4_luma_din = strm_out_V_pixel_4_luma_dout;

assign dst_V_pixel_4_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_50_luma_din = strm_out_V_pixel_50_luma_dout;

assign dst_V_pixel_50_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_51_luma_din = strm_out_V_pixel_51_luma_dout;

assign dst_V_pixel_51_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_52_luma_din = strm_out_V_pixel_52_luma_dout;

assign dst_V_pixel_52_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_53_luma_din = strm_out_V_pixel_53_luma_dout;

assign dst_V_pixel_53_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_54_luma_din = strm_out_V_pixel_54_luma_dout;

assign dst_V_pixel_54_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_55_luma_din = strm_out_V_pixel_55_luma_dout;

assign dst_V_pixel_55_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_56_luma_din = strm_out_V_pixel_56_luma_dout;

assign dst_V_pixel_56_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_57_luma_din = strm_out_V_pixel_57_luma_dout;

assign dst_V_pixel_57_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_58_luma_din = strm_out_V_pixel_58_luma_dout;

assign dst_V_pixel_58_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_59_luma_din = strm_out_V_pixel_59_luma_dout;

assign dst_V_pixel_59_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_5_luma_din = strm_out_V_pixel_5_luma_dout;

assign dst_V_pixel_5_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_60_luma_din = strm_out_V_pixel_60_luma_dout;

assign dst_V_pixel_60_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_61_luma_din = strm_out_V_pixel_61_luma_dout;

assign dst_V_pixel_61_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_62_luma_din = strm_out_V_pixel_62_luma_dout;

assign dst_V_pixel_62_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_63_luma_din = strm_out_V_pixel_63_luma_dout;

assign dst_V_pixel_63_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_64_luma_din = strm_out_V_pixel_64_luma_dout;

assign dst_V_pixel_64_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_65_luma_din = strm_out_V_pixel_65_luma_dout;

assign dst_V_pixel_65_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_66_luma_din = strm_out_V_pixel_66_luma_dout;

assign dst_V_pixel_66_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_67_luma_din = strm_out_V_pixel_67_luma_dout;

assign dst_V_pixel_67_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_68_luma_din = strm_out_V_pixel_68_luma_dout;

assign dst_V_pixel_68_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_69_luma_din = strm_out_V_pixel_69_luma_dout;

assign dst_V_pixel_69_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_6_luma_din = strm_out_V_pixel_6_luma_dout;

assign dst_V_pixel_6_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_70_luma_din = strm_out_V_pixel_70_luma_dout;

assign dst_V_pixel_70_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_7_luma_din = strm_out_V_pixel_7_luma_dout;

assign dst_V_pixel_7_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_8_luma_din = strm_out_V_pixel_8_luma_dout;

assign dst_V_pixel_8_luma_write = dst_V_pixel_1_luma1_update;

assign dst_V_pixel_9_luma_din = strm_out_V_pixel_9_luma_dout;

assign dst_V_pixel_9_luma_write = dst_V_pixel_1_luma1_update;

assign exitcond4_i1_fu_1822_p2 = ((i_0_i1_reg_1811 == ap_const_lv9_1E0) ? 1'b1 : 1'b0);

assign i_fu_1828_p2 = (i_0_i1_reg_1811 + ap_const_lv9_1);

assign strm_out_V_pixel_0_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_10_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_11_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_12_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_13_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_14_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_15_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_16_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_17_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_18_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_19_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_1_luma0_status = (strm_out_V_pixel_0_luma_empty_n & strm_out_V_pixel_1_luma_empty_n & strm_out_V_pixel_2_luma_empty_n & strm_out_V_pixel_3_luma_empty_n & strm_out_V_pixel_4_luma_empty_n & strm_out_V_pixel_5_luma_empty_n & strm_out_V_pixel_6_luma_empty_n & strm_out_V_pixel_7_luma_empty_n & strm_out_V_pixel_8_luma_empty_n & strm_out_V_pixel_9_luma_empty_n & strm_out_V_pixel_10_luma_empty_n & strm_out_V_pixel_11_luma_empty_n & strm_out_V_pixel_12_luma_empty_n & strm_out_V_pixel_13_luma_empty_n & strm_out_V_pixel_14_luma_empty_n & strm_out_V_pixel_15_luma_empty_n & strm_out_V_pixel_16_luma_empty_n & strm_out_V_pixel_17_luma_empty_n & strm_out_V_pixel_18_luma_empty_n & strm_out_V_pixel_19_luma_empty_n & strm_out_V_pixel_20_luma_empty_n & strm_out_V_pixel_21_luma_empty_n & strm_out_V_pixel_22_luma_empty_n & strm_out_V_pixel_23_luma_empty_n & strm_out_V_pixel_24_luma_empty_n & strm_out_V_pixel_25_luma_empty_n & strm_out_V_pixel_26_luma_empty_n & strm_out_V_pixel_27_luma_empty_n & strm_out_V_pixel_28_luma_empty_n & strm_out_V_pixel_29_luma_empty_n & strm_out_V_pixel_30_luma_empty_n & strm_out_V_pixel_31_luma_empty_n & strm_out_V_pixel_32_luma_empty_n & strm_out_V_pixel_33_luma_empty_n & strm_out_V_pixel_34_luma_empty_n & strm_out_V_pixel_35_luma_empty_n & strm_out_V_pixel_36_luma_empty_n & strm_out_V_pixel_37_luma_empty_n & strm_out_V_pixel_38_luma_empty_n & strm_out_V_pixel_39_luma_empty_n & strm_out_V_pixel_40_luma_empty_n & strm_out_V_pixel_41_luma_empty_n & strm_out_V_pixel_42_luma_empty_n & strm_out_V_pixel_43_luma_empty_n & strm_out_V_pixel_44_luma_empty_n & strm_out_V_pixel_45_luma_empty_n & strm_out_V_pixel_46_luma_empty_n & strm_out_V_pixel_47_luma_empty_n & strm_out_V_pixel_48_luma_empty_n & strm_out_V_pixel_49_luma_empty_n & strm_out_V_pixel_50_luma_empty_n & strm_out_V_pixel_51_luma_empty_n & strm_out_V_pixel_52_luma_empty_n & strm_out_V_pixel_53_luma_empty_n & strm_out_V_pixel_54_luma_empty_n & strm_out_V_pixel_55_luma_empty_n & strm_out_V_pixel_56_luma_empty_n & strm_out_V_pixel_57_luma_empty_n & strm_out_V_pixel_58_luma_empty_n & strm_out_V_pixel_59_luma_empty_n & strm_out_V_pixel_60_luma_empty_n & strm_out_V_pixel_61_luma_empty_n & strm_out_V_pixel_62_luma_empty_n & strm_out_V_pixel_63_luma_empty_n & strm_out_V_pixel_64_luma_empty_n & strm_out_V_pixel_65_luma_empty_n & strm_out_V_pixel_66_luma_empty_n & strm_out_V_pixel_67_luma_empty_n & strm_out_V_pixel_68_luma_empty_n & strm_out_V_pixel_69_luma_empty_n & strm_out_V_pixel_70_luma_empty_n);

assign strm_out_V_pixel_1_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_20_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_21_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_22_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_23_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_24_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_25_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_26_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_27_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_28_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_29_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_2_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_30_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_31_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_32_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_33_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_34_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_35_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_36_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_37_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_38_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_39_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_3_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_40_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_41_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_42_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_43_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_44_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_45_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_46_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_47_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_48_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_49_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_4_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_50_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_51_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_52_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_53_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_54_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_55_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_56_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_57_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_58_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_59_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_5_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_60_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_61_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_62_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_63_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_64_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_65_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_66_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_67_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_68_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_69_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_6_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_70_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_7_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_8_luma_read = strm_out_V_pixel_1_luma0_update;

assign strm_out_V_pixel_9_luma_read = strm_out_V_pixel_1_luma0_update;

endmodule //Sobel_vxConvertColor_tile_Loop_l1_pr
