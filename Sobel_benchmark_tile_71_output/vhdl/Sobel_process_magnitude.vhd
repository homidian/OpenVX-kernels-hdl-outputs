-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Sobel_process_magnitude is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    real_data : IN STD_LOGIC_VECTOR (7 downto 0);
    imag_data : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (8 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of Sobel_process_magnitude is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_true : BOOLEAN := true;

    signal imag_data_read_reg_48 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_imag_data_read_reg_48_pp0_iter1 : STD_LOGIC_VECTOR (7 downto 0);
    signal real_data_read_reg_53 : STD_LOGIC_VECTOR (7 downto 0);
    signal grad_1_fu_28_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grad_1_reg_58 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_40_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sum32_reg_63 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_Sobel_fxp_sqrt_9_9_17_17_s_fu_20_ap_return : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_Sobel_fxp_sqrt_9_9_17_17_s_fu_20_ap_ce : STD_LOGIC;
    signal grad_1_fu_28_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal real_data_cast_fu_25_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grad_1_fu_28_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_40_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal imag_data_cast_fu_34_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_40_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_40_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_40_p20 : STD_LOGIC_VECTOR (16 downto 0);

    component Sobel_fxp_sqrt_9_9_17_17_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        in_val_V : IN STD_LOGIC_VECTOR (16 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (8 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component Sobel_mac_muladd_8ns_8ns_16ns_17_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;



begin
    grp_Sobel_fxp_sqrt_9_9_17_17_s_fu_20 : component Sobel_fxp_sqrt_9_9_17_17_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        in_val_V => sum32_reg_63,
        ap_return => grp_Sobel_fxp_sqrt_9_9_17_17_s_fu_20_ap_return,
        ap_ce => grp_Sobel_fxp_sqrt_9_9_17_17_s_fu_20_ap_ce);

    Sobel_mac_muladd_8ns_8ns_16ns_17_1_U4659 : component Sobel_mac_muladd_8ns_8ns_16ns_17_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 16,
        dout_WIDTH => 17)
    port map (
        din0 => grp_fu_40_p0,
        din1 => grp_fu_40_p1,
        din2 => grp_fu_40_p2,
        dout => grp_fu_40_p3);




    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                ap_reg_ppstg_imag_data_read_reg_48_pp0_iter1 <= imag_data_read_reg_48;
                grad_1_reg_58 <= grad_1_fu_28_p2;
                imag_data_read_reg_48 <= imag_data;
                real_data_read_reg_53 <= real_data;
                sum32_reg_63 <= grp_fu_40_p3;
            end if;
        end if;
    end process;
    ap_return <= grp_Sobel_fxp_sqrt_9_9_17_17_s_fu_20_ap_return;
    grad_1_fu_28_p0 <= real_data_cast_fu_25_p1(8 - 1 downto 0);
    grad_1_fu_28_p1 <= real_data_cast_fu_25_p1(8 - 1 downto 0);
    grad_1_fu_28_p2 <= std_logic_vector(resize(unsigned(grad_1_fu_28_p0) * unsigned(grad_1_fu_28_p1), 16));

    grp_Sobel_fxp_sqrt_9_9_17_17_s_fu_20_ap_ce_assign_proc : process(ap_ce)
    begin
        if (not((ap_const_logic_1 = ap_ce))) then 
            grp_Sobel_fxp_sqrt_9_9_17_17_s_fu_20_ap_ce <= ap_const_logic_0;
        else 
            grp_Sobel_fxp_sqrt_9_9_17_17_s_fu_20_ap_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_40_p0 <= imag_data_cast_fu_34_p1(8 - 1 downto 0);
    grp_fu_40_p1 <= imag_data_cast_fu_34_p1(8 - 1 downto 0);
    grp_fu_40_p2 <= grp_fu_40_p20(16 - 1 downto 0);
    grp_fu_40_p20 <= std_logic_vector(resize(unsigned(grad_1_reg_58),17));
    imag_data_cast_fu_34_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_imag_data_read_reg_48_pp0_iter1),16));
    real_data_cast_fu_25_p1 <= std_logic_vector(resize(unsigned(real_data_read_reg_53),16));
end behav;
