-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Sobel_vxConvertColor_tile_Loop_l1_pr is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    strm_out_V_pixel_0_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_0_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_0_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_1_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_1_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_1_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_2_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_2_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_2_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_3_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_3_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_3_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_4_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_4_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_4_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_5_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_5_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_5_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_6_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_6_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_6_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_7_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_7_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_7_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_8_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_8_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_8_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_9_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_9_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_9_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_10_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_10_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_10_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_11_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_11_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_11_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_12_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_12_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_12_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_13_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_13_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_13_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_14_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_14_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_14_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_15_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_15_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_15_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_16_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_16_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_16_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_17_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_17_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_17_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_18_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_18_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_18_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_19_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_19_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_19_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_20_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_20_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_20_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_21_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_21_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_21_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_22_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_22_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_22_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_23_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_23_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_23_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_24_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_24_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_24_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_25_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_25_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_25_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_26_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_26_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_26_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_27_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_27_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_27_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_28_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_28_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_28_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_29_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_29_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_29_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_30_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_30_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_30_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_31_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_31_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_31_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_32_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_32_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_32_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_33_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_33_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_33_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_34_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_34_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_34_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_35_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_35_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_35_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_36_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_36_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_36_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_37_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_37_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_37_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_38_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_38_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_38_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_39_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_39_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_39_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_40_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_40_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_40_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_41_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_41_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_41_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_42_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_42_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_42_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_43_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_43_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_43_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_44_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_44_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_44_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_45_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_45_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_45_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_46_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_46_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_46_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_47_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_47_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_47_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_48_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_48_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_48_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_49_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_49_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_49_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_50_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_50_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_50_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_51_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_51_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_51_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_52_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_52_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_52_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_53_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_53_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_53_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_54_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_54_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_54_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_55_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_55_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_55_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_56_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_56_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_56_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_57_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_57_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_57_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_58_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_58_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_58_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_59_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_59_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_59_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_60_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_60_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_60_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_61_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_61_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_61_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_62_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_62_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_62_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_63_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_63_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_63_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_64_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_64_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_64_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_65_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_65_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_65_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_66_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_66_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_66_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_67_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_67_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_67_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_68_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_68_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_68_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_69_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_69_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_69_luma_read : OUT STD_LOGIC;
    strm_out_V_pixel_70_luma_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    strm_out_V_pixel_70_luma_empty_n : IN STD_LOGIC;
    strm_out_V_pixel_70_luma_read : OUT STD_LOGIC;
    dst_V_pixel_0_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_0_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_0_luma_write : OUT STD_LOGIC;
    dst_V_pixel_1_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_1_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_1_luma_write : OUT STD_LOGIC;
    dst_V_pixel_2_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_2_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_2_luma_write : OUT STD_LOGIC;
    dst_V_pixel_3_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_3_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_3_luma_write : OUT STD_LOGIC;
    dst_V_pixel_4_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_4_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_4_luma_write : OUT STD_LOGIC;
    dst_V_pixel_5_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_5_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_5_luma_write : OUT STD_LOGIC;
    dst_V_pixel_6_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_6_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_6_luma_write : OUT STD_LOGIC;
    dst_V_pixel_7_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_7_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_7_luma_write : OUT STD_LOGIC;
    dst_V_pixel_8_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_8_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_8_luma_write : OUT STD_LOGIC;
    dst_V_pixel_9_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_9_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_9_luma_write : OUT STD_LOGIC;
    dst_V_pixel_10_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_10_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_10_luma_write : OUT STD_LOGIC;
    dst_V_pixel_11_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_11_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_11_luma_write : OUT STD_LOGIC;
    dst_V_pixel_12_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_12_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_12_luma_write : OUT STD_LOGIC;
    dst_V_pixel_13_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_13_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_13_luma_write : OUT STD_LOGIC;
    dst_V_pixel_14_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_14_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_14_luma_write : OUT STD_LOGIC;
    dst_V_pixel_15_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_15_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_15_luma_write : OUT STD_LOGIC;
    dst_V_pixel_16_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_16_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_16_luma_write : OUT STD_LOGIC;
    dst_V_pixel_17_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_17_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_17_luma_write : OUT STD_LOGIC;
    dst_V_pixel_18_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_18_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_18_luma_write : OUT STD_LOGIC;
    dst_V_pixel_19_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_19_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_19_luma_write : OUT STD_LOGIC;
    dst_V_pixel_20_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_20_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_20_luma_write : OUT STD_LOGIC;
    dst_V_pixel_21_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_21_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_21_luma_write : OUT STD_LOGIC;
    dst_V_pixel_22_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_22_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_22_luma_write : OUT STD_LOGIC;
    dst_V_pixel_23_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_23_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_23_luma_write : OUT STD_LOGIC;
    dst_V_pixel_24_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_24_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_24_luma_write : OUT STD_LOGIC;
    dst_V_pixel_25_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_25_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_25_luma_write : OUT STD_LOGIC;
    dst_V_pixel_26_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_26_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_26_luma_write : OUT STD_LOGIC;
    dst_V_pixel_27_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_27_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_27_luma_write : OUT STD_LOGIC;
    dst_V_pixel_28_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_28_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_28_luma_write : OUT STD_LOGIC;
    dst_V_pixel_29_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_29_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_29_luma_write : OUT STD_LOGIC;
    dst_V_pixel_30_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_30_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_30_luma_write : OUT STD_LOGIC;
    dst_V_pixel_31_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_31_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_31_luma_write : OUT STD_LOGIC;
    dst_V_pixel_32_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_32_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_32_luma_write : OUT STD_LOGIC;
    dst_V_pixel_33_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_33_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_33_luma_write : OUT STD_LOGIC;
    dst_V_pixel_34_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_34_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_34_luma_write : OUT STD_LOGIC;
    dst_V_pixel_35_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_35_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_35_luma_write : OUT STD_LOGIC;
    dst_V_pixel_36_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_36_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_36_luma_write : OUT STD_LOGIC;
    dst_V_pixel_37_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_37_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_37_luma_write : OUT STD_LOGIC;
    dst_V_pixel_38_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_38_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_38_luma_write : OUT STD_LOGIC;
    dst_V_pixel_39_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_39_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_39_luma_write : OUT STD_LOGIC;
    dst_V_pixel_40_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_40_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_40_luma_write : OUT STD_LOGIC;
    dst_V_pixel_41_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_41_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_41_luma_write : OUT STD_LOGIC;
    dst_V_pixel_42_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_42_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_42_luma_write : OUT STD_LOGIC;
    dst_V_pixel_43_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_43_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_43_luma_write : OUT STD_LOGIC;
    dst_V_pixel_44_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_44_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_44_luma_write : OUT STD_LOGIC;
    dst_V_pixel_45_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_45_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_45_luma_write : OUT STD_LOGIC;
    dst_V_pixel_46_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_46_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_46_luma_write : OUT STD_LOGIC;
    dst_V_pixel_47_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_47_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_47_luma_write : OUT STD_LOGIC;
    dst_V_pixel_48_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_48_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_48_luma_write : OUT STD_LOGIC;
    dst_V_pixel_49_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_49_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_49_luma_write : OUT STD_LOGIC;
    dst_V_pixel_50_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_50_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_50_luma_write : OUT STD_LOGIC;
    dst_V_pixel_51_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_51_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_51_luma_write : OUT STD_LOGIC;
    dst_V_pixel_52_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_52_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_52_luma_write : OUT STD_LOGIC;
    dst_V_pixel_53_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_53_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_53_luma_write : OUT STD_LOGIC;
    dst_V_pixel_54_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_54_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_54_luma_write : OUT STD_LOGIC;
    dst_V_pixel_55_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_55_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_55_luma_write : OUT STD_LOGIC;
    dst_V_pixel_56_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_56_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_56_luma_write : OUT STD_LOGIC;
    dst_V_pixel_57_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_57_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_57_luma_write : OUT STD_LOGIC;
    dst_V_pixel_58_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_58_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_58_luma_write : OUT STD_LOGIC;
    dst_V_pixel_59_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_59_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_59_luma_write : OUT STD_LOGIC;
    dst_V_pixel_60_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_60_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_60_luma_write : OUT STD_LOGIC;
    dst_V_pixel_61_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_61_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_61_luma_write : OUT STD_LOGIC;
    dst_V_pixel_62_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_62_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_62_luma_write : OUT STD_LOGIC;
    dst_V_pixel_63_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_63_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_63_luma_write : OUT STD_LOGIC;
    dst_V_pixel_64_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_64_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_64_luma_write : OUT STD_LOGIC;
    dst_V_pixel_65_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_65_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_65_luma_write : OUT STD_LOGIC;
    dst_V_pixel_66_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_66_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_66_luma_write : OUT STD_LOGIC;
    dst_V_pixel_67_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_67_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_67_luma_write : OUT STD_LOGIC;
    dst_V_pixel_68_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_68_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_68_luma_write : OUT STD_LOGIC;
    dst_V_pixel_69_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_69_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_69_luma_write : OUT STD_LOGIC;
    dst_V_pixel_70_luma_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_V_pixel_70_luma_full_n : IN STD_LOGIC;
    dst_V_pixel_70_luma_write : OUT STD_LOGIC );
end;


architecture behav of Sobel_vxConvertColor_tile_Loop_l1_pr is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_20 : BOOLEAN;
    signal strm_out_V_pixel_0_luma_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_601 : BOOLEAN;
    signal exitcond4_i1_fu_1822_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal strm_out_V_pixel_1_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_2_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_3_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_4_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_5_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_6_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_7_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_8_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_9_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_10_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_11_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_12_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_13_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_14_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_15_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_16_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_17_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_18_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_19_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_20_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_21_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_22_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_23_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_24_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_25_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_26_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_27_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_28_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_29_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_30_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_31_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_32_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_33_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_34_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_35_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_36_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_37_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_38_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_39_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_40_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_41_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_42_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_43_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_44_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_45_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_46_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_47_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_48_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_49_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_50_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_51_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_52_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_53_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_54_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_55_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_56_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_57_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_58_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_59_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_60_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_61_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_62_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_63_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_64_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_65_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_66_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_67_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_68_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_69_luma_blk_n : STD_LOGIC;
    signal strm_out_V_pixel_70_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_0_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_1_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_2_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_3_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_4_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_5_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_6_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_7_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_8_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_9_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_10_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_11_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_12_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_13_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_14_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_15_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_16_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_17_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_18_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_19_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_20_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_21_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_22_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_23_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_24_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_25_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_26_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_27_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_28_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_29_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_30_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_31_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_32_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_33_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_34_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_35_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_36_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_37_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_38_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_39_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_40_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_41_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_42_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_43_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_44_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_45_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_46_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_47_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_48_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_49_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_50_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_51_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_52_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_53_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_54_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_55_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_56_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_57_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_58_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_59_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_60_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_61_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_62_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_63_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_64_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_65_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_66_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_67_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_68_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_69_luma_blk_n : STD_LOGIC;
    signal dst_V_pixel_70_luma_blk_n : STD_LOGIC;
    signal i_fu_1828_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal strm_out_V_pixel_1_luma0_status : STD_LOGIC;
    signal dst_V_pixel_1_luma1_status : STD_LOGIC;
    signal ap_sig_757 : BOOLEAN;
    signal i_0_i1_reg_1811 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_767 : BOOLEAN;
    signal strm_out_V_pixel_1_luma0_update : STD_LOGIC;
    signal dst_V_pixel_1_luma1_update : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_757) and not((exitcond4_i1_fu_1822_p2 = ap_const_lv1_0)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i_0_i1_reg_1811_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_767))) then 
                i_0_i1_reg_1811 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0) and not(ap_sig_757))) then 
                i_0_i1_reg_1811 <= i_fu_1828_p2;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, exitcond4_i1_fu_1822_p2, ap_sig_757, ap_sig_767)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_767)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((not(ap_sig_757) and not((exitcond4_i1_fu_1822_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                elsif (((exitcond4_i1_fu_1822_p2 = ap_const_lv1_0) and not(ap_sig_757))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2, ap_sig_757)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_757) and not((exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2, ap_sig_757)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(ap_sig_757) and not((exitcond4_i1_fu_1822_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_20_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_20 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_601_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_601 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_757_assign_proc : process(exitcond4_i1_fu_1822_p2, strm_out_V_pixel_1_luma0_status, dst_V_pixel_1_luma1_status)
    begin
                ap_sig_757 <= (((exitcond4_i1_fu_1822_p2 = ap_const_lv1_0) and (strm_out_V_pixel_1_luma0_status = ap_const_logic_0)) or ((exitcond4_i1_fu_1822_p2 = ap_const_lv1_0) and (dst_V_pixel_1_luma1_status = ap_const_logic_0)));
    end process;


    ap_sig_767_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_767 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_20)
    begin
        if (ap_sig_20) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_601)
    begin
        if (ap_sig_601) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_V_pixel_0_luma_blk_n_assign_proc : process(dst_V_pixel_0_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_0_luma_blk_n <= dst_V_pixel_0_luma_full_n;
        else 
            dst_V_pixel_0_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_0_luma_din <= strm_out_V_pixel_0_luma_dout;
    dst_V_pixel_0_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_10_luma_blk_n_assign_proc : process(dst_V_pixel_10_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_10_luma_blk_n <= dst_V_pixel_10_luma_full_n;
        else 
            dst_V_pixel_10_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_10_luma_din <= strm_out_V_pixel_10_luma_dout;
    dst_V_pixel_10_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_11_luma_blk_n_assign_proc : process(dst_V_pixel_11_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_11_luma_blk_n <= dst_V_pixel_11_luma_full_n;
        else 
            dst_V_pixel_11_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_11_luma_din <= strm_out_V_pixel_11_luma_dout;
    dst_V_pixel_11_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_12_luma_blk_n_assign_proc : process(dst_V_pixel_12_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_12_luma_blk_n <= dst_V_pixel_12_luma_full_n;
        else 
            dst_V_pixel_12_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_12_luma_din <= strm_out_V_pixel_12_luma_dout;
    dst_V_pixel_12_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_13_luma_blk_n_assign_proc : process(dst_V_pixel_13_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_13_luma_blk_n <= dst_V_pixel_13_luma_full_n;
        else 
            dst_V_pixel_13_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_13_luma_din <= strm_out_V_pixel_13_luma_dout;
    dst_V_pixel_13_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_14_luma_blk_n_assign_proc : process(dst_V_pixel_14_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_14_luma_blk_n <= dst_V_pixel_14_luma_full_n;
        else 
            dst_V_pixel_14_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_14_luma_din <= strm_out_V_pixel_14_luma_dout;
    dst_V_pixel_14_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_15_luma_blk_n_assign_proc : process(dst_V_pixel_15_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_15_luma_blk_n <= dst_V_pixel_15_luma_full_n;
        else 
            dst_V_pixel_15_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_15_luma_din <= strm_out_V_pixel_15_luma_dout;
    dst_V_pixel_15_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_16_luma_blk_n_assign_proc : process(dst_V_pixel_16_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_16_luma_blk_n <= dst_V_pixel_16_luma_full_n;
        else 
            dst_V_pixel_16_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_16_luma_din <= strm_out_V_pixel_16_luma_dout;
    dst_V_pixel_16_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_17_luma_blk_n_assign_proc : process(dst_V_pixel_17_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_17_luma_blk_n <= dst_V_pixel_17_luma_full_n;
        else 
            dst_V_pixel_17_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_17_luma_din <= strm_out_V_pixel_17_luma_dout;
    dst_V_pixel_17_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_18_luma_blk_n_assign_proc : process(dst_V_pixel_18_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_18_luma_blk_n <= dst_V_pixel_18_luma_full_n;
        else 
            dst_V_pixel_18_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_18_luma_din <= strm_out_V_pixel_18_luma_dout;
    dst_V_pixel_18_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_19_luma_blk_n_assign_proc : process(dst_V_pixel_19_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_19_luma_blk_n <= dst_V_pixel_19_luma_full_n;
        else 
            dst_V_pixel_19_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_19_luma_din <= strm_out_V_pixel_19_luma_dout;
    dst_V_pixel_19_luma_write <= dst_V_pixel_1_luma1_update;
    dst_V_pixel_1_luma1_status <= (dst_V_pixel_0_luma_full_n and dst_V_pixel_1_luma_full_n and dst_V_pixel_2_luma_full_n and dst_V_pixel_3_luma_full_n and dst_V_pixel_4_luma_full_n and dst_V_pixel_5_luma_full_n and dst_V_pixel_6_luma_full_n and dst_V_pixel_7_luma_full_n and dst_V_pixel_8_luma_full_n and dst_V_pixel_9_luma_full_n and dst_V_pixel_10_luma_full_n and dst_V_pixel_11_luma_full_n and dst_V_pixel_12_luma_full_n and dst_V_pixel_13_luma_full_n and dst_V_pixel_14_luma_full_n and dst_V_pixel_15_luma_full_n and dst_V_pixel_16_luma_full_n and dst_V_pixel_17_luma_full_n and dst_V_pixel_18_luma_full_n and dst_V_pixel_19_luma_full_n and dst_V_pixel_20_luma_full_n and dst_V_pixel_21_luma_full_n and dst_V_pixel_22_luma_full_n and dst_V_pixel_23_luma_full_n and dst_V_pixel_24_luma_full_n and dst_V_pixel_25_luma_full_n and dst_V_pixel_26_luma_full_n and dst_V_pixel_27_luma_full_n and dst_V_pixel_28_luma_full_n and dst_V_pixel_29_luma_full_n and dst_V_pixel_30_luma_full_n and dst_V_pixel_31_luma_full_n and dst_V_pixel_32_luma_full_n and dst_V_pixel_33_luma_full_n and dst_V_pixel_34_luma_full_n and dst_V_pixel_35_luma_full_n and dst_V_pixel_36_luma_full_n and dst_V_pixel_37_luma_full_n and dst_V_pixel_38_luma_full_n and dst_V_pixel_39_luma_full_n and dst_V_pixel_40_luma_full_n and dst_V_pixel_41_luma_full_n and dst_V_pixel_42_luma_full_n and dst_V_pixel_43_luma_full_n and dst_V_pixel_44_luma_full_n and dst_V_pixel_45_luma_full_n and dst_V_pixel_46_luma_full_n and dst_V_pixel_47_luma_full_n and dst_V_pixel_48_luma_full_n and dst_V_pixel_49_luma_full_n and dst_V_pixel_50_luma_full_n and dst_V_pixel_51_luma_full_n and dst_V_pixel_52_luma_full_n and dst_V_pixel_53_luma_full_n and dst_V_pixel_54_luma_full_n and dst_V_pixel_55_luma_full_n and dst_V_pixel_56_luma_full_n and dst_V_pixel_57_luma_full_n and dst_V_pixel_58_luma_full_n and dst_V_pixel_59_luma_full_n and dst_V_pixel_60_luma_full_n and dst_V_pixel_61_luma_full_n and dst_V_pixel_62_luma_full_n and dst_V_pixel_63_luma_full_n and dst_V_pixel_64_luma_full_n and dst_V_pixel_65_luma_full_n and dst_V_pixel_66_luma_full_n and dst_V_pixel_67_luma_full_n and dst_V_pixel_68_luma_full_n and dst_V_pixel_69_luma_full_n and dst_V_pixel_70_luma_full_n);

    dst_V_pixel_1_luma1_update_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2, ap_sig_757)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0) and not(ap_sig_757))) then 
            dst_V_pixel_1_luma1_update <= ap_const_logic_1;
        else 
            dst_V_pixel_1_luma1_update <= ap_const_logic_0;
        end if; 
    end process;


    dst_V_pixel_1_luma_blk_n_assign_proc : process(dst_V_pixel_1_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_1_luma_blk_n <= dst_V_pixel_1_luma_full_n;
        else 
            dst_V_pixel_1_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_1_luma_din <= strm_out_V_pixel_1_luma_dout;
    dst_V_pixel_1_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_20_luma_blk_n_assign_proc : process(dst_V_pixel_20_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_20_luma_blk_n <= dst_V_pixel_20_luma_full_n;
        else 
            dst_V_pixel_20_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_20_luma_din <= strm_out_V_pixel_20_luma_dout;
    dst_V_pixel_20_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_21_luma_blk_n_assign_proc : process(dst_V_pixel_21_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_21_luma_blk_n <= dst_V_pixel_21_luma_full_n;
        else 
            dst_V_pixel_21_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_21_luma_din <= strm_out_V_pixel_21_luma_dout;
    dst_V_pixel_21_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_22_luma_blk_n_assign_proc : process(dst_V_pixel_22_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_22_luma_blk_n <= dst_V_pixel_22_luma_full_n;
        else 
            dst_V_pixel_22_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_22_luma_din <= strm_out_V_pixel_22_luma_dout;
    dst_V_pixel_22_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_23_luma_blk_n_assign_proc : process(dst_V_pixel_23_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_23_luma_blk_n <= dst_V_pixel_23_luma_full_n;
        else 
            dst_V_pixel_23_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_23_luma_din <= strm_out_V_pixel_23_luma_dout;
    dst_V_pixel_23_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_24_luma_blk_n_assign_proc : process(dst_V_pixel_24_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_24_luma_blk_n <= dst_V_pixel_24_luma_full_n;
        else 
            dst_V_pixel_24_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_24_luma_din <= strm_out_V_pixel_24_luma_dout;
    dst_V_pixel_24_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_25_luma_blk_n_assign_proc : process(dst_V_pixel_25_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_25_luma_blk_n <= dst_V_pixel_25_luma_full_n;
        else 
            dst_V_pixel_25_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_25_luma_din <= strm_out_V_pixel_25_luma_dout;
    dst_V_pixel_25_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_26_luma_blk_n_assign_proc : process(dst_V_pixel_26_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_26_luma_blk_n <= dst_V_pixel_26_luma_full_n;
        else 
            dst_V_pixel_26_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_26_luma_din <= strm_out_V_pixel_26_luma_dout;
    dst_V_pixel_26_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_27_luma_blk_n_assign_proc : process(dst_V_pixel_27_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_27_luma_blk_n <= dst_V_pixel_27_luma_full_n;
        else 
            dst_V_pixel_27_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_27_luma_din <= strm_out_V_pixel_27_luma_dout;
    dst_V_pixel_27_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_28_luma_blk_n_assign_proc : process(dst_V_pixel_28_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_28_luma_blk_n <= dst_V_pixel_28_luma_full_n;
        else 
            dst_V_pixel_28_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_28_luma_din <= strm_out_V_pixel_28_luma_dout;
    dst_V_pixel_28_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_29_luma_blk_n_assign_proc : process(dst_V_pixel_29_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_29_luma_blk_n <= dst_V_pixel_29_luma_full_n;
        else 
            dst_V_pixel_29_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_29_luma_din <= strm_out_V_pixel_29_luma_dout;
    dst_V_pixel_29_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_2_luma_blk_n_assign_proc : process(dst_V_pixel_2_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_2_luma_blk_n <= dst_V_pixel_2_luma_full_n;
        else 
            dst_V_pixel_2_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_2_luma_din <= strm_out_V_pixel_2_luma_dout;
    dst_V_pixel_2_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_30_luma_blk_n_assign_proc : process(dst_V_pixel_30_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_30_luma_blk_n <= dst_V_pixel_30_luma_full_n;
        else 
            dst_V_pixel_30_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_30_luma_din <= strm_out_V_pixel_30_luma_dout;
    dst_V_pixel_30_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_31_luma_blk_n_assign_proc : process(dst_V_pixel_31_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_31_luma_blk_n <= dst_V_pixel_31_luma_full_n;
        else 
            dst_V_pixel_31_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_31_luma_din <= strm_out_V_pixel_31_luma_dout;
    dst_V_pixel_31_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_32_luma_blk_n_assign_proc : process(dst_V_pixel_32_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_32_luma_blk_n <= dst_V_pixel_32_luma_full_n;
        else 
            dst_V_pixel_32_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_32_luma_din <= strm_out_V_pixel_32_luma_dout;
    dst_V_pixel_32_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_33_luma_blk_n_assign_proc : process(dst_V_pixel_33_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_33_luma_blk_n <= dst_V_pixel_33_luma_full_n;
        else 
            dst_V_pixel_33_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_33_luma_din <= strm_out_V_pixel_33_luma_dout;
    dst_V_pixel_33_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_34_luma_blk_n_assign_proc : process(dst_V_pixel_34_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_34_luma_blk_n <= dst_V_pixel_34_luma_full_n;
        else 
            dst_V_pixel_34_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_34_luma_din <= strm_out_V_pixel_34_luma_dout;
    dst_V_pixel_34_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_35_luma_blk_n_assign_proc : process(dst_V_pixel_35_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_35_luma_blk_n <= dst_V_pixel_35_luma_full_n;
        else 
            dst_V_pixel_35_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_35_luma_din <= strm_out_V_pixel_35_luma_dout;
    dst_V_pixel_35_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_36_luma_blk_n_assign_proc : process(dst_V_pixel_36_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_36_luma_blk_n <= dst_V_pixel_36_luma_full_n;
        else 
            dst_V_pixel_36_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_36_luma_din <= strm_out_V_pixel_36_luma_dout;
    dst_V_pixel_36_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_37_luma_blk_n_assign_proc : process(dst_V_pixel_37_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_37_luma_blk_n <= dst_V_pixel_37_luma_full_n;
        else 
            dst_V_pixel_37_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_37_luma_din <= strm_out_V_pixel_37_luma_dout;
    dst_V_pixel_37_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_38_luma_blk_n_assign_proc : process(dst_V_pixel_38_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_38_luma_blk_n <= dst_V_pixel_38_luma_full_n;
        else 
            dst_V_pixel_38_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_38_luma_din <= strm_out_V_pixel_38_luma_dout;
    dst_V_pixel_38_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_39_luma_blk_n_assign_proc : process(dst_V_pixel_39_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_39_luma_blk_n <= dst_V_pixel_39_luma_full_n;
        else 
            dst_V_pixel_39_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_39_luma_din <= strm_out_V_pixel_39_luma_dout;
    dst_V_pixel_39_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_3_luma_blk_n_assign_proc : process(dst_V_pixel_3_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_3_luma_blk_n <= dst_V_pixel_3_luma_full_n;
        else 
            dst_V_pixel_3_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_3_luma_din <= strm_out_V_pixel_3_luma_dout;
    dst_V_pixel_3_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_40_luma_blk_n_assign_proc : process(dst_V_pixel_40_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_40_luma_blk_n <= dst_V_pixel_40_luma_full_n;
        else 
            dst_V_pixel_40_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_40_luma_din <= strm_out_V_pixel_40_luma_dout;
    dst_V_pixel_40_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_41_luma_blk_n_assign_proc : process(dst_V_pixel_41_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_41_luma_blk_n <= dst_V_pixel_41_luma_full_n;
        else 
            dst_V_pixel_41_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_41_luma_din <= strm_out_V_pixel_41_luma_dout;
    dst_V_pixel_41_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_42_luma_blk_n_assign_proc : process(dst_V_pixel_42_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_42_luma_blk_n <= dst_V_pixel_42_luma_full_n;
        else 
            dst_V_pixel_42_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_42_luma_din <= strm_out_V_pixel_42_luma_dout;
    dst_V_pixel_42_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_43_luma_blk_n_assign_proc : process(dst_V_pixel_43_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_43_luma_blk_n <= dst_V_pixel_43_luma_full_n;
        else 
            dst_V_pixel_43_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_43_luma_din <= strm_out_V_pixel_43_luma_dout;
    dst_V_pixel_43_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_44_luma_blk_n_assign_proc : process(dst_V_pixel_44_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_44_luma_blk_n <= dst_V_pixel_44_luma_full_n;
        else 
            dst_V_pixel_44_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_44_luma_din <= strm_out_V_pixel_44_luma_dout;
    dst_V_pixel_44_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_45_luma_blk_n_assign_proc : process(dst_V_pixel_45_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_45_luma_blk_n <= dst_V_pixel_45_luma_full_n;
        else 
            dst_V_pixel_45_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_45_luma_din <= strm_out_V_pixel_45_luma_dout;
    dst_V_pixel_45_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_46_luma_blk_n_assign_proc : process(dst_V_pixel_46_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_46_luma_blk_n <= dst_V_pixel_46_luma_full_n;
        else 
            dst_V_pixel_46_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_46_luma_din <= strm_out_V_pixel_46_luma_dout;
    dst_V_pixel_46_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_47_luma_blk_n_assign_proc : process(dst_V_pixel_47_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_47_luma_blk_n <= dst_V_pixel_47_luma_full_n;
        else 
            dst_V_pixel_47_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_47_luma_din <= strm_out_V_pixel_47_luma_dout;
    dst_V_pixel_47_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_48_luma_blk_n_assign_proc : process(dst_V_pixel_48_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_48_luma_blk_n <= dst_V_pixel_48_luma_full_n;
        else 
            dst_V_pixel_48_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_48_luma_din <= strm_out_V_pixel_48_luma_dout;
    dst_V_pixel_48_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_49_luma_blk_n_assign_proc : process(dst_V_pixel_49_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_49_luma_blk_n <= dst_V_pixel_49_luma_full_n;
        else 
            dst_V_pixel_49_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_49_luma_din <= strm_out_V_pixel_49_luma_dout;
    dst_V_pixel_49_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_4_luma_blk_n_assign_proc : process(dst_V_pixel_4_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_4_luma_blk_n <= dst_V_pixel_4_luma_full_n;
        else 
            dst_V_pixel_4_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_4_luma_din <= strm_out_V_pixel_4_luma_dout;
    dst_V_pixel_4_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_50_luma_blk_n_assign_proc : process(dst_V_pixel_50_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_50_luma_blk_n <= dst_V_pixel_50_luma_full_n;
        else 
            dst_V_pixel_50_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_50_luma_din <= strm_out_V_pixel_50_luma_dout;
    dst_V_pixel_50_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_51_luma_blk_n_assign_proc : process(dst_V_pixel_51_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_51_luma_blk_n <= dst_V_pixel_51_luma_full_n;
        else 
            dst_V_pixel_51_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_51_luma_din <= strm_out_V_pixel_51_luma_dout;
    dst_V_pixel_51_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_52_luma_blk_n_assign_proc : process(dst_V_pixel_52_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_52_luma_blk_n <= dst_V_pixel_52_luma_full_n;
        else 
            dst_V_pixel_52_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_52_luma_din <= strm_out_V_pixel_52_luma_dout;
    dst_V_pixel_52_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_53_luma_blk_n_assign_proc : process(dst_V_pixel_53_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_53_luma_blk_n <= dst_V_pixel_53_luma_full_n;
        else 
            dst_V_pixel_53_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_53_luma_din <= strm_out_V_pixel_53_luma_dout;
    dst_V_pixel_53_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_54_luma_blk_n_assign_proc : process(dst_V_pixel_54_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_54_luma_blk_n <= dst_V_pixel_54_luma_full_n;
        else 
            dst_V_pixel_54_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_54_luma_din <= strm_out_V_pixel_54_luma_dout;
    dst_V_pixel_54_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_55_luma_blk_n_assign_proc : process(dst_V_pixel_55_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_55_luma_blk_n <= dst_V_pixel_55_luma_full_n;
        else 
            dst_V_pixel_55_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_55_luma_din <= strm_out_V_pixel_55_luma_dout;
    dst_V_pixel_55_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_56_luma_blk_n_assign_proc : process(dst_V_pixel_56_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_56_luma_blk_n <= dst_V_pixel_56_luma_full_n;
        else 
            dst_V_pixel_56_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_56_luma_din <= strm_out_V_pixel_56_luma_dout;
    dst_V_pixel_56_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_57_luma_blk_n_assign_proc : process(dst_V_pixel_57_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_57_luma_blk_n <= dst_V_pixel_57_luma_full_n;
        else 
            dst_V_pixel_57_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_57_luma_din <= strm_out_V_pixel_57_luma_dout;
    dst_V_pixel_57_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_58_luma_blk_n_assign_proc : process(dst_V_pixel_58_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_58_luma_blk_n <= dst_V_pixel_58_luma_full_n;
        else 
            dst_V_pixel_58_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_58_luma_din <= strm_out_V_pixel_58_luma_dout;
    dst_V_pixel_58_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_59_luma_blk_n_assign_proc : process(dst_V_pixel_59_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_59_luma_blk_n <= dst_V_pixel_59_luma_full_n;
        else 
            dst_V_pixel_59_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_59_luma_din <= strm_out_V_pixel_59_luma_dout;
    dst_V_pixel_59_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_5_luma_blk_n_assign_proc : process(dst_V_pixel_5_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_5_luma_blk_n <= dst_V_pixel_5_luma_full_n;
        else 
            dst_V_pixel_5_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_5_luma_din <= strm_out_V_pixel_5_luma_dout;
    dst_V_pixel_5_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_60_luma_blk_n_assign_proc : process(dst_V_pixel_60_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_60_luma_blk_n <= dst_V_pixel_60_luma_full_n;
        else 
            dst_V_pixel_60_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_60_luma_din <= strm_out_V_pixel_60_luma_dout;
    dst_V_pixel_60_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_61_luma_blk_n_assign_proc : process(dst_V_pixel_61_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_61_luma_blk_n <= dst_V_pixel_61_luma_full_n;
        else 
            dst_V_pixel_61_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_61_luma_din <= strm_out_V_pixel_61_luma_dout;
    dst_V_pixel_61_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_62_luma_blk_n_assign_proc : process(dst_V_pixel_62_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_62_luma_blk_n <= dst_V_pixel_62_luma_full_n;
        else 
            dst_V_pixel_62_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_62_luma_din <= strm_out_V_pixel_62_luma_dout;
    dst_V_pixel_62_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_63_luma_blk_n_assign_proc : process(dst_V_pixel_63_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_63_luma_blk_n <= dst_V_pixel_63_luma_full_n;
        else 
            dst_V_pixel_63_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_63_luma_din <= strm_out_V_pixel_63_luma_dout;
    dst_V_pixel_63_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_64_luma_blk_n_assign_proc : process(dst_V_pixel_64_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_64_luma_blk_n <= dst_V_pixel_64_luma_full_n;
        else 
            dst_V_pixel_64_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_64_luma_din <= strm_out_V_pixel_64_luma_dout;
    dst_V_pixel_64_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_65_luma_blk_n_assign_proc : process(dst_V_pixel_65_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_65_luma_blk_n <= dst_V_pixel_65_luma_full_n;
        else 
            dst_V_pixel_65_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_65_luma_din <= strm_out_V_pixel_65_luma_dout;
    dst_V_pixel_65_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_66_luma_blk_n_assign_proc : process(dst_V_pixel_66_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_66_luma_blk_n <= dst_V_pixel_66_luma_full_n;
        else 
            dst_V_pixel_66_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_66_luma_din <= strm_out_V_pixel_66_luma_dout;
    dst_V_pixel_66_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_67_luma_blk_n_assign_proc : process(dst_V_pixel_67_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_67_luma_blk_n <= dst_V_pixel_67_luma_full_n;
        else 
            dst_V_pixel_67_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_67_luma_din <= strm_out_V_pixel_67_luma_dout;
    dst_V_pixel_67_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_68_luma_blk_n_assign_proc : process(dst_V_pixel_68_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_68_luma_blk_n <= dst_V_pixel_68_luma_full_n;
        else 
            dst_V_pixel_68_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_68_luma_din <= strm_out_V_pixel_68_luma_dout;
    dst_V_pixel_68_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_69_luma_blk_n_assign_proc : process(dst_V_pixel_69_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_69_luma_blk_n <= dst_V_pixel_69_luma_full_n;
        else 
            dst_V_pixel_69_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_69_luma_din <= strm_out_V_pixel_69_luma_dout;
    dst_V_pixel_69_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_6_luma_blk_n_assign_proc : process(dst_V_pixel_6_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_6_luma_blk_n <= dst_V_pixel_6_luma_full_n;
        else 
            dst_V_pixel_6_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_6_luma_din <= strm_out_V_pixel_6_luma_dout;
    dst_V_pixel_6_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_70_luma_blk_n_assign_proc : process(dst_V_pixel_70_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_70_luma_blk_n <= dst_V_pixel_70_luma_full_n;
        else 
            dst_V_pixel_70_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_70_luma_din <= strm_out_V_pixel_70_luma_dout;
    dst_V_pixel_70_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_7_luma_blk_n_assign_proc : process(dst_V_pixel_7_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_7_luma_blk_n <= dst_V_pixel_7_luma_full_n;
        else 
            dst_V_pixel_7_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_7_luma_din <= strm_out_V_pixel_7_luma_dout;
    dst_V_pixel_7_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_8_luma_blk_n_assign_proc : process(dst_V_pixel_8_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_8_luma_blk_n <= dst_V_pixel_8_luma_full_n;
        else 
            dst_V_pixel_8_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_8_luma_din <= strm_out_V_pixel_8_luma_dout;
    dst_V_pixel_8_luma_write <= dst_V_pixel_1_luma1_update;

    dst_V_pixel_9_luma_blk_n_assign_proc : process(dst_V_pixel_9_luma_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            dst_V_pixel_9_luma_blk_n <= dst_V_pixel_9_luma_full_n;
        else 
            dst_V_pixel_9_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_V_pixel_9_luma_din <= strm_out_V_pixel_9_luma_dout;
    dst_V_pixel_9_luma_write <= dst_V_pixel_1_luma1_update;
    exitcond4_i1_fu_1822_p2 <= "1" when (i_0_i1_reg_1811 = ap_const_lv9_1E0) else "0";
    i_fu_1828_p2 <= std_logic_vector(unsigned(i_0_i1_reg_1811) + unsigned(ap_const_lv9_1));

    strm_out_V_pixel_0_luma_blk_n_assign_proc : process(strm_out_V_pixel_0_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_0_luma_blk_n <= strm_out_V_pixel_0_luma_empty_n;
        else 
            strm_out_V_pixel_0_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_0_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_10_luma_blk_n_assign_proc : process(strm_out_V_pixel_10_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_10_luma_blk_n <= strm_out_V_pixel_10_luma_empty_n;
        else 
            strm_out_V_pixel_10_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_10_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_11_luma_blk_n_assign_proc : process(strm_out_V_pixel_11_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_11_luma_blk_n <= strm_out_V_pixel_11_luma_empty_n;
        else 
            strm_out_V_pixel_11_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_11_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_12_luma_blk_n_assign_proc : process(strm_out_V_pixel_12_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_12_luma_blk_n <= strm_out_V_pixel_12_luma_empty_n;
        else 
            strm_out_V_pixel_12_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_12_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_13_luma_blk_n_assign_proc : process(strm_out_V_pixel_13_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_13_luma_blk_n <= strm_out_V_pixel_13_luma_empty_n;
        else 
            strm_out_V_pixel_13_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_13_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_14_luma_blk_n_assign_proc : process(strm_out_V_pixel_14_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_14_luma_blk_n <= strm_out_V_pixel_14_luma_empty_n;
        else 
            strm_out_V_pixel_14_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_14_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_15_luma_blk_n_assign_proc : process(strm_out_V_pixel_15_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_15_luma_blk_n <= strm_out_V_pixel_15_luma_empty_n;
        else 
            strm_out_V_pixel_15_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_15_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_16_luma_blk_n_assign_proc : process(strm_out_V_pixel_16_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_16_luma_blk_n <= strm_out_V_pixel_16_luma_empty_n;
        else 
            strm_out_V_pixel_16_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_16_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_17_luma_blk_n_assign_proc : process(strm_out_V_pixel_17_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_17_luma_blk_n <= strm_out_V_pixel_17_luma_empty_n;
        else 
            strm_out_V_pixel_17_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_17_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_18_luma_blk_n_assign_proc : process(strm_out_V_pixel_18_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_18_luma_blk_n <= strm_out_V_pixel_18_luma_empty_n;
        else 
            strm_out_V_pixel_18_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_18_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_19_luma_blk_n_assign_proc : process(strm_out_V_pixel_19_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_19_luma_blk_n <= strm_out_V_pixel_19_luma_empty_n;
        else 
            strm_out_V_pixel_19_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_19_luma_read <= strm_out_V_pixel_1_luma0_update;
    strm_out_V_pixel_1_luma0_status <= (strm_out_V_pixel_0_luma_empty_n and strm_out_V_pixel_1_luma_empty_n and strm_out_V_pixel_2_luma_empty_n and strm_out_V_pixel_3_luma_empty_n and strm_out_V_pixel_4_luma_empty_n and strm_out_V_pixel_5_luma_empty_n and strm_out_V_pixel_6_luma_empty_n and strm_out_V_pixel_7_luma_empty_n and strm_out_V_pixel_8_luma_empty_n and strm_out_V_pixel_9_luma_empty_n and strm_out_V_pixel_10_luma_empty_n and strm_out_V_pixel_11_luma_empty_n and strm_out_V_pixel_12_luma_empty_n and strm_out_V_pixel_13_luma_empty_n and strm_out_V_pixel_14_luma_empty_n and strm_out_V_pixel_15_luma_empty_n and strm_out_V_pixel_16_luma_empty_n and strm_out_V_pixel_17_luma_empty_n and strm_out_V_pixel_18_luma_empty_n and strm_out_V_pixel_19_luma_empty_n and strm_out_V_pixel_20_luma_empty_n and strm_out_V_pixel_21_luma_empty_n and strm_out_V_pixel_22_luma_empty_n and strm_out_V_pixel_23_luma_empty_n and strm_out_V_pixel_24_luma_empty_n and strm_out_V_pixel_25_luma_empty_n and strm_out_V_pixel_26_luma_empty_n and strm_out_V_pixel_27_luma_empty_n and strm_out_V_pixel_28_luma_empty_n and strm_out_V_pixel_29_luma_empty_n and strm_out_V_pixel_30_luma_empty_n and strm_out_V_pixel_31_luma_empty_n and strm_out_V_pixel_32_luma_empty_n and strm_out_V_pixel_33_luma_empty_n and strm_out_V_pixel_34_luma_empty_n and strm_out_V_pixel_35_luma_empty_n and strm_out_V_pixel_36_luma_empty_n and strm_out_V_pixel_37_luma_empty_n and strm_out_V_pixel_38_luma_empty_n and strm_out_V_pixel_39_luma_empty_n and strm_out_V_pixel_40_luma_empty_n and strm_out_V_pixel_41_luma_empty_n and strm_out_V_pixel_42_luma_empty_n and strm_out_V_pixel_43_luma_empty_n and strm_out_V_pixel_44_luma_empty_n and strm_out_V_pixel_45_luma_empty_n and strm_out_V_pixel_46_luma_empty_n and strm_out_V_pixel_47_luma_empty_n and strm_out_V_pixel_48_luma_empty_n and strm_out_V_pixel_49_luma_empty_n and strm_out_V_pixel_50_luma_empty_n and strm_out_V_pixel_51_luma_empty_n and strm_out_V_pixel_52_luma_empty_n and strm_out_V_pixel_53_luma_empty_n and strm_out_V_pixel_54_luma_empty_n and strm_out_V_pixel_55_luma_empty_n and strm_out_V_pixel_56_luma_empty_n and strm_out_V_pixel_57_luma_empty_n and strm_out_V_pixel_58_luma_empty_n and strm_out_V_pixel_59_luma_empty_n and strm_out_V_pixel_60_luma_empty_n and strm_out_V_pixel_61_luma_empty_n and strm_out_V_pixel_62_luma_empty_n and strm_out_V_pixel_63_luma_empty_n and strm_out_V_pixel_64_luma_empty_n and strm_out_V_pixel_65_luma_empty_n and strm_out_V_pixel_66_luma_empty_n and strm_out_V_pixel_67_luma_empty_n and strm_out_V_pixel_68_luma_empty_n and strm_out_V_pixel_69_luma_empty_n and strm_out_V_pixel_70_luma_empty_n);

    strm_out_V_pixel_1_luma0_update_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2, ap_sig_757)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0) and not(ap_sig_757))) then 
            strm_out_V_pixel_1_luma0_update <= ap_const_logic_1;
        else 
            strm_out_V_pixel_1_luma0_update <= ap_const_logic_0;
        end if; 
    end process;


    strm_out_V_pixel_1_luma_blk_n_assign_proc : process(strm_out_V_pixel_1_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_1_luma_blk_n <= strm_out_V_pixel_1_luma_empty_n;
        else 
            strm_out_V_pixel_1_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_1_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_20_luma_blk_n_assign_proc : process(strm_out_V_pixel_20_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_20_luma_blk_n <= strm_out_V_pixel_20_luma_empty_n;
        else 
            strm_out_V_pixel_20_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_20_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_21_luma_blk_n_assign_proc : process(strm_out_V_pixel_21_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_21_luma_blk_n <= strm_out_V_pixel_21_luma_empty_n;
        else 
            strm_out_V_pixel_21_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_21_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_22_luma_blk_n_assign_proc : process(strm_out_V_pixel_22_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_22_luma_blk_n <= strm_out_V_pixel_22_luma_empty_n;
        else 
            strm_out_V_pixel_22_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_22_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_23_luma_blk_n_assign_proc : process(strm_out_V_pixel_23_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_23_luma_blk_n <= strm_out_V_pixel_23_luma_empty_n;
        else 
            strm_out_V_pixel_23_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_23_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_24_luma_blk_n_assign_proc : process(strm_out_V_pixel_24_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_24_luma_blk_n <= strm_out_V_pixel_24_luma_empty_n;
        else 
            strm_out_V_pixel_24_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_24_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_25_luma_blk_n_assign_proc : process(strm_out_V_pixel_25_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_25_luma_blk_n <= strm_out_V_pixel_25_luma_empty_n;
        else 
            strm_out_V_pixel_25_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_25_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_26_luma_blk_n_assign_proc : process(strm_out_V_pixel_26_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_26_luma_blk_n <= strm_out_V_pixel_26_luma_empty_n;
        else 
            strm_out_V_pixel_26_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_26_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_27_luma_blk_n_assign_proc : process(strm_out_V_pixel_27_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_27_luma_blk_n <= strm_out_V_pixel_27_luma_empty_n;
        else 
            strm_out_V_pixel_27_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_27_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_28_luma_blk_n_assign_proc : process(strm_out_V_pixel_28_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_28_luma_blk_n <= strm_out_V_pixel_28_luma_empty_n;
        else 
            strm_out_V_pixel_28_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_28_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_29_luma_blk_n_assign_proc : process(strm_out_V_pixel_29_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_29_luma_blk_n <= strm_out_V_pixel_29_luma_empty_n;
        else 
            strm_out_V_pixel_29_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_29_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_2_luma_blk_n_assign_proc : process(strm_out_V_pixel_2_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_2_luma_blk_n <= strm_out_V_pixel_2_luma_empty_n;
        else 
            strm_out_V_pixel_2_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_2_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_30_luma_blk_n_assign_proc : process(strm_out_V_pixel_30_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_30_luma_blk_n <= strm_out_V_pixel_30_luma_empty_n;
        else 
            strm_out_V_pixel_30_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_30_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_31_luma_blk_n_assign_proc : process(strm_out_V_pixel_31_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_31_luma_blk_n <= strm_out_V_pixel_31_luma_empty_n;
        else 
            strm_out_V_pixel_31_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_31_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_32_luma_blk_n_assign_proc : process(strm_out_V_pixel_32_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_32_luma_blk_n <= strm_out_V_pixel_32_luma_empty_n;
        else 
            strm_out_V_pixel_32_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_32_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_33_luma_blk_n_assign_proc : process(strm_out_V_pixel_33_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_33_luma_blk_n <= strm_out_V_pixel_33_luma_empty_n;
        else 
            strm_out_V_pixel_33_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_33_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_34_luma_blk_n_assign_proc : process(strm_out_V_pixel_34_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_34_luma_blk_n <= strm_out_V_pixel_34_luma_empty_n;
        else 
            strm_out_V_pixel_34_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_34_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_35_luma_blk_n_assign_proc : process(strm_out_V_pixel_35_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_35_luma_blk_n <= strm_out_V_pixel_35_luma_empty_n;
        else 
            strm_out_V_pixel_35_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_35_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_36_luma_blk_n_assign_proc : process(strm_out_V_pixel_36_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_36_luma_blk_n <= strm_out_V_pixel_36_luma_empty_n;
        else 
            strm_out_V_pixel_36_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_36_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_37_luma_blk_n_assign_proc : process(strm_out_V_pixel_37_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_37_luma_blk_n <= strm_out_V_pixel_37_luma_empty_n;
        else 
            strm_out_V_pixel_37_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_37_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_38_luma_blk_n_assign_proc : process(strm_out_V_pixel_38_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_38_luma_blk_n <= strm_out_V_pixel_38_luma_empty_n;
        else 
            strm_out_V_pixel_38_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_38_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_39_luma_blk_n_assign_proc : process(strm_out_V_pixel_39_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_39_luma_blk_n <= strm_out_V_pixel_39_luma_empty_n;
        else 
            strm_out_V_pixel_39_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_39_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_3_luma_blk_n_assign_proc : process(strm_out_V_pixel_3_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_3_luma_blk_n <= strm_out_V_pixel_3_luma_empty_n;
        else 
            strm_out_V_pixel_3_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_3_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_40_luma_blk_n_assign_proc : process(strm_out_V_pixel_40_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_40_luma_blk_n <= strm_out_V_pixel_40_luma_empty_n;
        else 
            strm_out_V_pixel_40_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_40_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_41_luma_blk_n_assign_proc : process(strm_out_V_pixel_41_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_41_luma_blk_n <= strm_out_V_pixel_41_luma_empty_n;
        else 
            strm_out_V_pixel_41_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_41_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_42_luma_blk_n_assign_proc : process(strm_out_V_pixel_42_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_42_luma_blk_n <= strm_out_V_pixel_42_luma_empty_n;
        else 
            strm_out_V_pixel_42_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_42_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_43_luma_blk_n_assign_proc : process(strm_out_V_pixel_43_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_43_luma_blk_n <= strm_out_V_pixel_43_luma_empty_n;
        else 
            strm_out_V_pixel_43_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_43_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_44_luma_blk_n_assign_proc : process(strm_out_V_pixel_44_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_44_luma_blk_n <= strm_out_V_pixel_44_luma_empty_n;
        else 
            strm_out_V_pixel_44_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_44_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_45_luma_blk_n_assign_proc : process(strm_out_V_pixel_45_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_45_luma_blk_n <= strm_out_V_pixel_45_luma_empty_n;
        else 
            strm_out_V_pixel_45_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_45_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_46_luma_blk_n_assign_proc : process(strm_out_V_pixel_46_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_46_luma_blk_n <= strm_out_V_pixel_46_luma_empty_n;
        else 
            strm_out_V_pixel_46_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_46_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_47_luma_blk_n_assign_proc : process(strm_out_V_pixel_47_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_47_luma_blk_n <= strm_out_V_pixel_47_luma_empty_n;
        else 
            strm_out_V_pixel_47_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_47_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_48_luma_blk_n_assign_proc : process(strm_out_V_pixel_48_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_48_luma_blk_n <= strm_out_V_pixel_48_luma_empty_n;
        else 
            strm_out_V_pixel_48_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_48_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_49_luma_blk_n_assign_proc : process(strm_out_V_pixel_49_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_49_luma_blk_n <= strm_out_V_pixel_49_luma_empty_n;
        else 
            strm_out_V_pixel_49_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_49_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_4_luma_blk_n_assign_proc : process(strm_out_V_pixel_4_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_4_luma_blk_n <= strm_out_V_pixel_4_luma_empty_n;
        else 
            strm_out_V_pixel_4_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_4_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_50_luma_blk_n_assign_proc : process(strm_out_V_pixel_50_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_50_luma_blk_n <= strm_out_V_pixel_50_luma_empty_n;
        else 
            strm_out_V_pixel_50_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_50_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_51_luma_blk_n_assign_proc : process(strm_out_V_pixel_51_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_51_luma_blk_n <= strm_out_V_pixel_51_luma_empty_n;
        else 
            strm_out_V_pixel_51_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_51_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_52_luma_blk_n_assign_proc : process(strm_out_V_pixel_52_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_52_luma_blk_n <= strm_out_V_pixel_52_luma_empty_n;
        else 
            strm_out_V_pixel_52_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_52_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_53_luma_blk_n_assign_proc : process(strm_out_V_pixel_53_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_53_luma_blk_n <= strm_out_V_pixel_53_luma_empty_n;
        else 
            strm_out_V_pixel_53_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_53_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_54_luma_blk_n_assign_proc : process(strm_out_V_pixel_54_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_54_luma_blk_n <= strm_out_V_pixel_54_luma_empty_n;
        else 
            strm_out_V_pixel_54_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_54_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_55_luma_blk_n_assign_proc : process(strm_out_V_pixel_55_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_55_luma_blk_n <= strm_out_V_pixel_55_luma_empty_n;
        else 
            strm_out_V_pixel_55_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_55_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_56_luma_blk_n_assign_proc : process(strm_out_V_pixel_56_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_56_luma_blk_n <= strm_out_V_pixel_56_luma_empty_n;
        else 
            strm_out_V_pixel_56_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_56_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_57_luma_blk_n_assign_proc : process(strm_out_V_pixel_57_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_57_luma_blk_n <= strm_out_V_pixel_57_luma_empty_n;
        else 
            strm_out_V_pixel_57_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_57_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_58_luma_blk_n_assign_proc : process(strm_out_V_pixel_58_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_58_luma_blk_n <= strm_out_V_pixel_58_luma_empty_n;
        else 
            strm_out_V_pixel_58_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_58_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_59_luma_blk_n_assign_proc : process(strm_out_V_pixel_59_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_59_luma_blk_n <= strm_out_V_pixel_59_luma_empty_n;
        else 
            strm_out_V_pixel_59_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_59_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_5_luma_blk_n_assign_proc : process(strm_out_V_pixel_5_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_5_luma_blk_n <= strm_out_V_pixel_5_luma_empty_n;
        else 
            strm_out_V_pixel_5_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_5_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_60_luma_blk_n_assign_proc : process(strm_out_V_pixel_60_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_60_luma_blk_n <= strm_out_V_pixel_60_luma_empty_n;
        else 
            strm_out_V_pixel_60_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_60_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_61_luma_blk_n_assign_proc : process(strm_out_V_pixel_61_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_61_luma_blk_n <= strm_out_V_pixel_61_luma_empty_n;
        else 
            strm_out_V_pixel_61_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_61_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_62_luma_blk_n_assign_proc : process(strm_out_V_pixel_62_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_62_luma_blk_n <= strm_out_V_pixel_62_luma_empty_n;
        else 
            strm_out_V_pixel_62_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_62_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_63_luma_blk_n_assign_proc : process(strm_out_V_pixel_63_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_63_luma_blk_n <= strm_out_V_pixel_63_luma_empty_n;
        else 
            strm_out_V_pixel_63_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_63_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_64_luma_blk_n_assign_proc : process(strm_out_V_pixel_64_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_64_luma_blk_n <= strm_out_V_pixel_64_luma_empty_n;
        else 
            strm_out_V_pixel_64_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_64_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_65_luma_blk_n_assign_proc : process(strm_out_V_pixel_65_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_65_luma_blk_n <= strm_out_V_pixel_65_luma_empty_n;
        else 
            strm_out_V_pixel_65_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_65_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_66_luma_blk_n_assign_proc : process(strm_out_V_pixel_66_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_66_luma_blk_n <= strm_out_V_pixel_66_luma_empty_n;
        else 
            strm_out_V_pixel_66_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_66_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_67_luma_blk_n_assign_proc : process(strm_out_V_pixel_67_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_67_luma_blk_n <= strm_out_V_pixel_67_luma_empty_n;
        else 
            strm_out_V_pixel_67_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_67_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_68_luma_blk_n_assign_proc : process(strm_out_V_pixel_68_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_68_luma_blk_n <= strm_out_V_pixel_68_luma_empty_n;
        else 
            strm_out_V_pixel_68_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_68_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_69_luma_blk_n_assign_proc : process(strm_out_V_pixel_69_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_69_luma_blk_n <= strm_out_V_pixel_69_luma_empty_n;
        else 
            strm_out_V_pixel_69_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_69_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_6_luma_blk_n_assign_proc : process(strm_out_V_pixel_6_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_6_luma_blk_n <= strm_out_V_pixel_6_luma_empty_n;
        else 
            strm_out_V_pixel_6_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_6_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_70_luma_blk_n_assign_proc : process(strm_out_V_pixel_70_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_70_luma_blk_n <= strm_out_V_pixel_70_luma_empty_n;
        else 
            strm_out_V_pixel_70_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_70_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_7_luma_blk_n_assign_proc : process(strm_out_V_pixel_7_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_7_luma_blk_n <= strm_out_V_pixel_7_luma_empty_n;
        else 
            strm_out_V_pixel_7_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_7_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_8_luma_blk_n_assign_proc : process(strm_out_V_pixel_8_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_8_luma_blk_n <= strm_out_V_pixel_8_luma_empty_n;
        else 
            strm_out_V_pixel_8_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_8_luma_read <= strm_out_V_pixel_1_luma0_update;

    strm_out_V_pixel_9_luma_blk_n_assign_proc : process(strm_out_V_pixel_9_luma_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond4_i1_fu_1822_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond4_i1_fu_1822_p2 = ap_const_lv1_0))) then 
            strm_out_V_pixel_9_luma_blk_n <= strm_out_V_pixel_9_luma_empty_n;
        else 
            strm_out_V_pixel_9_luma_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    strm_out_V_pixel_9_luma_read <= strm_out_V_pixel_1_luma0_update;
end behav;
