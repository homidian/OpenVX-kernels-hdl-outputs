-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Sobel_rgb2yuv_bt709 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    r : IN STD_LOGIC_VECTOR (7 downto 0);
    g : IN STD_LOGIC_VECTOR (7 downto 0);
    b : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of Sobel_rgb2yuv_bt709 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_true : BOOLEAN := true;
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv23_36 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000110110";
    constant ap_const_lv24_B7 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010110111";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal b_read_reg_132 : STD_LOGIC_VECTOR (7 downto 0);
    signal g_read_reg_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_read_reg_143 : STD_LOGIC_VECTOR (7 downto 0);
    signal f_r_fu_48_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal f_g_fu_55_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl_fu_70_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl1_fu_81_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl1_cast_fu_88_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl_cast_fu_77_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_5_fu_92_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_114_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_123_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_114_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_114_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_114_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_123_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_123_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_123_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_114_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_114_p20 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_123_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_123_p20 : STD_LOGIC_VECTOR (23 downto 0);

    component Sobel_mac_muladd_16ns_7ns_21ns_23_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component Sobel_mac_muladd_16ns_9ns_23ns_24_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (22 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    Sobel_mac_muladd_16ns_7ns_21ns_23_1_U427 : component Sobel_mac_muladd_16ns_7ns_21ns_23_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 7,
        din2_WIDTH => 21,
        dout_WIDTH => 23)
    port map (
        din0 => grp_fu_114_p0,
        din1 => grp_fu_114_p1,
        din2 => grp_fu_114_p2,
        dout => grp_fu_114_p3);

    Sobel_mac_muladd_16ns_9ns_23ns_24_1_U428 : component Sobel_mac_muladd_16ns_9ns_23ns_24_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        din2_WIDTH => 23,
        dout_WIDTH => 24)
    port map (
        din0 => grp_fu_123_p0,
        din1 => grp_fu_123_p1,
        din2 => grp_fu_123_p2,
        dout => grp_fu_123_p3);




    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                b_read_reg_132 <= b;
                g_read_reg_138 <= g;
                r_read_reg_143 <= r;
            end if;
        end if;
    end process;
    ap_return <= grp_fu_123_p3(23 downto 16);
    f_g_fu_55_p3 <= (g_read_reg_138 & ap_const_lv8_0);
    f_r_fu_48_p3 <= (r_read_reg_143 & ap_const_lv8_0);
    grp_fu_114_p0 <= grp_fu_114_p00(16 - 1 downto 0);
    grp_fu_114_p00 <= std_logic_vector(resize(unsigned(f_r_fu_48_p3),23));
    grp_fu_114_p1 <= ap_const_lv23_36(7 - 1 downto 0);
    grp_fu_114_p2 <= grp_fu_114_p20(21 - 1 downto 0);
    grp_fu_114_p20 <= std_logic_vector(resize(unsigned(tmp_5_fu_92_p2),23));
    grp_fu_123_p0 <= grp_fu_123_p00(16 - 1 downto 0);
    grp_fu_123_p00 <= std_logic_vector(resize(unsigned(f_g_fu_55_p3),24));
    grp_fu_123_p1 <= ap_const_lv24_B7(9 - 1 downto 0);
    grp_fu_123_p2 <= grp_fu_123_p20(23 - 1 downto 0);
    grp_fu_123_p20 <= std_logic_vector(resize(unsigned(grp_fu_114_p3),24));
    p_shl1_cast_fu_88_p1 <= std_logic_vector(resize(unsigned(p_shl1_fu_81_p3),21));
    p_shl1_fu_81_p3 <= (b_read_reg_132 & ap_const_lv9_0);
    p_shl_cast_fu_77_p1 <= std_logic_vector(resize(unsigned(p_shl_fu_70_p3),21));
    p_shl_fu_70_p3 <= (b_read_reg_132 & ap_const_lv12_0);
    tmp_5_fu_92_p2 <= std_logic_vector(unsigned(p_shl1_cast_fu_88_p1) + unsigned(p_shl_cast_fu_77_p1));
end behav;
